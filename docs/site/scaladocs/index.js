Index.PACKAGES = {"scala.collection" : [], "io.smartdatalake.util.misc" : [{"name" : "io.smartdatalake.util.misc.AclDef", "shortDescription" : "Describes a complete ACL Specification (basic owner\/group\/other permissions AND extended ACLS)to be applied to a Data Object on writing", "members_case class" : [{"member" : "io.smartdatalake.util.misc.AclDef#<init>", "error" : "unsupported entity"}, {"label" : "acls", "tail" : ": Seq[AclElement]", "member" : "io.smartdatalake.util.misc.AclDef.acls", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#acls:Seq[io.smartdatalake.util.misc.AclElement]", "kind" : "val"}, {"label" : "permission", "tail" : ": String", "member" : "io.smartdatalake.util.misc.AclDef.permission", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#permission:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/AclDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/util\/misc\/AclDef.html", "kind" : "case class"}, {"name" : "io.smartdatalake.util.misc.AclElement", "shortDescription" : "Describes a single extended ACL to be applied to a Data Objectin addition to the basic file system permissions", "members_case class" : [{"label" : "getAclSpec", "tail" : "(): String", "member" : "io.smartdatalake.util.misc.AclElement.getAclSpec", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#getAclSpec:String", "kind" : "def"}, {"member" : "io.smartdatalake.util.misc.AclElement#<init>", "error" : "unsupported entity"}, {"label" : "permission", "tail" : ": String", "member" : "io.smartdatalake.util.misc.AclElement.permission", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#permission:String", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "io.smartdatalake.util.misc.AclElement.name", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#name:String", "kind" : "val"}, {"label" : "aclType", "tail" : ": String", "member" : "io.smartdatalake.util.misc.AclElement.aclType", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#aclType:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/AclElement.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/util\/misc\/AclElement.html", "kind" : "case class"}, {"name" : "io.smartdatalake.util.misc.DefaultExpressionData", "shortDescription" : "", "object" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html", "members_object" : [{"label" : "from", "tail" : "(context: ActionPipelineContext, partitionValues: Seq[PartitionValues]): DefaultExpressionData", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.from", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#from(context:io.smartdatalake.workflow.ActionPipelineContext,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]):io.smartdatalake.util.misc.DefaultExpressionData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "io.smartdatalake.util.misc.DefaultExpressionData#<init>", "error" : "unsupported entity"}, {"label" : "partitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.partitionValues", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#partitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "attemptStartTime", "tail" : ": Timestamp", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.attemptStartTime", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#attemptStartTime:java.sql.Timestamp", "kind" : "val"}, {"label" : "runStartTime", "tail" : ": Timestamp", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.runStartTime", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#runStartTime:java.sql.Timestamp", "kind" : "val"}, {"label" : "referenceTimestamp", "tail" : ": Option[Timestamp]", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.referenceTimestamp", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#referenceTimestamp:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "executionPhase", "tail" : ": String", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.executionPhase", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#executionPhase:String", "kind" : "val"}, {"label" : "attemptId", "tail" : ": Int", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.attemptId", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#attemptId:Int", "kind" : "val"}, {"label" : "runId", "tail" : ": Int", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.runId", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#runId:Int", "kind" : "val"}, {"label" : "application", "tail" : ": String", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.application", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#application:String", "kind" : "val"}, {"label" : "feed", "tail" : ": String", "member" : "io.smartdatalake.util.misc.DefaultExpressionData.feed", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#feed:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/util\/misc\/DefaultExpressionData.html", "kind" : "case class"}, {"name" : "io.smartdatalake.util.misc.EnvironmentUtil", "shortDescription" : "", "object" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html", "members_object" : [{"label" : "getSdlParameter", "tail" : "(key: String): Option[String]", "member" : "io.smartdatalake.util.misc.EnvironmentUtil.getSdlParameter", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#getSdlParameter(key:String):Option[String]", "kind" : "def"}, {"label" : "isSparkAdaptiveQueryExecEnabled", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.util.misc.EnvironmentUtil.isSparkAdaptiveQueryExecEnabled", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#isSparkAdaptiveQueryExecEnabled(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "isWindowsOS", "tail" : "(): Boolean", "member" : "io.smartdatalake.util.misc.EnvironmentUtil.isWindowsOS", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#isWindowsOS:Boolean", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/EnvironmentUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.util.misc.MemoryUtils", "shortDescription" : "Utils to monitor memory usage and shutdown cause", "object" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html", "members_object" : [{"label" : "formatBytesMB", "tail" : "(bytes: Long): String", "member" : "io.smartdatalake.util.misc.MemoryUtils.formatBytesMB", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#formatBytesMB(bytes:Long):String", "kind" : "def"}, {"label" : "addDebugShutdownHooks", "tail" : "(): Unit", "member" : "io.smartdatalake.util.misc.MemoryUtils.addDebugShutdownHooks", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#addDebugShutdownHooks():Unit", "kind" : "def"}, {"label" : "logHeapInfoLegacy", "tail" : "(): Unit", "member" : "io.smartdatalake.util.misc.MemoryUtils.logHeapInfoLegacy", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#logHeapInfoLegacy():Unit", "kind" : "def"}, {"label" : "logHeapInfo", "tail" : "(logLinuxMem: Boolean, logLinuxCgroupMem: Boolean, logBuffers: Boolean): Unit", "member" : "io.smartdatalake.util.misc.MemoryUtils.logHeapInfo", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#logHeapInfo(logLinuxMem:Boolean,logLinuxCgroupMem:Boolean,logBuffers:Boolean):Unit", "kind" : "def"}, {"label" : "stopMemoryLogger", "tail" : "(): Unit", "member" : "io.smartdatalake.util.misc.MemoryUtils.stopMemoryLogger", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#stopMemoryLogger():Unit", "kind" : "def"}, {"label" : "startMemoryLogger", "tail" : "(intervalSec: Int, logLinuxMem: Boolean, logLinuxCgroupMem: Boolean, logBuffers: Boolean): Unit", "member" : "io.smartdatalake.util.misc.MemoryUtils.startMemoryLogger", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#startMemoryLogger(intervalSec:Int,logLinuxMem:Boolean,logLinuxCgroupMem:Boolean,logBuffers:Boolean):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/MemoryUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.util.misc.PythonSparkEntryPoint", "shortDescription" : "", "members_class" : [{"label" : "getOptions", "tail" : "(): HashMap[String, String]", "member" : "io.smartdatalake.util.misc.PythonSparkEntryPoint.getOptions", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#getOptions:java.util.HashMap[String,String]", "kind" : "def"}, {"member" : "io.smartdatalake.util.misc.PythonSparkEntryPoint#<init>", "error" : "unsupported entity"}, {"label" : "session", "tail" : ": SparkSession", "member" : "io.smartdatalake.util.misc.PythonSparkEntryPoint.session", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#session:org.apache.spark.sql.SparkSession", "kind" : "val"}, {"label" : "getSQLContext", "tail" : "(): SQLContext", "member" : "org.apache.spark.python.PythonHelper.SparkEntryPoint.getSQLContext", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#getSQLContext:org.apache.spark.sql.SQLContext", "kind" : "def"}, {"label" : "getJavaSparkContext", "tail" : "(): JavaSparkContext", "member" : "org.apache.spark.python.PythonHelper.SparkEntryPoint.getJavaSparkContext", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#getJavaSparkContext:org.apache.spark.api.java.JavaSparkContext", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/util\/misc\/PythonSparkEntryPoint.html", "kind" : "class"}, {"name" : "io.smartdatalake.util.misc.SchemaUtil", "shortDescription" : "", "object" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html", "members_object" : [{"label" : "schemaDiff", "tail" : "(schemaLeft: StructType, schemaRight: StructType, ignoreNullable: Boolean, deep: Boolean): Set[StructField]", "member" : "io.smartdatalake.util.misc.SchemaUtil.schemaDiff", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#schemaDiff(schemaLeft:org.apache.spark.sql.types.StructType,schemaRight:org.apache.spark.sql.types.StructType,ignoreNullable:Boolean,deep:Boolean):Set[org.apache.spark.sql.types.StructField]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/misc\/SchemaUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.smartdatalake.util.webservice" : [{"name" : "io.smartdatalake.util.webservice.WebserviceException", "shortDescription" : "Exception thrown when calling a webservice", "members_class" : [{"member" : "io.smartdatalake.util.webservice.WebserviceException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/util\/webservice\/WebserviceException.html", "kind" : "class"}, {"name" : "io.smartdatalake.util.webservice.WebserviceWriteMethod", "shortDescription" : "", "object" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Put", "tail" : ": Value", "member" : "io.smartdatalake.util.webservice.WebserviceWriteMethod.Put", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#Put:io.smartdatalake.util.webservice.WebserviceWriteMethod.Value", "kind" : "val"}, {"label" : "Post", "tail" : ": Value", "member" : "io.smartdatalake.util.webservice.WebserviceWriteMethod.Post", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#Post:io.smartdatalake.util.webservice.WebserviceWriteMethod.Value", "kind" : "val"}, {"label" : "WebserviceWriteMethod", "tail" : "", "member" : "io.smartdatalake.util.webservice.WebserviceWriteMethod.WebserviceWriteMethod", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#WebserviceWriteMethod=io.smartdatalake.util.webservice.WebserviceWriteMethod.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/webservice\/WebserviceWriteMethod$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.smartdatalake.workflow.action" : [{"name" : "io.smartdatalake.workflow.action.ActionMetadata", "shortDescription" : "Additional metadata for a Action", "members_case class" : [{"member" : "io.smartdatalake.workflow.action.ActionMetadata#<init>", "error" : "unsupported entity"}, {"label" : "tags", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.action.ActionMetadata.tags", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#tags:Seq[String]", "kind" : "val"}, {"label" : "feed", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.ActionMetadata.feed", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#feed:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.ActionMetadata.description", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#description:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.ActionMetadata.name", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#name:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/ActionMetadata.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.CopyAction", "shortDescription" : "Action to copy files (i.e.", "object" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): CopyAction", "member" : "io.smartdatalake.workflow.action.CopyAction.fromConfig", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.action.CopyAction", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.workflow.action.CopyAction.factory", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.action.Action]", "kind" : "def"}, {"label" : "postExecSubFeed", "tail" : "(inputSubFeed: SubFeed, outputSubFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.CopyAction.postExecSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#postExecSubFeed(inputSubFeed:io.smartdatalake.workflow.SubFeed,outputSubFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "transformPartitionValues", "tail" : "(partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.CopyAction.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#transformPartitionValues(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "transform", "tail" : "(inputSubFeed: SparkSubFeed, outputSubFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.CopyAction.transform", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#transform(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,outputSubFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "outputs", "tail" : ": Seq[DataObject with CanWriteDataFrame]", "member" : "io.smartdatalake.workflow.action.CopyAction.outputs", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.CopyAction.inputs", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "val"}, {"label" : "output", "tail" : ": DataObject with CanWriteDataFrame", "member" : "io.smartdatalake.workflow.action.CopyAction.output", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame", "kind" : "val"}, {"label" : "input", "tail" : ": DataObject with CanCreateDataFrame", "member" : "io.smartdatalake.workflow.action.CopyAction.input", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.CopyAction#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.CopyAction.metadata", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "val"}, {"label" : "metricsFailCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.CopyAction.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#metricsFailCondition:Option[String]", "kind" : "val"}, {"label" : "executionCondition", "tail" : ": Option[Condition]", "member" : "io.smartdatalake.workflow.action.CopyAction.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "executionMode", "tail" : ": Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.CopyAction.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "val"}, {"label" : "persist", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CopyAction.persist", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#persist:Boolean", "kind" : "val"}, {"label" : "breakDataFrameLineage", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CopyAction.breakDataFrameLineage", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#breakDataFrameLineage:Boolean", "kind" : "val"}, {"label" : "standardizeDatatypes", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CopyAction.standardizeDatatypes", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#standardizeDatatypes:Boolean", "kind" : "val"}, {"label" : "filterClause", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.CopyAction.filterClause", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#filterClause:Option[String]", "kind" : "val"}, {"label" : "additionalColumns", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.CopyAction.additionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#additionalColumns:Option[Map[String,String]]", "kind" : "val"}, {"label" : "columnWhitelist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.CopyAction.columnWhitelist", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#columnWhitelist:Option[Seq[String]]", "kind" : "val"}, {"label" : "columnBlacklist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.CopyAction.columnBlacklist", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#columnBlacklist:Option[Seq[String]]", "kind" : "val"}, {"label" : "transformer", "tail" : ": Option[CustomDfTransformerConfig]", "member" : "io.smartdatalake.workflow.action.CopyAction.transformer", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#transformer:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "val"}, {"label" : "deleteDataAfterRead", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CopyAction.deleteDataAfterRead", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#deleteDataAfterRead:Boolean", "kind" : "val"}, {"label" : "outputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.CopyAction.outputId", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#outputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "inputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.CopyAction.inputId", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#inputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.CopyAction.id", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "val"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "final def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.init", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "recursiveInputs", "tail" : "(): Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "def"}, {"label" : "logWritingFinished", "tail" : "(subFeed: SparkSubFeed, noData: Boolean, duration: Duration)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingFinished", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#logWritingFinished(subFeed:io.smartdatalake.workflow.SparkSubFeed,noData:Boolean,duration:java.time.Duration)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "logWritingStarted", "tail" : "(subFeed: SparkSubFeed)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingStarted", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#logWritingStarted(subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "prepareInputSubFeed", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, ignoreFilters: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.prepareInputSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#prepareInputSubFeed(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,ignoreFilters:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "filterDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], genericFilter: Option[Column]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.filterDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#filterDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],genericFilter:Option[org.apache.spark.sql.Column]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateDataFrameContainsCols", "tail" : "(df: DataFrame, columns: Seq[String], debugName: String): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.validateDataFrameContainsCols", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#validateDataFrameContainsCols(df:org.apache.spark.sql.DataFrame,columns:Seq[String],debugName:String):Unit", "kind" : "def"}, {"label" : "validateAndUpdateSubFeed", "tail" : "(output: DataObject, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.validateAndUpdateSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#validateAndUpdateSubFeed(output:io.smartdatalake.workflow.dataobject.DataObject,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "applyTransformations", "tail" : "(inputSubFeed: SparkSubFeed, transformation: Option[CustomDfTransformerConfig], columnBlacklist: Option[Seq[String]], columnWhitelist: Option[Seq[String]], additionalColumns: Option[Map[String, String]], standardizeDatatypes: Boolean, additionalTransformers: Seq[(DataFrame) ⇒ DataFrame], filterClauseExpr: Option[Column])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyTransformations", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#applyTransformations(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,transformation:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig],columnBlacklist:Option[Seq[String]],columnWhitelist:Option[Seq[String]],additionalColumns:Option[Map[String,String]],standardizeDatatypes:Boolean,additionalTransformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame],filterClauseExpr:Option[org.apache.spark.sql.Column])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCastDecimal2IntegralFloat", "tail" : "(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCastDecimal2IntegralFloat", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#applyCastDecimal2IntegralFloat(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyFilter", "tail" : "(filterClauseExpr: Column)(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyFilter", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#applyFilter(filterClauseExpr:org.apache.spark.sql.Column)(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyAdditionalColumns", "tail" : "(additionalColumns: Map[String, String], partitionValues: Seq[PartitionValues])(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyAdditionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#applyAdditionalColumns(additionalColumns:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCustomTransformation", "tail" : "(transformer: CustomDfTransformerConfig, subFeed: SparkSubFeed)(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCustomTransformation", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#applyCustomTransformation(transformer:io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig,subFeed:io.smartdatalake.workflow.SparkSubFeed)(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "multiTransformDataFrame", "tail" : "(inputDf: DataFrame, transformers: Seq[(DataFrame) ⇒ DataFrame]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.multiTransformDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#multiTransformDataFrame(inputDf:org.apache.spark.sql.DataFrame,transformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "subFeedDfTransformer", "tail" : "(fnTransform: (DataFrame) ⇒ DataFrame)(subFeed: SparkSubFeed): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.subFeedDfTransformer", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#subFeedDfTransformer(fnTransform:org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame)(subFeed:io.smartdatalake.workflow.SparkSubFeed):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "writeSubFeed", "tail" : "(subFeed: SparkSubFeed, output: DataObject with CanWriteDataFrame, isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.writeSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#writeSubFeed(subFeed:io.smartdatalake.workflow.SparkSubFeed,output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame,isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "createEmptyDataFrame", "tail" : "(dataObject: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.createEmptyDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#createEmptyDataFrame(dataObject:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "enrichSubFeedDataFrame", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, phase: ExecutionPhase)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.enrichSubFeedDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#enrichSubFeedDataFrame(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CopyAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/CopyAction.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.CustomFileAction", "shortDescription" : "Action to transform files between two Hadoop Data Objects.", "object" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): CustomFileAction", "member" : "io.smartdatalake.workflow.action.CustomFileAction.fromConfig", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.action.CustomFileAction", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.workflow.action.CustomFileAction.factory", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.action.Action]", "kind" : "def"}, {"label" : "doTransform", "tail" : "(inputSubFeed: FileSubFeed, outputSubFeed: FileSubFeed, doExec: Boolean)(session: SparkSession, context: ActionPipelineContext): FileSubFeed", "member" : "io.smartdatalake.workflow.action.CustomFileAction.doTransform", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#doTransform(inputSubFeed:io.smartdatalake.workflow.FileSubFeed,outputSubFeed:io.smartdatalake.workflow.FileSubFeed,doExec:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "outputs", "tail" : ": Seq[HadoopFileDataObject]", "member" : "io.smartdatalake.workflow.action.CustomFileAction.outputs", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.HadoopFileDataObject]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Seq[HadoopFileDataObject]", "member" : "io.smartdatalake.workflow.action.CustomFileAction.inputs", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.HadoopFileDataObject]", "kind" : "val"}, {"label" : "output", "tail" : ": HadoopFileDataObject", "member" : "io.smartdatalake.workflow.action.CustomFileAction.output", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#output:io.smartdatalake.workflow.dataobject.HadoopFileDataObject", "kind" : "val"}, {"label" : "input", "tail" : ": HadoopFileDataObject", "member" : "io.smartdatalake.workflow.action.CustomFileAction.input", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#input:io.smartdatalake.workflow.dataobject.HadoopFileDataObject", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.CustomFileAction#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.CustomFileAction.metadata", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "val"}, {"label" : "metricsFailCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.CustomFileAction.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#metricsFailCondition:Option[String]", "kind" : "val"}, {"label" : "executionCondition", "tail" : ": Option[Condition]", "member" : "io.smartdatalake.workflow.action.CustomFileAction.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "executionMode", "tail" : ": Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.CustomFileAction.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "val"}, {"label" : "breakFileRefLineage", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CustomFileAction.breakFileRefLineage", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#breakFileRefLineage:Boolean", "kind" : "val"}, {"label" : "filesPerPartition", "tail" : ": Int", "member" : "io.smartdatalake.workflow.action.CustomFileAction.filesPerPartition", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#filesPerPartition:Int", "kind" : "val"}, {"label" : "deleteDataAfterRead", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CustomFileAction.deleteDataAfterRead", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#deleteDataAfterRead:Boolean", "kind" : "val"}, {"label" : "transformer", "tail" : ": CustomFileTransformerConfig", "member" : "io.smartdatalake.workflow.action.CustomFileAction.transformer", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#transformer:io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig", "kind" : "val"}, {"label" : "outputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.CustomFileAction.outputId", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#outputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "inputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.CustomFileAction.inputId", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#inputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.CustomFileAction.id", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "val"}, {"label" : "postExecSubFeed", "tail" : "(inputSubFeed: SubFeed, outputSubFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.postExecSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#postExecSubFeed(inputSubFeed:io.smartdatalake.workflow.SubFeed,outputSubFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "final def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.init", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "recursiveInputs", "tail" : "(): Seq[FileRefDataObject with CanCreateInputStream]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.FileRefDataObjectwithio.smartdatalake.workflow.dataobject.CanCreateInputStream]", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/CustomFileAction.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.CustomSparkAction", "shortDescription" : "Action to transform data according to a custom transformer.", "object" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): CustomSparkAction", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.fromConfig", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.action.CustomSparkAction", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.factory", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.action.Action]", "kind" : "def"}, {"label" : "transformPartitionValues", "tail" : "(partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#transformPartitionValues(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "transform", "tail" : "(inputSubFeeds: Seq[SparkSubFeed], outputSubFeeds: Seq[SparkSubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SparkSubFeed]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.transform", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#transform(inputSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SparkSubFeed]", "kind" : "def"}, {"label" : "outputs", "tail" : ": Seq[DataObject with CanWriteDataFrame]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.outputs", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.inputs", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "val"}, {"label" : "recursiveInputs", "tail" : ": Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.CustomSparkAction#<init>", "error" : "unsupported entity"}, {"label" : "inputIdsToIgnoreFilter", "tail" : ": Seq[DataObjectId]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.inputIdsToIgnoreFilter", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#inputIdsToIgnoreFilter:Seq[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "recursiveInputIds", "tail" : ": Seq[DataObjectId]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.recursiveInputIds", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#recursiveInputIds:Seq[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "metadata", "tail" : ": Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.metadata", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "val"}, {"label" : "metricsFailCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#metricsFailCondition:Option[String]", "kind" : "val"}, {"label" : "executionCondition", "tail" : ": Option[Condition]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "executionMode", "tail" : ": Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "val"}, {"label" : "mainOutputId", "tail" : ": Option[DataObjectId]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.mainOutputId", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#mainOutputId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "mainInputId", "tail" : ": Option[DataObjectId]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.mainInputId", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#mainInputId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "persist", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.persist", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#persist:Boolean", "kind" : "val"}, {"label" : "breakDataFrameLineage", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.breakDataFrameLineage", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#breakDataFrameLineage:Boolean", "kind" : "val"}, {"label" : "transformer", "tail" : ": CustomDfsTransformerConfig", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.transformer", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#transformer:io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig", "kind" : "val"}, {"label" : "outputIds", "tail" : ": Seq[DataObjectId]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.outputIds", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#outputIds:Seq[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "inputIds", "tail" : ": Seq[DataObjectId]", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.inputIds", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#inputIds:Seq[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.CustomSparkAction.id", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "val"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.init", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getMainInput", "tail" : "(inputSubFeeds: Seq[SubFeed])(context: ActionPipelineContext): DataObject", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.getMainInput", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getMainInput(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.dataobject.DataObject", "kind" : "def"}, {"label" : "mainOutput", "tail" : ": DataObject with CanWriteDataFrame", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.mainOutput", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#mainOutput:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame", "kind" : "lazy val"}, {"label" : "prioritizedMainInputCandidates", "tail" : ": Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.prioritizedMainInputCandidates", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#prioritizedMainInputCandidates:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "lazy val"}, {"label" : "logWritingFinished", "tail" : "(subFeed: SparkSubFeed, noData: Boolean, duration: Duration)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingFinished", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#logWritingFinished(subFeed:io.smartdatalake.workflow.SparkSubFeed,noData:Boolean,duration:java.time.Duration)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "logWritingStarted", "tail" : "(subFeed: SparkSubFeed)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingStarted", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#logWritingStarted(subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "prepareInputSubFeed", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, ignoreFilters: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.prepareInputSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#prepareInputSubFeed(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,ignoreFilters:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "filterDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], genericFilter: Option[Column]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.filterDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#filterDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],genericFilter:Option[org.apache.spark.sql.Column]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateDataFrameContainsCols", "tail" : "(df: DataFrame, columns: Seq[String], debugName: String): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.validateDataFrameContainsCols", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#validateDataFrameContainsCols(df:org.apache.spark.sql.DataFrame,columns:Seq[String],debugName:String):Unit", "kind" : "def"}, {"label" : "validateAndUpdateSubFeed", "tail" : "(output: DataObject, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.validateAndUpdateSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#validateAndUpdateSubFeed(output:io.smartdatalake.workflow.dataobject.DataObject,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "applyTransformations", "tail" : "(inputSubFeed: SparkSubFeed, transformation: Option[CustomDfTransformerConfig], columnBlacklist: Option[Seq[String]], columnWhitelist: Option[Seq[String]], additionalColumns: Option[Map[String, String]], standardizeDatatypes: Boolean, additionalTransformers: Seq[(DataFrame) ⇒ DataFrame], filterClauseExpr: Option[Column])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyTransformations", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#applyTransformations(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,transformation:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig],columnBlacklist:Option[Seq[String]],columnWhitelist:Option[Seq[String]],additionalColumns:Option[Map[String,String]],standardizeDatatypes:Boolean,additionalTransformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame],filterClauseExpr:Option[org.apache.spark.sql.Column])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCastDecimal2IntegralFloat", "tail" : "(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCastDecimal2IntegralFloat", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#applyCastDecimal2IntegralFloat(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyFilter", "tail" : "(filterClauseExpr: Column)(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyFilter", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#applyFilter(filterClauseExpr:org.apache.spark.sql.Column)(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyAdditionalColumns", "tail" : "(additionalColumns: Map[String, String], partitionValues: Seq[PartitionValues])(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyAdditionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#applyAdditionalColumns(additionalColumns:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCustomTransformation", "tail" : "(transformer: CustomDfTransformerConfig, subFeed: SparkSubFeed)(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCustomTransformation", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#applyCustomTransformation(transformer:io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig,subFeed:io.smartdatalake.workflow.SparkSubFeed)(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "multiTransformDataFrame", "tail" : "(inputDf: DataFrame, transformers: Seq[(DataFrame) ⇒ DataFrame]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.multiTransformDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#multiTransformDataFrame(inputDf:org.apache.spark.sql.DataFrame,transformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "subFeedDfTransformer", "tail" : "(fnTransform: (DataFrame) ⇒ DataFrame)(subFeed: SparkSubFeed): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.subFeedDfTransformer", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#subFeedDfTransformer(fnTransform:org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame)(subFeed:io.smartdatalake.workflow.SparkSubFeed):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "writeSubFeed", "tail" : "(subFeed: SparkSubFeed, output: DataObject with CanWriteDataFrame, isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.writeSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#writeSubFeed(subFeed:io.smartdatalake.workflow.SparkSubFeed,output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame,isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "createEmptyDataFrame", "tail" : "(dataObject: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.createEmptyDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#createEmptyDataFrame(dataObject:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "enrichSubFeedDataFrame", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, phase: ExecutionPhase)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.enrichSubFeedDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#enrichSubFeedDataFrame(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/CustomSparkAction.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.DeduplicateAction", "shortDescription" : "Action to deduplicate a subfeed.", "object" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html", "members_object" : [{"label" : "udfs", "tail" : "", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.udfs", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#udfs", "kind" : "object"}, {"label" : "deduplicate", "tail" : "(baseDf: DataFrame, newDf: DataFrame, keyColumns: Seq[String])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.deduplicate", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#deduplicate(baseDf:org.apache.spark.sql.DataFrame,newDf:org.apache.spark.sql.DataFrame,keyColumns:Seq[String])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "deduplicateDataFrame", "tail" : "(existingDf: Option[DataFrame], pks: Seq[String], refTimestamp: LocalDateTime, ignoreOldDeletedColumns: Boolean, ignoreOldDeletedNestedColumns: Boolean)(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.deduplicateDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#deduplicateDataFrame(existingDf:Option[org.apache.spark.sql.DataFrame],pks:Seq[String],refTimestamp:java.time.LocalDateTime,ignoreOldDeletedColumns:Boolean,ignoreOldDeletedNestedColumns:Boolean)(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): DeduplicateAction", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.fromConfig", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.action.DeduplicateAction", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.factory", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.action.Action]", "kind" : "def"}, {"label" : "transformPartitionValues", "tail" : "(partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#transformPartitionValues(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "transform", "tail" : "(inputSubFeed: SparkSubFeed, outputSubFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.transform", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#transform(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,outputSubFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "recursiveInputs", "tail" : ": Seq[TransactionalSparkTableDataObject]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.TransactionalSparkTableDataObject]", "kind" : "val"}, {"label" : "outputs", "tail" : ": Seq[TransactionalSparkTableDataObject]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.outputs", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.TransactionalSparkTableDataObject]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.inputs", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "val"}, {"label" : "output", "tail" : ": TransactionalSparkTableDataObject", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.output", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#output:io.smartdatalake.workflow.dataobject.TransactionalSparkTableDataObject", "kind" : "val"}, {"label" : "input", "tail" : ": DataObject with CanCreateDataFrame", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.input", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.DeduplicateAction#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.metadata", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "val"}, {"label" : "metricsFailCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#metricsFailCondition:Option[String]", "kind" : "val"}, {"label" : "executionCondition", "tail" : ": Option[Condition]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "executionMode", "tail" : ": Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "val"}, {"label" : "persist", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.persist", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#persist:Boolean", "kind" : "val"}, {"label" : "breakDataFrameLineage", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.breakDataFrameLineage", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#breakDataFrameLineage:Boolean", "kind" : "val"}, {"label" : "ignoreOldDeletedNestedColumns", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.ignoreOldDeletedNestedColumns", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#ignoreOldDeletedNestedColumns:Boolean", "kind" : "val"}, {"label" : "ignoreOldDeletedColumns", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.ignoreOldDeletedColumns", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#ignoreOldDeletedColumns:Boolean", "kind" : "val"}, {"label" : "standardizeDatatypes", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.standardizeDatatypes", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#standardizeDatatypes:Boolean", "kind" : "val"}, {"label" : "filterClause", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.filterClause", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#filterClause:Option[String]", "kind" : "val"}, {"label" : "additionalColumns", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.additionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#additionalColumns:Option[Map[String,String]]", "kind" : "val"}, {"label" : "columnWhitelist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.columnWhitelist", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#columnWhitelist:Option[Seq[String]]", "kind" : "val"}, {"label" : "columnBlacklist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.columnBlacklist", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#columnBlacklist:Option[Seq[String]]", "kind" : "val"}, {"label" : "transformer", "tail" : ": Option[CustomDfTransformerConfig]", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.transformer", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#transformer:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "val"}, {"label" : "outputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.outputId", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#outputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "inputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.inputId", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#inputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.DeduplicateAction.id", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "val"}, {"label" : "postExecSubFeed", "tail" : "(inputSubFeed: SubFeed, outputSubFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.postExecSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#postExecSubFeed(inputSubFeed:io.smartdatalake.workflow.SubFeed,outputSubFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "final def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.init", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "logWritingFinished", "tail" : "(subFeed: SparkSubFeed, noData: Boolean, duration: Duration)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingFinished", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#logWritingFinished(subFeed:io.smartdatalake.workflow.SparkSubFeed,noData:Boolean,duration:java.time.Duration)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "logWritingStarted", "tail" : "(subFeed: SparkSubFeed)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingStarted", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#logWritingStarted(subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "prepareInputSubFeed", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, ignoreFilters: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.prepareInputSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#prepareInputSubFeed(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,ignoreFilters:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "filterDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], genericFilter: Option[Column]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.filterDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#filterDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],genericFilter:Option[org.apache.spark.sql.Column]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateDataFrameContainsCols", "tail" : "(df: DataFrame, columns: Seq[String], debugName: String): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.validateDataFrameContainsCols", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#validateDataFrameContainsCols(df:org.apache.spark.sql.DataFrame,columns:Seq[String],debugName:String):Unit", "kind" : "def"}, {"label" : "validateAndUpdateSubFeed", "tail" : "(output: DataObject, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.validateAndUpdateSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#validateAndUpdateSubFeed(output:io.smartdatalake.workflow.dataobject.DataObject,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "applyTransformations", "tail" : "(inputSubFeed: SparkSubFeed, transformation: Option[CustomDfTransformerConfig], columnBlacklist: Option[Seq[String]], columnWhitelist: Option[Seq[String]], additionalColumns: Option[Map[String, String]], standardizeDatatypes: Boolean, additionalTransformers: Seq[(DataFrame) ⇒ DataFrame], filterClauseExpr: Option[Column])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyTransformations", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#applyTransformations(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,transformation:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig],columnBlacklist:Option[Seq[String]],columnWhitelist:Option[Seq[String]],additionalColumns:Option[Map[String,String]],standardizeDatatypes:Boolean,additionalTransformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame],filterClauseExpr:Option[org.apache.spark.sql.Column])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCastDecimal2IntegralFloat", "tail" : "(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCastDecimal2IntegralFloat", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#applyCastDecimal2IntegralFloat(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyFilter", "tail" : "(filterClauseExpr: Column)(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyFilter", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#applyFilter(filterClauseExpr:org.apache.spark.sql.Column)(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyAdditionalColumns", "tail" : "(additionalColumns: Map[String, String], partitionValues: Seq[PartitionValues])(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyAdditionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#applyAdditionalColumns(additionalColumns:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCustomTransformation", "tail" : "(transformer: CustomDfTransformerConfig, subFeed: SparkSubFeed)(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCustomTransformation", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#applyCustomTransformation(transformer:io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig,subFeed:io.smartdatalake.workflow.SparkSubFeed)(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "multiTransformDataFrame", "tail" : "(inputDf: DataFrame, transformers: Seq[(DataFrame) ⇒ DataFrame]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.multiTransformDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#multiTransformDataFrame(inputDf:org.apache.spark.sql.DataFrame,transformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "subFeedDfTransformer", "tail" : "(fnTransform: (DataFrame) ⇒ DataFrame)(subFeed: SparkSubFeed): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.subFeedDfTransformer", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#subFeedDfTransformer(fnTransform:org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame)(subFeed:io.smartdatalake.workflow.SparkSubFeed):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "writeSubFeed", "tail" : "(subFeed: SparkSubFeed, output: DataObject with CanWriteDataFrame, isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.writeSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#writeSubFeed(subFeed:io.smartdatalake.workflow.SparkSubFeed,output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame,isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "createEmptyDataFrame", "tail" : "(dataObject: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.createEmptyDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#createEmptyDataFrame(dataObject:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "enrichSubFeedDataFrame", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, phase: ExecutionPhase)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.enrichSubFeedDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#enrichSubFeedDataFrame(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/DeduplicateAction.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.FileSubFeedAction", "shortDescription" : "", "members_class" : [{"label" : "postExecSubFeed", "tail" : "(inputSubFeed: SubFeed, outputSubFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.postExecSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#postExecSubFeed(inputSubFeed:io.smartdatalake.workflow.SubFeed,outputSubFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "final def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.init", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "recursiveInputs", "tail" : "(): Seq[FileRefDataObject with CanCreateInputStream]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.FileRefDataObjectwithio.smartdatalake.workflow.dataobject.CanCreateInputStream]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.action.FileSubFeedAction#<init>", "error" : "unsupported entity"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "deleteDataAfterRead", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.deleteDataAfterRead", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#deleteDataAfterRead():Boolean", "kind" : "abstract def"}, {"label" : "breakFileRefLineage", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.breakFileRefLineage", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#breakFileRefLineage:Boolean", "kind" : "abstract def"}, {"label" : "doTransform", "tail" : "(inputSubFeed: FileSubFeed, outputSubFeed: FileSubFeed, doExec: Boolean)(session: SparkSession, context: ActionPipelineContext): FileSubFeed", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.doTransform", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#doTransform(inputSubFeed:io.smartdatalake.workflow.FileSubFeed,outputSubFeed:io.smartdatalake.workflow.FileSubFeed,doExec:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.FileSubFeed", "kind" : "abstract def"}, {"label" : "output", "tail" : "(): FileRefDataObject with CanCreateOutputStream", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.output", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#output:io.smartdatalake.workflow.dataobject.FileRefDataObjectwithio.smartdatalake.workflow.dataobject.CanCreateOutputStream", "kind" : "abstract def"}, {"label" : "input", "tail" : "(): FileRefDataObject with CanCreateInputStream", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.input", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#input:io.smartdatalake.workflow.dataobject.FileRefDataObjectwithio.smartdatalake.workflow.dataobject.CanCreateInputStream", "kind" : "abstract def"}, {"label" : "metricsFailCondition", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.action.Action.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#metricsFailCondition:Option[String]", "kind" : "abstract def"}, {"label" : "executionMode", "tail" : "(): Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.Action.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "abstract def"}, {"label" : "executionCondition", "tail" : "(): Option[Condition]", "member" : "io.smartdatalake.workflow.action.Action.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "abstract def"}, {"label" : "outputs", "tail" : "(): Seq[DataObject]", "member" : "io.smartdatalake.workflow.action.Action.outputs", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "abstract def"}, {"label" : "inputs", "tail" : "(): Seq[DataObject]", "member" : "io.smartdatalake.workflow.action.Action.inputs", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "abstract def"}, {"label" : "metadata", "tail" : "(): Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.Action.metadata", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "abstract def"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.Action.id", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "abstract val"}, {"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.config.ParsableFromConfig.factory", "link" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html#factory:io.smartdatalake.config.FromConfigFactory[CO]", "kind" : "abstract def"}], "class" : "io\/smartdatalake\/workflow\/action\/FileSubFeedAction.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.action.FileTransferAction", "shortDescription" : "Action to transfer files between SFtp, Hadoop and local Fs.", "object" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): FileTransferAction", "member" : "io.smartdatalake.workflow.action.FileTransferAction.fromConfig", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.action.FileTransferAction", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.workflow.action.FileTransferAction.factory", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.action.Action]", "kind" : "def"}, {"label" : "doTransform", "tail" : "(inputSubFeed: FileSubFeed, outputSubFeed: FileSubFeed, doExec: Boolean)(session: SparkSession, context: ActionPipelineContext): FileSubFeed", "member" : "io.smartdatalake.workflow.action.FileTransferAction.doTransform", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#doTransform(inputSubFeed:io.smartdatalake.workflow.FileSubFeed,outputSubFeed:io.smartdatalake.workflow.FileSubFeed,doExec:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "outputs", "tail" : ": Seq[FileRefDataObject]", "member" : "io.smartdatalake.workflow.action.FileTransferAction.outputs", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.FileRefDataObject]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Seq[FileRefDataObject]", "member" : "io.smartdatalake.workflow.action.FileTransferAction.inputs", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.FileRefDataObject]", "kind" : "val"}, {"label" : "output", "tail" : ": FileRefDataObject with CanCreateOutputStream", "member" : "io.smartdatalake.workflow.action.FileTransferAction.output", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#output:io.smartdatalake.workflow.dataobject.FileRefDataObjectwithio.smartdatalake.workflow.dataobject.CanCreateOutputStream", "kind" : "val"}, {"label" : "input", "tail" : ": FileRefDataObject with CanCreateInputStream", "member" : "io.smartdatalake.workflow.action.FileTransferAction.input", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#input:io.smartdatalake.workflow.dataobject.FileRefDataObjectwithio.smartdatalake.workflow.dataobject.CanCreateInputStream", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.FileTransferAction#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.FileTransferAction.metadata", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "val"}, {"label" : "metricsFailCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.FileTransferAction.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#metricsFailCondition:Option[String]", "kind" : "val"}, {"label" : "executionCondition", "tail" : ": Option[Condition]", "member" : "io.smartdatalake.workflow.action.FileTransferAction.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "executionMode", "tail" : ": Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.FileTransferAction.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "val"}, {"label" : "breakFileRefLineage", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.FileTransferAction.breakFileRefLineage", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#breakFileRefLineage:Boolean", "kind" : "val"}, {"label" : "overwrite", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.FileTransferAction.overwrite", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#overwrite:Boolean", "kind" : "val"}, {"label" : "deleteDataAfterRead", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.FileTransferAction.deleteDataAfterRead", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#deleteDataAfterRead:Boolean", "kind" : "val"}, {"label" : "outputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.FileTransferAction.outputId", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#outputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "inputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.FileTransferAction.inputId", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#inputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.FileTransferAction.id", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "val"}, {"label" : "postExecSubFeed", "tail" : "(inputSubFeed: SubFeed, outputSubFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.postExecSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#postExecSubFeed(inputSubFeed:io.smartdatalake.workflow.SubFeed,outputSubFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "final def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.init", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "recursiveInputs", "tail" : "(): Seq[FileRefDataObject with CanCreateInputStream]", "member" : "io.smartdatalake.workflow.action.FileSubFeedAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.FileRefDataObjectwithio.smartdatalake.workflow.dataobject.CanCreateInputStream]", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/FileTransferAction.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.HistorizeAction", "shortDescription" : "Action to historize a subfeed.", "object" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): HistorizeAction", "member" : "io.smartdatalake.workflow.action.HistorizeAction.fromConfig", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.action.HistorizeAction", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.factory", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.action.Action]", "kind" : "def"}, {"label" : "historizeDataFrame", "tail" : "(existingDf: Option[DataFrame], pks: Seq[String], refTimestamp: LocalDateTime)(newDf: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.action.HistorizeAction.historizeDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#historizeDataFrame(existingDf:Option[org.apache.spark.sql.DataFrame],pks:Seq[String],refTimestamp:java.time.LocalDateTime)(newDf:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "transformPartitionValues", "tail" : "(partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#transformPartitionValues(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "transform", "tail" : "(inputSubFeed: SparkSubFeed, outputSubFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.HistorizeAction.transform", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#transform(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,outputSubFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "recursiveInputs", "tail" : ": Seq[TransactionalSparkTableDataObject]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.TransactionalSparkTableDataObject]", "kind" : "val"}, {"label" : "outputs", "tail" : ": Seq[TransactionalSparkTableDataObject]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.outputs", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.TransactionalSparkTableDataObject]", "kind" : "val"}, {"label" : "inputs", "tail" : ": Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.inputs", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "val"}, {"label" : "output", "tail" : ": TransactionalSparkTableDataObject", "member" : "io.smartdatalake.workflow.action.HistorizeAction.output", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#output:io.smartdatalake.workflow.dataobject.TransactionalSparkTableDataObject", "kind" : "val"}, {"label" : "input", "tail" : ": DataObject with CanCreateDataFrame", "member" : "io.smartdatalake.workflow.action.HistorizeAction.input", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.HistorizeAction#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.metadata", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "val"}, {"label" : "metricsFailCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#metricsFailCondition:Option[String]", "kind" : "val"}, {"label" : "executionCondition", "tail" : ": Option[Condition]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "executionMode", "tail" : ": Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "val"}, {"label" : "persist", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.HistorizeAction.persist", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#persist:Boolean", "kind" : "val"}, {"label" : "breakDataFrameLineage", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.HistorizeAction.breakDataFrameLineage", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#breakDataFrameLineage:Boolean", "kind" : "val"}, {"label" : "ignoreOldDeletedNestedColumns", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.HistorizeAction.ignoreOldDeletedNestedColumns", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#ignoreOldDeletedNestedColumns:Boolean", "kind" : "val"}, {"label" : "ignoreOldDeletedColumns", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.HistorizeAction.ignoreOldDeletedColumns", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#ignoreOldDeletedColumns:Boolean", "kind" : "val"}, {"label" : "historizeWhitelist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.historizeWhitelist", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#historizeWhitelist:Option[Seq[String]]", "kind" : "val"}, {"label" : "historizeBlacklist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.historizeBlacklist", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#historizeBlacklist:Option[Seq[String]]", "kind" : "val"}, {"label" : "filterClause", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.filterClause", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#filterClause:Option[String]", "kind" : "val"}, {"label" : "standardizeDatatypes", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.HistorizeAction.standardizeDatatypes", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#standardizeDatatypes:Boolean", "kind" : "val"}, {"label" : "additionalColumns", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.additionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#additionalColumns:Option[Map[String,String]]", "kind" : "val"}, {"label" : "columnWhitelist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.columnWhitelist", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#columnWhitelist:Option[Seq[String]]", "kind" : "val"}, {"label" : "columnBlacklist", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.columnBlacklist", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#columnBlacklist:Option[Seq[String]]", "kind" : "val"}, {"label" : "transformer", "tail" : ": Option[CustomDfTransformerConfig]", "member" : "io.smartdatalake.workflow.action.HistorizeAction.transformer", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#transformer:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "val"}, {"label" : "outputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.HistorizeAction.outputId", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#outputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "inputId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.action.HistorizeAction.inputId", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#inputId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.HistorizeAction.id", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "val"}, {"label" : "postExecSubFeed", "tail" : "(inputSubFeed: SubFeed, outputSubFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.postExecSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#postExecSubFeed(inputSubFeed:io.smartdatalake.workflow.SubFeed,outputSubFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "final def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.init", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "logWritingFinished", "tail" : "(subFeed: SparkSubFeed, noData: Boolean, duration: Duration)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingFinished", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#logWritingFinished(subFeed:io.smartdatalake.workflow.SparkSubFeed,noData:Boolean,duration:java.time.Duration)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "logWritingStarted", "tail" : "(subFeed: SparkSubFeed)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingStarted", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#logWritingStarted(subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "prepareInputSubFeed", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, ignoreFilters: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.prepareInputSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#prepareInputSubFeed(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,ignoreFilters:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "filterDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], genericFilter: Option[Column]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.filterDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#filterDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],genericFilter:Option[org.apache.spark.sql.Column]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateDataFrameContainsCols", "tail" : "(df: DataFrame, columns: Seq[String], debugName: String): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.validateDataFrameContainsCols", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#validateDataFrameContainsCols(df:org.apache.spark.sql.DataFrame,columns:Seq[String],debugName:String):Unit", "kind" : "def"}, {"label" : "validateAndUpdateSubFeed", "tail" : "(output: DataObject, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.validateAndUpdateSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#validateAndUpdateSubFeed(output:io.smartdatalake.workflow.dataobject.DataObject,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "applyTransformations", "tail" : "(inputSubFeed: SparkSubFeed, transformation: Option[CustomDfTransformerConfig], columnBlacklist: Option[Seq[String]], columnWhitelist: Option[Seq[String]], additionalColumns: Option[Map[String, String]], standardizeDatatypes: Boolean, additionalTransformers: Seq[(DataFrame) ⇒ DataFrame], filterClauseExpr: Option[Column])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyTransformations", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#applyTransformations(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,transformation:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig],columnBlacklist:Option[Seq[String]],columnWhitelist:Option[Seq[String]],additionalColumns:Option[Map[String,String]],standardizeDatatypes:Boolean,additionalTransformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame],filterClauseExpr:Option[org.apache.spark.sql.Column])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCastDecimal2IntegralFloat", "tail" : "(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCastDecimal2IntegralFloat", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#applyCastDecimal2IntegralFloat(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyFilter", "tail" : "(filterClauseExpr: Column)(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyFilter", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#applyFilter(filterClauseExpr:org.apache.spark.sql.Column)(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyAdditionalColumns", "tail" : "(additionalColumns: Map[String, String], partitionValues: Seq[PartitionValues])(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyAdditionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#applyAdditionalColumns(additionalColumns:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCustomTransformation", "tail" : "(transformer: CustomDfTransformerConfig, subFeed: SparkSubFeed)(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCustomTransformation", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#applyCustomTransformation(transformer:io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig,subFeed:io.smartdatalake.workflow.SparkSubFeed)(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "multiTransformDataFrame", "tail" : "(inputDf: DataFrame, transformers: Seq[(DataFrame) ⇒ DataFrame]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.multiTransformDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#multiTransformDataFrame(inputDf:org.apache.spark.sql.DataFrame,transformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "subFeedDfTransformer", "tail" : "(fnTransform: (DataFrame) ⇒ DataFrame)(subFeed: SparkSubFeed): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.subFeedDfTransformer", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#subFeedDfTransformer(fnTransform:org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame)(subFeed:io.smartdatalake.workflow.SparkSubFeed):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "writeSubFeed", "tail" : "(subFeed: SparkSubFeed, output: DataObject with CanWriteDataFrame, isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.writeSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#writeSubFeed(subFeed:io.smartdatalake.workflow.SparkSubFeed,output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame,isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "createEmptyDataFrame", "tail" : "(dataObject: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.createEmptyDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#createEmptyDataFrame(dataObject:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "enrichSubFeedDataFrame", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, phase: ExecutionPhase)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.enrichSubFeedDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#enrichSubFeedDataFrame(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/HistorizeAction.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.Metric", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Metric.toString", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#toString():String", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.action.Metric#<init>", "error" : "unsupported entity"}, {"label" : "value", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.Metric.value", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#value:Option[String]", "kind" : "val"}, {"label" : "key", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.Metric.key", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#key:Option[String]", "kind" : "val"}, {"label" : "dataObjectId", "tail" : ": String", "member" : "io.smartdatalake.workflow.action.Metric.dataObjectId", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#dataObjectId:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/Metric.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/Metric.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.NoDataToProcessDontStopWarning", "shortDescription" : "Execution modes can throw this exception to indicate that there is no data to process, and dependent Actions should be executed nevertheless.", "members_case class" : [{"member" : "io.smartdatalake.workflow.action.NoDataToProcessDontStopWarning#<init>", "error" : "unsupported entity"}, {"label" : "results", "tail" : ": Option[Seq[SubFeed]]", "member" : "io.smartdatalake.workflow.action.NoDataToProcessDontStopWarning.results", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#results:Option[Seq[io.smartdatalake.workflow.SubFeed]]", "kind" : "val"}, {"label" : "msg", "tail" : ": String", "member" : "io.smartdatalake.workflow.action.NoDataToProcessDontStopWarning.msg", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#msg:String", "kind" : "val"}, {"label" : "actionId", "tail" : ": NodeId", "member" : "io.smartdatalake.workflow.action.NoDataToProcessDontStopWarning.actionId", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#actionId:io.smartdatalake.workflow.DAGHelper.NodeId", "kind" : "val"}, {"label" : "getResults", "tail" : "(): Option[Seq[SubFeed]]", "member" : "io.smartdatalake.workflow.TaskSkippedDontStopWarning.getResults", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getResults:Option[Seq[R]]", "kind" : "def"}, {"label" : "severity", "tail" : ": ExceptionSeverity", "member" : "io.smartdatalake.workflow.TaskSkippedDontStopWarning.severity", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#severity:io.smartdatalake.workflow.ExceptionSeverity.ExceptionSeverity", "kind" : "val"}, {"label" : "getDAGRootExceptions", "tail" : "(): Seq[DAGException]", "member" : "io.smartdatalake.workflow.TaskSkippedWarning.getDAGRootExceptions", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getDAGRootExceptions:Seq[io.smartdatalake.workflow.DAGException]", "kind" : "def"}, {"label" : "getMessageWithCause", "tail" : "(): String", "member" : "io.smartdatalake.workflow.DAGException.getMessageWithCause", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getMessageWithCause:String", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessDontStopWarning.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.NoDataToProcessWarning", "shortDescription" : "Execution modes can throw this exception to indicate that there is no data to process, and dependent Actions should not be executed.", "members_case class" : [{"member" : "io.smartdatalake.workflow.action.NoDataToProcessWarning#<init>", "error" : "unsupported entity"}, {"label" : "msg", "tail" : ": String", "member" : "io.smartdatalake.workflow.action.NoDataToProcessWarning.msg", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#msg:String", "kind" : "val"}, {"label" : "actionId", "tail" : ": NodeId", "member" : "io.smartdatalake.workflow.action.NoDataToProcessWarning.actionId", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#actionId:io.smartdatalake.workflow.DAGHelper.NodeId", "kind" : "val"}, {"label" : "getDAGRootExceptions", "tail" : "(): Seq[DAGException]", "member" : "io.smartdatalake.workflow.TaskSkippedWarning.getDAGRootExceptions", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getDAGRootExceptions:Seq[io.smartdatalake.workflow.DAGException]", "kind" : "def"}, {"label" : "severity", "tail" : ": ExceptionSeverity", "member" : "io.smartdatalake.workflow.TaskSkippedWarning.severity", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#severity:io.smartdatalake.workflow.ExceptionSeverity.ExceptionSeverity", "kind" : "val"}, {"label" : "getMessageWithCause", "tail" : "(): String", "member" : "io.smartdatalake.workflow.DAGException.getMessageWithCause", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getMessageWithCause:String", "kind" : "def"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/NoDataToProcessWarning.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.SparkSubFeedAction", "shortDescription" : "", "members_class" : [{"label" : "postExecSubFeed", "tail" : "(inputSubFeed: SubFeed, outputSubFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.postExecSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#postExecSubFeed(inputSubFeed:io.smartdatalake.workflow.SubFeed,outputSubFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "final def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.init", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "recursiveInputs", "tail" : "(): Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.action.SparkSubFeedAction#<init>", "error" : "unsupported entity"}, {"label" : "logWritingFinished", "tail" : "(subFeed: SparkSubFeed, noData: Boolean, duration: Duration)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingFinished", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#logWritingFinished(subFeed:io.smartdatalake.workflow.SparkSubFeed,noData:Boolean,duration:java.time.Duration)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "logWritingStarted", "tail" : "(subFeed: SparkSubFeed)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingStarted", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#logWritingStarted(subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "prepareInputSubFeed", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, ignoreFilters: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.prepareInputSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#prepareInputSubFeed(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,ignoreFilters:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "filterDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], genericFilter: Option[Column]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.filterDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#filterDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],genericFilter:Option[org.apache.spark.sql.Column]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateDataFrameContainsCols", "tail" : "(df: DataFrame, columns: Seq[String], debugName: String): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.validateDataFrameContainsCols", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#validateDataFrameContainsCols(df:org.apache.spark.sql.DataFrame,columns:Seq[String],debugName:String):Unit", "kind" : "def"}, {"label" : "validateAndUpdateSubFeed", "tail" : "(output: DataObject, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.validateAndUpdateSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#validateAndUpdateSubFeed(output:io.smartdatalake.workflow.dataobject.DataObject,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "applyTransformations", "tail" : "(inputSubFeed: SparkSubFeed, transformation: Option[CustomDfTransformerConfig], columnBlacklist: Option[Seq[String]], columnWhitelist: Option[Seq[String]], additionalColumns: Option[Map[String, String]], standardizeDatatypes: Boolean, additionalTransformers: Seq[(DataFrame) ⇒ DataFrame], filterClauseExpr: Option[Column])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyTransformations", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#applyTransformations(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,transformation:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig],columnBlacklist:Option[Seq[String]],columnWhitelist:Option[Seq[String]],additionalColumns:Option[Map[String,String]],standardizeDatatypes:Boolean,additionalTransformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame],filterClauseExpr:Option[org.apache.spark.sql.Column])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCastDecimal2IntegralFloat", "tail" : "(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCastDecimal2IntegralFloat", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#applyCastDecimal2IntegralFloat(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyFilter", "tail" : "(filterClauseExpr: Column)(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyFilter", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#applyFilter(filterClauseExpr:org.apache.spark.sql.Column)(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyAdditionalColumns", "tail" : "(additionalColumns: Map[String, String], partitionValues: Seq[PartitionValues])(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyAdditionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#applyAdditionalColumns(additionalColumns:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCustomTransformation", "tail" : "(transformer: CustomDfTransformerConfig, subFeed: SparkSubFeed)(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCustomTransformation", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#applyCustomTransformation(transformer:io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig,subFeed:io.smartdatalake.workflow.SparkSubFeed)(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "multiTransformDataFrame", "tail" : "(inputDf: DataFrame, transformers: Seq[(DataFrame) ⇒ DataFrame]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.multiTransformDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#multiTransformDataFrame(inputDf:org.apache.spark.sql.DataFrame,transformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "subFeedDfTransformer", "tail" : "(fnTransform: (DataFrame) ⇒ DataFrame)(subFeed: SparkSubFeed): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.subFeedDfTransformer", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#subFeedDfTransformer(fnTransform:org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame)(subFeed:io.smartdatalake.workflow.SparkSubFeed):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "writeSubFeed", "tail" : "(subFeed: SparkSubFeed, output: DataObject with CanWriteDataFrame, isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.writeSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#writeSubFeed(subFeed:io.smartdatalake.workflow.SparkSubFeed,output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame,isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "createEmptyDataFrame", "tail" : "(dataObject: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.createEmptyDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#createEmptyDataFrame(dataObject:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "enrichSubFeedDataFrame", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, phase: ExecutionPhase)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.enrichSubFeedDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#enrichSubFeedDataFrame(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transformPartitionValues", "tail" : "(partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#transformPartitionValues(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(inputSubFeed: SparkSubFeed, outputSubFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.transform", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#transform(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,outputSubFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "abstract def"}, {"label" : "output", "tail" : "(): DataObject with CanWriteDataFrame", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.output", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame", "kind" : "abstract def"}, {"label" : "input", "tail" : "(): DataObject with CanCreateDataFrame", "member" : "io.smartdatalake.workflow.action.SparkSubFeedAction.input", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame", "kind" : "abstract def"}, {"label" : "persist", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.persist", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#persist:Boolean", "kind" : "abstract def"}, {"label" : "breakDataFrameLineage", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.breakDataFrameLineage", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#breakDataFrameLineage:Boolean", "kind" : "abstract def"}, {"label" : "metricsFailCondition", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.action.Action.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#metricsFailCondition:Option[String]", "kind" : "abstract def"}, {"label" : "executionMode", "tail" : "(): Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.Action.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "abstract def"}, {"label" : "executionCondition", "tail" : "(): Option[Condition]", "member" : "io.smartdatalake.workflow.action.Action.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "abstract def"}, {"label" : "outputs", "tail" : "(): Seq[DataObject]", "member" : "io.smartdatalake.workflow.action.Action.outputs", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "abstract def"}, {"label" : "inputs", "tail" : "(): Seq[DataObject]", "member" : "io.smartdatalake.workflow.action.Action.inputs", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "abstract def"}, {"label" : "metadata", "tail" : "(): Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.Action.metadata", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "abstract def"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.Action.id", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "abstract val"}, {"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.config.ParsableFromConfig.factory", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html#factory:io.smartdatalake.config.FromConfigFactory[CO]", "kind" : "abstract def"}], "class" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedAction.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.action.SparkSubFeedsAction", "shortDescription" : "", "members_class" : [{"label" : "postExec", "tail" : "(inputSubFeeds: Seq[SubFeed], outputSubFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.postExec", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#postExec(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "exec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.exec", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#exec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "init", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.init", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#init(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SubFeed]", "kind" : "final def"}, {"label" : "prepare", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.prepare", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#prepare(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getMainInput", "tail" : "(inputSubFeeds: Seq[SubFeed])(context: ActionPipelineContext): DataObject", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.getMainInput", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getMainInput(inputSubFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.dataobject.DataObject", "kind" : "def"}, {"label" : "mainOutput", "tail" : ": DataObject with CanWriteDataFrame", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.mainOutput", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#mainOutput:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame", "kind" : "lazy val"}, {"label" : "prioritizedMainInputCandidates", "tail" : ": Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.prioritizedMainInputCandidates", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#prioritizedMainInputCandidates:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "lazy val"}, {"label" : "recursiveInputs", "tail" : "(): Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.recursiveInputs", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#recursiveInputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction#<init>", "error" : "unsupported entity"}, {"label" : "logWritingFinished", "tail" : "(subFeed: SparkSubFeed, noData: Boolean, duration: Duration)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingFinished", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#logWritingFinished(subFeed:io.smartdatalake.workflow.SparkSubFeed,noData:Boolean,duration:java.time.Duration)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "logWritingStarted", "tail" : "(subFeed: SparkSubFeed)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.logWritingStarted", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#logWritingStarted(subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "prepareInputSubFeed", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, ignoreFilters: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.prepareInputSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#prepareInputSubFeed(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,ignoreFilters:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "filterDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], genericFilter: Option[Column]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.filterDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#filterDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],genericFilter:Option[org.apache.spark.sql.Column]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateDataFrameContainsCols", "tail" : "(df: DataFrame, columns: Seq[String], debugName: String): Unit", "member" : "io.smartdatalake.workflow.action.SparkAction.validateDataFrameContainsCols", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#validateDataFrameContainsCols(df:org.apache.spark.sql.DataFrame,columns:Seq[String],debugName:String):Unit", "kind" : "def"}, {"label" : "validateAndUpdateSubFeed", "tail" : "(output: DataObject, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.validateAndUpdateSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#validateAndUpdateSubFeed(output:io.smartdatalake.workflow.dataobject.DataObject,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "applyTransformations", "tail" : "(inputSubFeed: SparkSubFeed, transformation: Option[CustomDfTransformerConfig], columnBlacklist: Option[Seq[String]], columnWhitelist: Option[Seq[String]], additionalColumns: Option[Map[String, String]], standardizeDatatypes: Boolean, additionalTransformers: Seq[(DataFrame) ⇒ DataFrame], filterClauseExpr: Option[Column])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyTransformations", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#applyTransformations(inputSubFeed:io.smartdatalake.workflow.SparkSubFeed,transformation:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig],columnBlacklist:Option[Seq[String]],columnWhitelist:Option[Seq[String]],additionalColumns:Option[Map[String,String]],standardizeDatatypes:Boolean,additionalTransformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame],filterClauseExpr:Option[org.apache.spark.sql.Column])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCastDecimal2IntegralFloat", "tail" : "(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCastDecimal2IntegralFloat", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#applyCastDecimal2IntegralFloat(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyFilter", "tail" : "(filterClauseExpr: Column)(df: DataFrame): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyFilter", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#applyFilter(filterClauseExpr:org.apache.spark.sql.Column)(df:org.apache.spark.sql.DataFrame):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyAdditionalColumns", "tail" : "(additionalColumns: Map[String, String], partitionValues: Seq[PartitionValues])(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyAdditionalColumns", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#applyAdditionalColumns(additionalColumns:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "applyCustomTransformation", "tail" : "(transformer: CustomDfTransformerConfig, subFeed: SparkSubFeed)(df: DataFrame)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.applyCustomTransformation", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#applyCustomTransformation(transformer:io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig,subFeed:io.smartdatalake.workflow.SparkSubFeed)(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "multiTransformDataFrame", "tail" : "(inputDf: DataFrame, transformers: Seq[(DataFrame) ⇒ DataFrame]): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.multiTransformDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#multiTransformDataFrame(inputDf:org.apache.spark.sql.DataFrame,transformers:Seq[org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "subFeedDfTransformer", "tail" : "(fnTransform: (DataFrame) ⇒ DataFrame)(subFeed: SparkSubFeed): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.subFeedDfTransformer", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#subFeedDfTransformer(fnTransform:org.apache.spark.sql.DataFrame=>org.apache.spark.sql.DataFrame)(subFeed:io.smartdatalake.workflow.SparkSubFeed):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "writeSubFeed", "tail" : "(subFeed: SparkSubFeed, output: DataObject with CanWriteDataFrame, isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.writeSubFeed", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#writeSubFeed(subFeed:io.smartdatalake.workflow.SparkSubFeed,output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame,isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "createEmptyDataFrame", "tail" : "(dataObject: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.SparkAction.createEmptyDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#createEmptyDataFrame(dataObject:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "enrichSubFeedDataFrame", "tail" : "(input: DataObject with CanCreateDataFrame, subFeed: SparkSubFeed, phase: ExecutionPhase)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.action.SparkAction.enrichSubFeedDataFrame", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#enrichSubFeedDataFrame(input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame,subFeed:io.smartdatalake.workflow.SparkSubFeed,phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.atlasName", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#atlasName:String", "kind" : "def"}, {"label" : "toStringMedium", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringMedium", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#toStringMedium:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toStringShort", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#toStringShort:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.toString", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#toString():String", "kind" : "final def"}, {"label" : "reset", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.reset", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#reset():Unit", "kind" : "def"}, {"label" : "getAllLatestMetrics", "tail" : "(): Map[DataObjectId, Option[ActionMetrics]]", "member" : "io.smartdatalake.workflow.action.Action.getAllLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getAllLatestMetrics:Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,Option[io.smartdatalake.workflow.ActionMetrics]]", "kind" : "def"}, {"label" : "getFinalMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getFinalMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getFinalMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "getLatestMetrics", "tail" : "(dataObjectId: DataObjectId): Option[ActionMetrics]", "member" : "io.smartdatalake.workflow.action.Action.getLatestMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getLatestMetrics(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):Option[io.smartdatalake.workflow.ActionMetrics]", "kind" : "def"}, {"label" : "onRuntimeMetrics", "tail" : "(dataObjectId: Option[DataObjectId], metrics: ActionMetrics): Unit", "member" : "io.smartdatalake.workflow.action.Action.onRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#onRuntimeMetrics(dataObjectId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId],metrics:io.smartdatalake.workflow.ActionMetrics):Unit", "kind" : "def"}, {"label" : "enableRuntimeMetrics", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.action.Action.enableRuntimeMetrics", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#enableRuntimeMetrics():Unit", "kind" : "def"}, {"label" : "getRuntimeInfo", "tail" : "(): Option[RuntimeInfo]", "member" : "io.smartdatalake.workflow.action.Action.getRuntimeInfo", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getRuntimeInfo:Option[io.smartdatalake.workflow.action.RuntimeInfo]", "kind" : "def"}, {"label" : "getLatestRuntimeState", "tail" : "(): Option[RuntimeEventState]", "member" : "io.smartdatalake.workflow.action.Action.getLatestRuntimeState", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getLatestRuntimeState:Option[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState]", "kind" : "def"}, {"label" : "addRuntimeEvent", "tail" : "(phase: ExecutionPhase, state: RuntimeEventState, msg: Option[String], results: Seq[SubFeed]): Unit", "member" : "io.smartdatalake.workflow.action.Action.addRuntimeEvent", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#addRuntimeEvent(phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase,state:io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,msg:Option[String],results:Seq[io.smartdatalake.workflow.SubFeed]):Unit", "kind" : "def"}, {"label" : "getOutputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getOutputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getOutputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$3:scala.reflect.ClassTag[T],implicitevidence$4:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "getInputDataObject", "tail" : "(id: DataObjectId)(arg0: ClassTag[T], arg1: scala.reflect.api.JavaUniverse.TypeTag[T], registry: InstanceRegistry): T", "member" : "io.smartdatalake.workflow.action.Action.getInputDataObject", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getInputDataObject[T<:io.smartdatalake.workflow.dataobject.DataObject](id:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitevidence$1:scala.reflect.ClassTag[T],implicitevidence$2:reflect.runtime.universe.TypeTag[T],implicitregistry:io.smartdatalake.config.InstanceRegistry):T", "kind" : "def"}, {"label" : "setSparkJobMetadata", "tail" : "(operation: Option[String])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.action.Action.setSparkJobMetadata", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#setSparkJobMetadata(operation:Option[String])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.Action.nodeId", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#nodeId:String", "kind" : "def"}, {"label" : "preExec", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preExec", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#preExec(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preInit", "tail" : "(subFeeds: Seq[SubFeed])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.action.Action.preInit", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#preInit(subFeeds:Seq[io.smartdatalake.workflow.SubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "executionModeResult", "tail" : ": Try[Option[ExecutionModeResult]]", "member" : "io.smartdatalake.workflow.action.Action.executionModeResult", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#executionModeResult:scala.util.Try[Option[io.smartdatalake.definitions.ExecutionModeResult]]", "kind" : "val"}, {"label" : "executionConditionResult", "tail" : ": (Boolean, Option[String])", "member" : "io.smartdatalake.workflow.action.Action.executionConditionResult", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#executionConditionResult:(Boolean,Option[String])", "kind" : "val"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transformPartitionValues", "tail" : "(partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#transformPartitionValues(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "abstract def"}, {"label" : "transform", "tail" : "(inputSubFeeds: Seq[SparkSubFeed], outputSubFeeds: Seq[SparkSubFeed])(session: SparkSession, context: ActionPipelineContext): Seq[SparkSubFeed]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.transform", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#transform(inputSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed],outputSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.SparkSubFeed]", "kind" : "abstract def"}, {"label" : "inputIdsToIgnoreFilter", "tail" : "(): Seq[DataObjectId]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.inputIdsToIgnoreFilter", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#inputIdsToIgnoreFilter:Seq[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "abstract def"}, {"label" : "mainOutputId", "tail" : "(): Option[DataObjectId]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.mainOutputId", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#mainOutputId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "abstract def"}, {"label" : "mainInputId", "tail" : "(): Option[DataObjectId]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.mainInputId", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#mainInputId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "abstract def"}, {"label" : "outputs", "tail" : "(): Seq[DataObject with CanWriteDataFrame]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.outputs", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#outputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanWriteDataFrame]", "kind" : "abstract def"}, {"label" : "inputs", "tail" : "(): Seq[DataObject with CanCreateDataFrame]", "member" : "io.smartdatalake.workflow.action.SparkSubFeedsAction.inputs", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#inputs:Seq[io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanCreateDataFrame]", "kind" : "abstract def"}, {"label" : "persist", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.persist", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#persist:Boolean", "kind" : "abstract def"}, {"label" : "breakDataFrameLineage", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.action.SparkAction.breakDataFrameLineage", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#breakDataFrameLineage:Boolean", "kind" : "abstract def"}, {"label" : "metricsFailCondition", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.action.Action.metricsFailCondition", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#metricsFailCondition:Option[String]", "kind" : "abstract def"}, {"label" : "executionMode", "tail" : "(): Option[ExecutionMode]", "member" : "io.smartdatalake.workflow.action.Action.executionMode", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#executionMode:Option[io.smartdatalake.definitions.ExecutionMode]", "kind" : "abstract def"}, {"label" : "executionCondition", "tail" : "(): Option[Condition]", "member" : "io.smartdatalake.workflow.action.Action.executionCondition", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#executionCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "abstract def"}, {"label" : "metadata", "tail" : "(): Option[ActionMetadata]", "member" : "io.smartdatalake.workflow.action.Action.metadata", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#metadata:Option[io.smartdatalake.workflow.action.ActionMetadata]", "kind" : "abstract def"}, {"label" : "id", "tail" : ": ActionId", "member" : "io.smartdatalake.workflow.action.Action.id", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#id:io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "abstract val"}, {"label" : "factory", "tail" : "(): FromConfigFactory[Action]", "member" : "io.smartdatalake.config.ParsableFromConfig.factory", "link" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html#factory:io.smartdatalake.config.FromConfigFactory[CO]", "kind" : "abstract def"}], "class" : "io\/smartdatalake\/workflow\/action\/SparkSubFeedsAction.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.action.SubFeedExpressionData", "shortDescription" : "", "members_case class" : [{"member" : "io.smartdatalake.workflow.action.SubFeedExpressionData#<init>", "error" : "unsupported entity"}, {"label" : "isSkipped", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.SubFeedExpressionData.isSkipped", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#isSkipped:Boolean", "kind" : "val"}, {"label" : "isDAGStart", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.action.SubFeedExpressionData.isDAGStart", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#isDAGStart:Boolean", "kind" : "val"}, {"label" : "partitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.SubFeedExpressionData.partitionValues", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#partitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/SubFeedExpressionData.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.SubFeedsExpressionData", "shortDescription" : "", "object" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html", "members_object" : [{"label" : "fromSubFeeds", "tail" : "(subFeeds: Seq[SubFeed]): SubFeedsExpressionData", "member" : "io.smartdatalake.workflow.action.SubFeedsExpressionData.fromSubFeeds", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#fromSubFeeds(subFeeds:Seq[io.smartdatalake.workflow.SubFeed]):io.smartdatalake.workflow.action.SubFeedsExpressionData", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "io.smartdatalake.workflow.action.SubFeedsExpressionData#<init>", "error" : "unsupported entity"}, {"label" : "inputSubFeeds", "tail" : ": Map[String, SubFeedExpressionData]", "member" : "io.smartdatalake.workflow.action.SubFeedsExpressionData.inputSubFeeds", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#inputSubFeeds:Map[String,io.smartdatalake.workflow.action.SubFeedExpressionData]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/SubFeedsExpressionData.html", "kind" : "case class"}], "io.smartdatalake.util" : [], "io.smartdatalake.util.evolution" : [{"name" : "io.smartdatalake.util.evolution.UnsafeUnaryUdf", "shortDescription" : "This defines a helper method to create the Udf.", "object" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html", "members_object" : [{"label" : "apply", "tail" : "(udf: (Any) ⇒ Any, srcType: DataType, tgtType: DataType): (Column) ⇒ Column", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdf.apply", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#apply(udf:Any=>Any,srcType:org.apache.spark.sql.types.DataType,tgtType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.Column=>org.apache.spark.sql.Column", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdf$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression", "shortDescription" : "With Spark 3.0 the API for Udf's was made more typesafe.", "members_case class" : [{"label" : "doGenCode", "tail" : "(ctx: CodegenContext, ev: ExprCode): ExprCode", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.doGenCode", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#doGenCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "prettyName", "tail" : "(): String", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.prettyName", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#prettyName:String", "kind" : "def"}, {"label" : "nullSafeEval", "tail" : "(input: Any): Any", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.nullSafeEval", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#nullSafeEval(input:Any):Any", "kind" : "def"}, {"label" : "nullable", "tail" : "(): Boolean", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.nullable", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#nullable:Boolean", "kind" : "def"}, {"label" : "dataType", "tail" : "(): DataType", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.dataType", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#dataType:org.apache.spark.sql.types.DataType", "kind" : "def"}, {"member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression#<init>", "error" : "unsupported entity"}, {"label" : "tgtDataType", "tail" : ": DataType", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.tgtDataType", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#tgtDataType:org.apache.spark.sql.types.DataType", "kind" : "val"}, {"label" : "udf", "tail" : ": (Any) ⇒ Any", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.udf", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#udf:Any=>Any", "kind" : "val"}, {"label" : "child", "tail" : ": Expression", "member" : "io.smartdatalake.util.evolution.UnsafeUnaryUdfExpression.child", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#child:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "val"}, {"label" : "nullSafeCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.nullSafeCodeGen", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#nullSafeCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "defineCodeGen", "tail" : "(ctx: CodegenContext, ev: ExprCode, f: (String) ⇒ String): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.defineCodeGen", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#defineCodeGen(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext,ev:org.apache.spark.sql.catalyst.expressions.codegen.ExprCode,f:String=>String):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "eval", "tail" : "(input: InternalRow): Any", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.eval", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#eval(input:org.apache.spark.sql.catalyst.InternalRow):Any", "kind" : "def"}, {"label" : "foldable", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.foldable", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#foldable:Boolean", "kind" : "def"}, {"label" : "children", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.expressions.UnaryExpression.children", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#children:Seq[org.apache.spark.sql.catalyst.expressions.Expression]", "kind" : "final def"}, {"label" : "simpleStringWithNodeId", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleStringWithNodeId", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#simpleStringWithNodeId():String", "kind" : "def"}, {"label" : "sql", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.sql", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#sql:String", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.toString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#toString():String", "kind" : "def"}, {"label" : "simpleString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.simpleString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#simpleString(maxFields:Int):String", "kind" : "def"}, {"label" : "verboseString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.verboseString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#verboseString(maxFields:Int):String", "kind" : "final def"}, {"label" : "flatArguments", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.flatArguments", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#flatArguments:Iterator[Any]", "kind" : "def"}, {"label" : "checkInputDataTypes", "tail" : "(): TypeCheckResult", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.checkInputDataTypes", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#checkInputDataTypes():org.apache.spark.sql.catalyst.analysis.TypeCheckResult", "kind" : "def"}, {"label" : "semanticHash", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticHash", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#semanticHash():Int", "kind" : "def"}, {"label" : "semanticEquals", "tail" : "(other: Expression): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.semanticEquals", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#semanticEquals(other:org.apache.spark.sql.catalyst.expressions.Expression):Boolean", "kind" : "def"}, {"label" : "canonicalized", "tail" : ": Expression", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.canonicalized", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#canonicalized:org.apache.spark.sql.catalyst.expressions.Expression", "kind" : "lazy val"}, {"label" : "childrenResolved", "tail" : "(): Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.childrenResolved", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#childrenResolved:Boolean", "kind" : "def"}, {"label" : "resolved", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.resolved", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#resolved:Boolean", "kind" : "lazy val"}, {"label" : "genCode", "tail" : "(ctx: CodegenContext): ExprCode", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.genCode", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#genCode(ctx:org.apache.spark.sql.catalyst.expressions.codegen.CodegenContext):org.apache.spark.sql.catalyst.expressions.codegen.ExprCode", "kind" : "def"}, {"label" : "references", "tail" : "(): AttributeSet", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.references", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#references:org.apache.spark.sql.catalyst.expressions.AttributeSet", "kind" : "def"}, {"label" : "deterministic", "tail" : ": Boolean", "member" : "org.apache.spark.sql.catalyst.expressions.Expression.deterministic", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#deterministic:Boolean", "kind" : "lazy val"}, {"label" : "jsonFields", "tail" : "(): List[JField]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.jsonFields", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#jsonFields:List[org.json4s.JsonAST.JField]", "kind" : "def"}, {"label" : "prettyJson", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.prettyJson", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#prettyJson:String", "kind" : "def"}, {"label" : "toJSON", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.toJSON", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#toJSON:String", "kind" : "def"}, {"label" : "asCode", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.asCode", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#asCode:String", "kind" : "def"}, {"label" : "generateTreeString", "tail" : "(depth: Int, lastChildren: Seq[Boolean], append: (String) ⇒ Unit, verbose: Boolean, prefix: String, addSuffix: Boolean, maxFields: Int, printNodeId: Boolean, indent: Int): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.generateTreeString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#generateTreeString(depth:Int,lastChildren:Seq[Boolean],append:String=>Unit,verbose:Boolean,prefix:String,addSuffix:Boolean,maxFields:Int,printNodeId:Boolean,indent:Int):Unit", "kind" : "def"}, {"label" : "innerChildren", "tail" : "(): Seq[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.innerChildren", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#innerChildren:Seq[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "def"}, {"label" : "p", "tail" : "(number: Int): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.p", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#p(number:Int):BaseType", "kind" : "def"}, {"label" : "apply", "tail" : "(number: Int): TreeNode[_]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.apply", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#apply(number:Int):org.apache.spark.sql.catalyst.trees.TreeNode[_]", "kind" : "def"}, {"label" : "numberedTreeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.numberedTreeString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#numberedTreeString:String", "kind" : "def"}, {"label" : "treeString", "tail" : "(append: (String) ⇒ Unit, verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#treeString(append:String=>Unit,verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):Unit", "kind" : "def"}, {"label" : "treeString", "tail" : "(verbose: Boolean, addSuffix: Boolean, maxFields: Int, printOperatorId: Boolean): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#treeString(verbose:Boolean,addSuffix:Boolean,maxFields:Int,printOperatorId:Boolean):String", "kind" : "final def"}, {"label" : "treeString", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.treeString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#treeString:String", "kind" : "final def"}, {"label" : "verboseStringWithSuffix", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.verboseStringWithSuffix", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#verboseStringWithSuffix(maxFields:Int):String", "kind" : "def"}, {"label" : "argString", "tail" : "(maxFields: Int): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.argString", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#argString(maxFields:Int):String", "kind" : "def"}, {"label" : "stringArgs", "tail" : "(): Iterator[Any]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.stringArgs", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#stringArgs:Iterator[Any]", "kind" : "def"}, {"label" : "nodeName", "tail" : "(): String", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.nodeName", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#nodeName:String", "kind" : "def"}, {"label" : "clone", "tail" : "(): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.clone", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#clone():BaseType", "kind" : "def"}, {"label" : "makeCopy", "tail" : "(newArgs: Array[AnyRef]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.makeCopy", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#makeCopy(newArgs:Array[AnyRef]):BaseType", "kind" : "def"}, {"label" : "otherCopyArgs", "tail" : "(): Seq[AnyRef]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.otherCopyArgs", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#otherCopyArgs:Seq[AnyRef]", "kind" : "def"}, {"label" : "mapChildren", "tail" : "(f: (Expression) ⇒ Expression): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapChildren", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#mapChildren(f:BaseType=>BaseType):BaseType", "kind" : "def"}, {"label" : "transformUp", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformUp", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#transformUp(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transformDown", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transformDown", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#transformDown(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "transform", "tail" : "(rule: PartialFunction[Expression, Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.transform", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#transform(rule:PartialFunction[BaseType,BaseType]):BaseType", "kind" : "def"}, {"label" : "withNewChildren", "tail" : "(newChildren: Seq[Expression]): Expression", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.withNewChildren", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#withNewChildren(newChildren:Seq[BaseType]):BaseType", "kind" : "def"}, {"label" : "mapProductIterator", "tail" : "(f: (Any) ⇒ B)(arg0: ClassTag[B]): Array[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.mapProductIterator", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#mapProductIterator[B](f:Any=>B)(implicitevidence$1:scala.reflect.ClassTag[B]):Array[B]", "kind" : "def"}, {"label" : "collectFirst", "tail" : "(pf: PartialFunction[Expression, B]): Option[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectFirst", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#collectFirst[B](pf:PartialFunction[BaseType,B]):Option[B]", "kind" : "def"}, {"label" : "collectLeaves", "tail" : "(): Seq[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collectLeaves", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#collectLeaves():Seq[BaseType]", "kind" : "def"}, {"label" : "collect", "tail" : "(pf: PartialFunction[Expression, B]): Seq[B]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.collect", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#collect[B](pf:PartialFunction[BaseType,B]):Seq[B]", "kind" : "def"}, {"label" : "flatMap", "tail" : "(f: (Expression) ⇒ TraversableOnce[A]): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.flatMap", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#flatMap[A](f:BaseType=>TraversableOnce[A]):Seq[A]", "kind" : "def"}, {"label" : "map", "tail" : "(f: (Expression) ⇒ A): Seq[A]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.map", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#map[A](f:BaseType=>A):Seq[A]", "kind" : "def"}, {"label" : "foreachUp", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreachUp", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#foreachUp(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "foreach", "tail" : "(f: (Expression) ⇒ Unit): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.foreach", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#foreach(f:BaseType=>Unit):Unit", "kind" : "def"}, {"label" : "find", "tail" : "(f: (Expression) ⇒ Boolean): Option[Expression]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.find", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#find(f:BaseType=>Boolean):Option[BaseType]", "kind" : "def"}, {"label" : "fastEquals", "tail" : "(other: TreeNode[_]): Boolean", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.fastEquals", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#fastEquals(other:org.apache.spark.sql.catalyst.trees.TreeNode[_]):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.hashCode", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#hashCode():Int", "kind" : "def"}, {"label" : "containsChild", "tail" : ": Set[TreeNode[_]]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.containsChild", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#containsChild:Set[org.apache.spark.sql.catalyst.trees.TreeNode[_]]", "kind" : "lazy val"}, {"label" : "unsetTagValue", "tail" : "(tag: TreeNodeTag[T]): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.unsetTagValue", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#unsetTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Unit", "kind" : "def"}, {"label" : "getTagValue", "tail" : "(tag: TreeNodeTag[T]): Option[T]", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.getTagValue", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#getTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T]):Option[T]", "kind" : "def"}, {"label" : "setTagValue", "tail" : "(tag: TreeNodeTag[T], value: T): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.setTagValue", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#setTagValue[T](tag:org.apache.spark.sql.catalyst.trees.TreeNodeTag[T],value:T):Unit", "kind" : "def"}, {"label" : "copyTagsFrom", "tail" : "(other: Expression): Unit", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.copyTagsFrom", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#copyTagsFrom(other:BaseType):Unit", "kind" : "def"}, {"label" : "origin", "tail" : ": Origin", "member" : "org.apache.spark.sql.catalyst.trees.TreeNode.origin", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#origin:org.apache.spark.sql.catalyst.trees.Origin", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#notify():Unit", "kind" : "final def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/util\/evolution\/UnsafeUnaryUdfExpression.html", "kind" : "case class"}], "io.smartdatalake.definitions" : [{"name" : "io.smartdatalake.definitions.AuthHeaderMode", "shortDescription" : "Connect by custom authorization header", "members_case class" : [{"member" : "io.smartdatalake.definitions.AuthHeaderMode#<init>", "error" : "unsupported entity"}, {"label" : "secretVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.AuthHeaderMode.secretVariable", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#secretVariable:String", "kind" : "val"}, {"label" : "headerName", "tail" : ": String", "member" : "io.smartdatalake.definitions.AuthHeaderMode.headerName", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#headerName:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/AuthHeaderMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.AuthMode", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/AuthMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/AuthMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Authentication modes define how an application authenticates itselfto a given data object\/connection", "trait" : "io\/smartdatalake\/definitions\/AuthMode.html", "kind" : "trait"}, {"name" : "io.smartdatalake.definitions.BasicAuthMode", "shortDescription" : "Connect by basic authentication", "members_case class" : [{"member" : "io.smartdatalake.definitions.BasicAuthMode#<init>", "error" : "unsupported entity"}, {"label" : "passwordVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.BasicAuthMode.passwordVariable", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#passwordVariable:String", "kind" : "val"}, {"label" : "userVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.BasicAuthMode.userVariable", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#userVariable:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/BasicAuthMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/BasicAuthMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.Condition", "shortDescription" : "Definition of a Spark SQL condition with description.", "members_case class" : [{"member" : "io.smartdatalake.definitions.Condition#<init>", "error" : "unsupported entity"}, {"label" : "description", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.Condition.description", "link" : "io\/smartdatalake\/definitions\/Condition.html#description:Option[String]", "kind" : "val"}, {"label" : "expression", "tail" : ": String", "member" : "io.smartdatalake.definitions.Condition.expression", "link" : "io\/smartdatalake\/definitions\/Condition.html#expression:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/Condition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/Condition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/Condition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/Condition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/Condition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/Condition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/Condition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/Condition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/Condition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/Condition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/Condition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/Condition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/Condition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/Condition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/Condition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/Condition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/Condition.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.CustomHttpAuthMode", "shortDescription" : "Connect with custom HTTP authentication", "members_case class" : [{"member" : "io.smartdatalake.definitions.CustomHttpAuthMode#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.definitions.CustomHttpAuthMode.options", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#options:Map[String,String]", "kind" : "val"}, {"label" : "className", "tail" : ": String", "member" : "io.smartdatalake.definitions.CustomHttpAuthMode.className", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#className:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/CustomHttpAuthMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.CustomHttpAuthModeLogic", "members_trait" : [{"label" : "prepare", "tail" : "(options: Map[String, String]): Unit", "member" : "io.smartdatalake.definitions.CustomHttpAuthModeLogic.prepare", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#prepare(options:Map[String,String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/smartdatalake\/definitions\/CustomHttpAuthModeLogic.html", "kind" : "trait"}, {"name" : "io.smartdatalake.definitions.CustomPartitionMode", "shortDescription" : "Execution mode to create custom partition execution mode logic.", "members_case class" : [{"member" : "io.smartdatalake.definitions.CustomPartitionMode#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.definitions.CustomPartitionMode.options", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "alternativeOutputId", "tail" : ": Option[DataObjectId]", "member" : "io.smartdatalake.definitions.CustomPartitionMode.alternativeOutputId", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#alternativeOutputId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "className", "tail" : ": String", "member" : "io.smartdatalake.definitions.CustomPartitionMode.className", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#className:String", "kind" : "val"}, {"label" : "alternativeOutput", "tail" : "(context: ActionPipelineContext): Option[DataObject]", "member" : "io.smartdatalake.definitions.ExecutionModeWithMainInputOutput.alternativeOutput", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#alternativeOutput(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Option[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/CustomPartitionMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.CustomPartitionModeLogic", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "apply", "tail" : "(session: SparkSession, options: Map[String, String], actionId: ActionId, input: DataObject with CanHandlePartitions, output: DataObject with CanHandlePartitions, givenPartitionValues: Seq[Map[String, String]], context: ActionPipelineContext): Option[Seq[Map[String, String]]]", "member" : "io.smartdatalake.definitions.CustomPartitionModeLogic.apply", "link" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html#apply(session:org.apache.spark.sql.SparkSession,options:Map[String,String],actionId:io.smartdatalake.config.SdlConfigObject.ActionId,input:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanHandlePartitions,output:io.smartdatalake.workflow.dataobject.DataObjectwithio.smartdatalake.workflow.dataobject.CanHandlePartitions,givenPartitionValues:Seq[Map[String,String]],context:io.smartdatalake.workflow.ActionPipelineContext):Option[Seq[Map[String,String]]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/smartdatalake\/definitions\/CustomPartitionModeLogic.html", "kind" : "trait"}, {"name" : "io.smartdatalake.definitions.DateColumnType", "shortDescription" : "Datatype for date columns in Hive", "object" : "io\/smartdatalake\/definitions\/DateColumnType$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Default", "tail" : ": Value", "member" : "io.smartdatalake.definitions.DateColumnType.Default", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#Default:io.smartdatalake.definitions.DateColumnType.Value", "kind" : "val"}, {"label" : "String", "tail" : ": Value", "member" : "io.smartdatalake.definitions.DateColumnType.String", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#String:io.smartdatalake.definitions.DateColumnType.Value", "kind" : "val"}, {"label" : "Date", "tail" : ": Value", "member" : "io.smartdatalake.definitions.DateColumnType.Date", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#Date:io.smartdatalake.definitions.DateColumnType.Value", "kind" : "val"}, {"label" : "DateColumnType", "tail" : "", "member" : "io.smartdatalake.definitions.DateColumnType.DateColumnType", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#DateColumnType=io.smartdatalake.definitions.DateColumnType.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/DateColumnType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData", "shortDescription" : "Attributes definition for spark expressions used as ExecutionMode conditions.", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.toString", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#toString():String", "kind" : "def"}, {"member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData#<init>", "error" : "unsupported entity"}, {"label" : "isStartNode", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.isStartNode", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#isStartNode:Boolean", "kind" : "val"}, {"label" : "givenPartitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.givenPartitionValues", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#givenPartitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "attemptStartTime", "tail" : ": Timestamp", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.attemptStartTime", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#attemptStartTime:java.sql.Timestamp", "kind" : "val"}, {"label" : "runStartTime", "tail" : ": Timestamp", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.runStartTime", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#runStartTime:java.sql.Timestamp", "kind" : "val"}, {"label" : "referenceTimestamp", "tail" : ": Option[Timestamp]", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.referenceTimestamp", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#referenceTimestamp:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "attemptId", "tail" : ": Int", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.attemptId", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#attemptId:Int", "kind" : "val"}, {"label" : "runId", "tail" : ": Int", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.runId", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#runId:Int", "kind" : "val"}, {"label" : "application", "tail" : ": String", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.application", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#application:String", "kind" : "val"}, {"label" : "feed", "tail" : ": String", "member" : "io.smartdatalake.definitions.DefaultExecutionModeExpressionData.feed", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#feed:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/DefaultExecutionModeExpressionData.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.Environment", "shortDescription" : "Environment dependent configurations.", "object" : "io\/smartdatalake\/definitions\/Environment$.html", "members_object" : [{"label" : "globalConfig", "tail" : "(): GlobalConfig", "member" : "io.smartdatalake.definitions.Environment.globalConfig", "link" : "io\/smartdatalake\/definitions\/Environment$.html#globalConfig:io.smartdatalake.app.GlobalConfig", "kind" : "def"}, {"label" : "instanceRegistry", "tail" : "(): InstanceRegistry", "member" : "io.smartdatalake.definitions.Environment.instanceRegistry", "link" : "io\/smartdatalake\/definitions\/Environment$.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "def"}, {"label" : "sparkSession", "tail" : "(): SparkSession", "member" : "io.smartdatalake.definitions.Environment.sparkSession", "link" : "io\/smartdatalake\/definitions\/Environment$.html#sparkSession:org.apache.spark.sql.SparkSession", "kind" : "def"}, {"label" : "runIdPartitionColumnName", "tail" : ": String", "member" : "io.smartdatalake.definitions.Environment.runIdPartitionColumnName", "link" : "io\/smartdatalake\/definitions\/Environment$.html#runIdPartitionColumnName:String", "kind" : "val"}, {"label" : "defaultPathSeparator", "tail" : ": Char", "member" : "io.smartdatalake.definitions.Environment.defaultPathSeparator", "link" : "io\/smartdatalake\/definitions\/Environment$.html#defaultPathSeparator:Char", "kind" : "val"}, {"label" : "configPathsForLocalSubstitution", "tail" : ": Seq[String]", "member" : "io.smartdatalake.definitions.Environment.configPathsForLocalSubstitution", "link" : "io\/smartdatalake\/definitions\/Environment$.html#configPathsForLocalSubstitution:Seq[String]", "kind" : "val"}, {"label" : "enableOverwriteUnpartitionedSparkFileDataObjectAdls", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.Environment.enableOverwriteUnpartitionedSparkFileDataObjectAdls", "link" : "io\/smartdatalake\/definitions\/Environment$.html#enableOverwriteUnpartitionedSparkFileDataObjectAdls:Boolean", "kind" : "var"}, {"label" : "enableAutomaticDataFrameCaching", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.Environment.enableAutomaticDataFrameCaching", "link" : "io\/smartdatalake\/definitions\/Environment$.html#enableAutomaticDataFrameCaching:Boolean", "kind" : "var"}, {"label" : "schemaValidationDeepComarison", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.Environment.schemaValidationDeepComarison", "link" : "io\/smartdatalake\/definitions\/Environment$.html#schemaValidationDeepComarison:Boolean", "kind" : "var"}, {"label" : "schemaValidationIgnoresNullability", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.Environment.schemaValidationIgnoresNullability", "link" : "io\/smartdatalake\/definitions\/Environment$.html#schemaValidationIgnoresNullability:Boolean", "kind" : "var"}, {"label" : "schemaEvolutionNewColumnsLast", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.Environment.schemaEvolutionNewColumnsLast", "link" : "io\/smartdatalake\/definitions\/Environment$.html#schemaEvolutionNewColumnsLast:Boolean", "kind" : "var"}, {"label" : "enableCheckConfigDuplicates", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.Environment.enableCheckConfigDuplicates", "link" : "io\/smartdatalake\/definitions\/Environment$.html#enableCheckConfigDuplicates:Boolean", "kind" : "var"}, {"label" : "hadoopDefaultSchemeAuthority", "tail" : ": Option[URI]", "member" : "io.smartdatalake.definitions.Environment.hadoopDefaultSchemeAuthority", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hadoopDefaultSchemeAuthority:Option[java.net.URI]", "kind" : "var"}, {"label" : "hdfsBasedir", "tail" : ": Option[URI]", "member" : "io.smartdatalake.definitions.Environment.hdfsBasedir", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hdfsBasedir:Option[java.net.URI]", "kind" : "var"}, {"label" : "hdfsAclsUserHomeLevel", "tail" : ": Int", "member" : "io.smartdatalake.definitions.Environment.hdfsAclsUserHomeLevel", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hdfsAclsUserHomeLevel:Int", "kind" : "var"}, {"label" : "hdfsAclsLimitToBasedir", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.Environment.hdfsAclsLimitToBasedir", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hdfsAclsLimitToBasedir:Boolean", "kind" : "var"}, {"label" : "hdfsAclsMinLevelPermissionOverwrite", "tail" : ": Int", "member" : "io.smartdatalake.definitions.Environment.hdfsAclsMinLevelPermissionOverwrite", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hdfsAclsMinLevelPermissionOverwrite:Int", "kind" : "var"}, {"label" : "hdfsAclsMinLevelPermissionModify", "tail" : ": Int", "member" : "io.smartdatalake.definitions.Environment.hdfsAclsMinLevelPermissionModify", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hdfsAclsMinLevelPermissionModify:Int", "kind" : "var"}, {"label" : "hadoopAuthoritiesWithAclsRequired", "tail" : ": Seq[String]", "member" : "io.smartdatalake.definitions.Environment.hadoopAuthoritiesWithAclsRequired", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hadoopAuthoritiesWithAclsRequired:Seq[String]", "kind" : "var"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/Environment$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/Environment$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/Environment$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/Environment$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/Environment$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/Environment$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/Environment$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/Environment$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/Environment$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/Environment$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/Environment$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/Environment$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/definitions\/Environment$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/Environment$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/Environment$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/Environment$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/Environment$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/Environment$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/Environment$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.definitions.ExecutionMode", "members_trait" : [{"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/ExecutionMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "Execution mode defines how data is selected when running a data pipeline.", "trait" : "io\/smartdatalake\/definitions\/ExecutionMode.html", "kind" : "trait"}, {"name" : "io.smartdatalake.definitions.ExecutionModeResult", "shortDescription" : "Result of execution mode application", "members_case class" : [{"member" : "io.smartdatalake.definitions.ExecutionModeResult#<init>", "error" : "unsupported entity"}, {"label" : "fileRefs", "tail" : ": Option[Seq[FileRef]]", "member" : "io.smartdatalake.definitions.ExecutionModeResult.fileRefs", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#fileRefs:Option[Seq[io.smartdatalake.workflow.dataobject.FileRef]]", "kind" : "val"}, {"label" : "filter", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.ExecutionModeResult.filter", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#filter:Option[String]", "kind" : "val"}, {"label" : "outputPartitionValues", "tail" : ": Seq[PartitionValues]", "member" : "io.smartdatalake.definitions.ExecutionModeResult.outputPartitionValues", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#outputPartitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "val"}, {"label" : "inputPartitionValues", "tail" : ": Seq[PartitionValues]", "member" : "io.smartdatalake.definitions.ExecutionModeResult.inputPartitionValues", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#inputPartitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/ExecutionModeResult.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.FailIfNoPartitionValuesMode", "shortDescription" : "An execution mode which just validates that partition values are given.", "members_case class" : [{"member" : "io.smartdatalake.definitions.FailIfNoPartitionValuesMode#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/FailIfNoPartitionValuesMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.FileIncrementalMoveMode", "shortDescription" : "Execution mode to incrementally process file-based DataObjects.", "members_case class" : [{"member" : "io.smartdatalake.definitions.FileIncrementalMoveMode#<init>", "error" : "unsupported entity"}, {"label" : "stopIfNoData", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.FileIncrementalMoveMode.stopIfNoData", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#stopIfNoData:Boolean", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/FileIncrementalMoveMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.HiveConventions", "shortDescription" : "Hive conventions", "object" : "io\/smartdatalake\/definitions\/HiveConventions$.html", "members_object" : [{"label" : "getHistorizationSurrogateTimestamp", "tail" : "(): LocalDateTime", "member" : "io.smartdatalake.definitions.HiveConventions.getHistorizationSurrogateTimestamp", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#getHistorizationSurrogateTimestamp:java.time.LocalDateTime", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/HiveConventions$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.definitions.HiveTableLocationSuffix", "shortDescription" : "Suffix used for alternating parquet HDFS paths (usually in TickTockHiveTableDataObject for integration layer)", "object" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Tock", "tail" : ": Value", "member" : "io.smartdatalake.definitions.HiveTableLocationSuffix.Tock", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#Tock:io.smartdatalake.definitions.HiveTableLocationSuffix.Value", "kind" : "val"}, {"label" : "Tick", "tail" : ": Value", "member" : "io.smartdatalake.definitions.HiveTableLocationSuffix.Tick", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#Tick:io.smartdatalake.definitions.HiveTableLocationSuffix.Value", "kind" : "val"}, {"label" : "HiveTableLocationSuffix", "tail" : "", "member" : "io.smartdatalake.definitions.HiveTableLocationSuffix.HiveTableLocationSuffix", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#HiveTableLocationSuffix=io.smartdatalake.definitions.HiveTableLocationSuffix.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/HiveTableLocationSuffix$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.definitions.KeycloakClientSecretAuthMode", "shortDescription" : "Connect by using Keycloak to manage token and token refresh giving clientId\/secret as information.", "members_case class" : [{"member" : "io.smartdatalake.definitions.KeycloakClientSecretAuthMode#<init>", "error" : "unsupported entity"}, {"label" : "clientSecretVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.KeycloakClientSecretAuthMode.clientSecretVariable", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#clientSecretVariable:String", "kind" : "val"}, {"label" : "clientIdVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.KeycloakClientSecretAuthMode.clientIdVariable", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#clientIdVariable:String", "kind" : "val"}, {"label" : "ssoGrantType", "tail" : ": String", "member" : "io.smartdatalake.definitions.KeycloakClientSecretAuthMode.ssoGrantType", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#ssoGrantType:String", "kind" : "val"}, {"label" : "ssoRealm", "tail" : ": String", "member" : "io.smartdatalake.definitions.KeycloakClientSecretAuthMode.ssoRealm", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#ssoRealm:String", "kind" : "val"}, {"label" : "ssoServer", "tail" : ": String", "member" : "io.smartdatalake.definitions.KeycloakClientSecretAuthMode.ssoServer", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#ssoServer:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/KeycloakClientSecretAuthMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.OutputType", "shortDescription" : "Options for HDFS output", "object" : "io\/smartdatalake\/definitions\/OutputType$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Jdbc", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Jdbc", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Jdbc:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "DataFrame", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.DataFrame", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#DataFrame:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Xml", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Xml", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Xml:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Json", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Json", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Json:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Raw", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Raw", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Raw:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Hive", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Hive", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Hive:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Schema", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Schema", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Schema:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Parquet", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Parquet", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Parquet:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Avro", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Avro", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Avro:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "Csv", "tail" : ": Value", "member" : "io.smartdatalake.definitions.OutputType.Csv", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Csv:io.smartdatalake.definitions.OutputType.Value", "kind" : "val"}, {"label" : "OutputType", "tail" : "", "member" : "io.smartdatalake.definitions.OutputType.OutputType", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#OutputType=io.smartdatalake.definitions.OutputType.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/OutputType$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/OutputType$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.definitions.PartitionDiffMode", "shortDescription" : "Partition difference execution mode lists partitions on mainInput & mainOutput DataObject and starts loading all missing partitions.", "members_case class" : [{"member" : "io.smartdatalake.definitions.PartitionDiffMode#<init>", "error" : "unsupported entity"}, {"label" : "selectAdditionalInputExpression", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.selectAdditionalInputExpression", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#selectAdditionalInputExpression:Option[String]", "kind" : "val"}, {"label" : "applyPartitionValuesTransform", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.PartitionDiffMode.applyPartitionValuesTransform", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#applyPartitionValuesTransform:Boolean", "kind" : "val"}, {"label" : "selectExpression", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.selectExpression", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#selectExpression:Option[String]", "kind" : "val"}, {"label" : "stopIfNoData", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.PartitionDiffMode.stopIfNoData", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#stopIfNoData:Boolean", "kind" : "val"}, {"label" : "failConditions", "tail" : ": Seq[Condition]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.failConditions", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#failConditions:Seq[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "failCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.failCondition", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#failCondition:Option[String]", "kind" : "val"}, {"label" : "applyCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.applyCondition", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#applyCondition:Option[String]", "kind" : "val"}, {"label" : "nbOfPartitionValuesPerRun", "tail" : ": Option[Int]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.nbOfPartitionValuesPerRun", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#nbOfPartitionValuesPerRun:Option[Int]", "kind" : "val"}, {"label" : "alternativeOutputId", "tail" : ": Option[DataObjectId]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.alternativeOutputId", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#alternativeOutputId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "partitionColNb", "tail" : ": Option[Int]", "member" : "io.smartdatalake.definitions.PartitionDiffMode.partitionColNb", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#partitionColNb:Option[Int]", "kind" : "val"}, {"label" : "alternativeOutput", "tail" : "(context: ActionPipelineContext): Option[DataObject]", "member" : "io.smartdatalake.definitions.ExecutionModeWithMainInputOutput.alternativeOutput", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#alternativeOutput(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Option[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/PartitionDiffMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.toString", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#toString():String", "kind" : "def"}, {"member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData#<init>", "error" : "unsupported entity"}, {"label" : "selectedOutputPartitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.selectedOutputPartitionValues", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#selectedOutputPartitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "selectedInputPartitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.selectedInputPartitionValues", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#selectedInputPartitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "outputPartitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.outputPartitionValues", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#outputPartitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "inputPartitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.inputPartitionValues", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#inputPartitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "givenPartitionValues", "tail" : ": Seq[Map[String, String]]", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.givenPartitionValues", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#givenPartitionValues:Seq[Map[String,String]]", "kind" : "val"}, {"label" : "attemptStartTime", "tail" : ": Timestamp", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.attemptStartTime", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#attemptStartTime:java.sql.Timestamp", "kind" : "val"}, {"label" : "runStartTime", "tail" : ": Timestamp", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.runStartTime", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#runStartTime:java.sql.Timestamp", "kind" : "val"}, {"label" : "referenceTimestamp", "tail" : ": Option[Timestamp]", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.referenceTimestamp", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#referenceTimestamp:Option[java.sql.Timestamp]", "kind" : "val"}, {"label" : "attemptId", "tail" : ": Int", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.attemptId", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#attemptId:Int", "kind" : "val"}, {"label" : "runId", "tail" : ": Int", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.runId", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#runId:Int", "kind" : "val"}, {"label" : "application", "tail" : ": String", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.application", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#application:String", "kind" : "val"}, {"label" : "feed", "tail" : ": String", "member" : "io.smartdatalake.definitions.PartitionDiffModeExpressionData.feed", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#feed:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/PartitionDiffModeExpressionData.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.ProcessAllMode", "shortDescription" : "An execution mode which forces processing all data from it's inputs.", "members_case class" : [{"member" : "io.smartdatalake.definitions.ProcessAllMode#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/ProcessAllMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/ProcessAllMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.PublicKeyAuthMode", "shortDescription" : "Validate by user and private\/public keyPrivate key is read from .ssh", "members_case class" : [{"member" : "io.smartdatalake.definitions.PublicKeyAuthMode#<init>", "error" : "unsupported entity"}, {"label" : "userVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.PublicKeyAuthMode.userVariable", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#userVariable:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/PublicKeyAuthMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.SDLSaveMode", "shortDescription" : "SDL supports more SaveModes than Spark, that's why there is an own definition of SDLSaveMode.", "object" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "value2SparkSaveMode", "tail" : "(mode: Value): SDLSaveModeValue", "member" : "io.smartdatalake.definitions.SDLSaveMode.value2SparkSaveMode", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#value2SparkSaveMode(mode:io.smartdatalake.definitions.SDLSaveMode.Value):io.smartdatalake.definitions.SDLSaveMode.SDLSaveModeValue", "kind" : "implicit def"}, {"label" : "SDLSaveModeValue", "tail" : "", "member" : "io.smartdatalake.definitions.SDLSaveMode.SDLSaveModeValue", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#SDLSaveModeValueextendsAnyRef", "kind" : "class"}, {"label" : "OverwriteOptimized", "tail" : ": Value", "member" : "io.smartdatalake.definitions.SDLSaveMode.OverwriteOptimized", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#OverwriteOptimized:io.smartdatalake.definitions.SDLSaveMode.Value", "kind" : "val"}, {"label" : "OverwritePreserveDirectories", "tail" : ": Value", "member" : "io.smartdatalake.definitions.SDLSaveMode.OverwritePreserveDirectories", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#OverwritePreserveDirectories:io.smartdatalake.definitions.SDLSaveMode.Value", "kind" : "val"}, {"label" : "Ignore", "tail" : ": Value", "member" : "io.smartdatalake.definitions.SDLSaveMode.Ignore", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#Ignore:io.smartdatalake.definitions.SDLSaveMode.Value", "kind" : "val"}, {"label" : "ErrorIfExists", "tail" : ": Value", "member" : "io.smartdatalake.definitions.SDLSaveMode.ErrorIfExists", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#ErrorIfExists:io.smartdatalake.definitions.SDLSaveMode.Value", "kind" : "val"}, {"label" : "Append", "tail" : ": Value", "member" : "io.smartdatalake.definitions.SDLSaveMode.Append", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#Append:io.smartdatalake.definitions.SDLSaveMode.Value", "kind" : "val"}, {"label" : "Overwrite", "tail" : ": Value", "member" : "io.smartdatalake.definitions.SDLSaveMode.Overwrite", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#Overwrite:io.smartdatalake.definitions.SDLSaveMode.Value", "kind" : "val"}, {"label" : "SDLSaveMode", "tail" : "", "member" : "io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#SDLSaveMode=io.smartdatalake.definitions.SDLSaveMode.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/SDLSaveMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.definitions.SparkIncrementalMode", "shortDescription" : "Compares max entry in \"compare column\" between mainOutput and mainInput and incrementally loads the delta.", "members_case class" : [{"member" : "io.smartdatalake.definitions.SparkIncrementalMode#<init>", "error" : "unsupported entity"}, {"label" : "applyCondition", "tail" : ": Option[Condition]", "member" : "io.smartdatalake.definitions.SparkIncrementalMode.applyCondition", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#applyCondition:Option[io.smartdatalake.definitions.Condition]", "kind" : "val"}, {"label" : "stopIfNoData", "tail" : ": Boolean", "member" : "io.smartdatalake.definitions.SparkIncrementalMode.stopIfNoData", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#stopIfNoData:Boolean", "kind" : "val"}, {"label" : "alternativeOutputId", "tail" : ": Option[DataObjectId]", "member" : "io.smartdatalake.definitions.SparkIncrementalMode.alternativeOutputId", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#alternativeOutputId:Option[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "compareCol", "tail" : ": String", "member" : "io.smartdatalake.definitions.SparkIncrementalMode.compareCol", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#compareCol:String", "kind" : "val"}, {"label" : "alternativeOutput", "tail" : "(context: ActionPipelineContext): Option[DataObject]", "member" : "io.smartdatalake.definitions.ExecutionModeWithMainInputOutput.alternativeOutput", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#alternativeOutput(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Option[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/SparkIncrementalMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.SparkStreamingOnceMode", "shortDescription" : "Spark streaming execution mode uses Spark Structured Streaming to incrementally execute data loads (trigger=Trigger.Once) and keep track of processed data.", "members_case class" : [{"member" : "io.smartdatalake.definitions.SparkStreamingOnceMode#<init>", "error" : "unsupported entity"}, {"label" : "outputMode", "tail" : ": OutputMode", "member" : "io.smartdatalake.definitions.SparkStreamingOnceMode.outputMode", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#outputMode:org.apache.spark.sql.streaming.OutputMode", "kind" : "val"}, {"label" : "outputOptions", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.definitions.SparkStreamingOnceMode.outputOptions", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#outputOptions:Map[String,String]", "kind" : "val"}, {"label" : "inputOptions", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.definitions.SparkStreamingOnceMode.inputOptions", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#inputOptions:Map[String,String]", "kind" : "val"}, {"label" : "checkpointLocation", "tail" : ": String", "member" : "io.smartdatalake.definitions.SparkStreamingOnceMode.checkpointLocation", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#checkpointLocation:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/SparkStreamingOnceMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.SSLCertsAuthMode", "shortDescription" : "Validate by SSL Certificates : Only location an credentials.", "members_case class" : [{"member" : "io.smartdatalake.definitions.SSLCertsAuthMode#<init>", "error" : "unsupported entity"}, {"label" : "truststorePassVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.SSLCertsAuthMode.truststorePassVariable", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#truststorePassVariable:String", "kind" : "val"}, {"label" : "truststoreType", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.SSLCertsAuthMode.truststoreType", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#truststoreType:Option[String]", "kind" : "val"}, {"label" : "truststorePath", "tail" : ": String", "member" : "io.smartdatalake.definitions.SSLCertsAuthMode.truststorePath", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#truststorePath:String", "kind" : "val"}, {"label" : "keystorePassVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.SSLCertsAuthMode.keystorePassVariable", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#keystorePassVariable:String", "kind" : "val"}, {"label" : "keystoreType", "tail" : ": Option[String]", "member" : "io.smartdatalake.definitions.SSLCertsAuthMode.keystoreType", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#keystoreType:Option[String]", "kind" : "val"}, {"label" : "keystorePath", "tail" : ": String", "member" : "io.smartdatalake.definitions.SSLCertsAuthMode.keystorePath", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#keystorePath:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/SSLCertsAuthMode.html", "kind" : "case class"}, {"name" : "io.smartdatalake.definitions.TechnicalTableColumn", "shortDescription" : "Column names specific to historization of Hive tables", "object" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "delimited", "tail" : ": Value", "member" : "io.smartdatalake.definitions.TechnicalTableColumn.delimited", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#delimited:io.smartdatalake.definitions.TechnicalTableColumn.Value", "kind" : "val"}, {"label" : "captured", "tail" : ": Value", "member" : "io.smartdatalake.definitions.TechnicalTableColumn.captured", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#captured:io.smartdatalake.definitions.TechnicalTableColumn.Value", "kind" : "val"}, {"label" : "TechnicalTableColumn", "tail" : "", "member" : "io.smartdatalake.definitions.TechnicalTableColumn.TechnicalTableColumn", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#TechnicalTableColumn=io.smartdatalake.definitions.TechnicalTableColumn.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/TechnicalTableColumn$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.definitions.TokenAuthMode", "shortDescription" : "Connect by tokenFor HTTP Connection this is used as Bearer token in Authorization header.", "members_case class" : [{"member" : "io.smartdatalake.definitions.TokenAuthMode#<init>", "error" : "unsupported entity"}, {"label" : "tokenVariable", "tail" : ": String", "member" : "io.smartdatalake.definitions.TokenAuthMode.tokenVariable", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#tokenVariable:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/definitions\/TokenAuthMode.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/definitions\/TokenAuthMode.html", "kind" : "case class"}], "io.smartdatalake.config" : [{"name" : "io.smartdatalake.config.ConfigImplicits", "members_trait" : [{"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/config\/ConfigImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "trait" : "io\/smartdatalake\/config\/ConfigImplicits.html", "kind" : "trait"}, {"name" : "io.smartdatalake.config.ConfigLoader", "shortDescription" : "", "object" : "io\/smartdatalake\/config\/ConfigLoader$.html", "members_object" : [{"label" : "loadConfigFromFilesystem", "tail" : "(configLocations: Seq[String]): Config", "member" : "io.smartdatalake.config.ConfigLoader.loadConfigFromFilesystem", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#loadConfigFromFilesystem(configLocations:Seq[String]):com.typesafe.config.Config", "kind" : "def"}, {"label" : "loadConfigFromClasspath", "tail" : "(): Config", "member" : "io.smartdatalake.config.ConfigLoader.loadConfigFromClasspath", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#loadConfigFromClasspath:com.typesafe.config.Config", "kind" : "def"}, {"label" : "configFileExtensions", "tail" : ": Set[String]", "member" : "io.smartdatalake.config.ConfigLoader.configFileExtensions", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#configFileExtensions:Set[String]", "kind" : "final val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/config\/ConfigLoader$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.config.ConfigToolbox", "shortDescription" : "Helper methods to use config outside of SmartDataLakeBuilder, e.g.", "object" : "io\/smartdatalake\/config\/ConfigToolbox$.html", "members_object" : [{"label" : "loadAndParseConfig", "tail" : "(locations: Seq[String]): (InstanceRegistry, GlobalConfig)", "member" : "io.smartdatalake.config.ConfigToolbox.loadAndParseConfig", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#loadAndParseConfig(locations:Seq[String]):(io.smartdatalake.config.InstanceRegistry,io.smartdatalake.app.GlobalConfig)", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/config\/ConfigToolbox$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.config.SdlConfigObject", "shortDescription" : "", "object" : "io\/smartdatalake\/config\/SdlConfigObject$.html", "members_object" : [{"label" : "stringToActionId", "tail" : "(str: String): ActionId", "member" : "io.smartdatalake.config.SdlConfigObject.stringToActionId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#stringToActionId(str:String):io.smartdatalake.config.SdlConfigObject.ActionId", "kind" : "implicit def"}, {"label" : "stringToDataObjectId", "tail" : "(str: String): DataObjectId", "member" : "io.smartdatalake.config.SdlConfigObject.stringToDataObjectId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#stringToDataObjectId(str:String):io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "implicit def"}, {"label" : "stringToConnectionId", "tail" : "(str: String): ConnectionId", "member" : "io.smartdatalake.config.SdlConfigObject.stringToConnectionId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#stringToConnectionId(str:String):io.smartdatalake.config.SdlConfigObject.ConnectionId", "kind" : "implicit def"}, {"label" : "validateId", "tail" : "(id: String): Unit", "member" : "io.smartdatalake.config.SdlConfigObject.validateId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#validateId(id:String):Unit", "kind" : "def"}, {"label" : "ActionId", "tail" : "", "member" : "io.smartdatalake.config.SdlConfigObject.ActionId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#ActionIdextendsAnyValwithSdlConfigObject.ConfigObjectIdwithProductwithSerializable", "kind" : "final case class"}, {"label" : "DataObjectId", "tail" : "", "member" : "io.smartdatalake.config.SdlConfigObject.DataObjectId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#DataObjectIdextendsAnyValwithSdlConfigObject.ConfigObjectIdwithProductwithSerializable", "kind" : "final case class"}, {"label" : "ConnectionId", "tail" : "", "member" : "io.smartdatalake.config.SdlConfigObject.ConnectionId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#ConnectionIdextendsAnyValwithSdlConfigObject.ConfigObjectIdwithProductwithSerializable", "kind" : "final case class"}, {"label" : "ConfigObjectId", "tail" : "", "member" : "io.smartdatalake.config.SdlConfigObject.ConfigObjectId", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#ConfigObjectIdextendsAny", "kind" : "sealed trait"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/config\/SdlConfigObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io.smartdatalake.util.streaming" : [{"name" : "io.smartdatalake.util.streaming.DummyStreamProvider", "shortDescription" : "", "object" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html", "members_class" : [{"label" : "getTable", "tail" : "(schema: StructType, partitioning: Array[Transform], properties: Map[String, String]): Table", "member" : "io.smartdatalake.util.streaming.DummyStreamProvider.getTable", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#getTable(schema:org.apache.spark.sql.types.StructType,partitioning:Array[org.apache.spark.sql.connector.expressions.Transform],properties:java.util.Map[String,String]):org.apache.spark.sql.connector.catalog.Table", "kind" : "def"}, {"label" : "inferSchema", "tail" : "(options: CaseInsensitiveStringMap): StructType", "member" : "io.smartdatalake.util.streaming.DummyStreamProvider.inferSchema", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#inferSchema(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "supportsExternalMetadata", "tail" : "(): Boolean", "member" : "io.smartdatalake.util.streaming.DummyStreamProvider.supportsExternalMetadata", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#supportsExternalMetadata():Boolean", "kind" : "def"}, {"member" : "io.smartdatalake.util.streaming.DummyStreamProvider#<init>", "error" : "unsupported entity"}, {"label" : "inferPartitioning", "tail" : "(arg0: CaseInsensitiveStringMap): Array[Transform]", "member" : "org.apache.spark.sql.connector.catalog.TableProvider.inferPartitioning", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#inferPartitioning(x$1:org.apache.spark.sql.util.CaseInsensitiveStringMap):Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getDummyDf", "tail" : "(schema: StructType)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.util.streaming.DummyStreamProvider.getDummyDf", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#getDummyDf(schema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/util\/streaming\/DummyStreamProvider.html", "kind" : "class"}, {"name" : "io.smartdatalake.util.streaming.DummyStreamScanBuilder", "shortDescription" : "", "members_class" : [{"label" : "toMicroBatchStream", "tail" : "(checkpointLocation: String): MicroBatchStream", "member" : "io.smartdatalake.util.streaming.DummyStreamScanBuilder.toMicroBatchStream", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#toMicroBatchStream(checkpointLocation:String):org.apache.spark.sql.connector.read.streaming.MicroBatchStream", "kind" : "def"}, {"label" : "readSchema", "tail" : "(): StructType", "member" : "io.smartdatalake.util.streaming.DummyStreamScanBuilder.readSchema", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#readSchema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "description", "tail" : "(): String", "member" : "io.smartdatalake.util.streaming.DummyStreamScanBuilder.description", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#description():String", "kind" : "def"}, {"label" : "build", "tail" : "(): Scan", "member" : "io.smartdatalake.util.streaming.DummyStreamScanBuilder.build", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#build():org.apache.spark.sql.connector.read.Scan", "kind" : "def"}, {"member" : "io.smartdatalake.util.streaming.DummyStreamScanBuilder#<init>", "error" : "unsupported entity"}, {"label" : "toContinuousStream", "tail" : "(arg0: String): ContinuousStream", "member" : "org.apache.spark.sql.connector.read.Scan.toContinuousStream", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#toContinuousStream(x$1:String):org.apache.spark.sql.connector.read.streaming.ContinuousStream", "kind" : "def"}, {"label" : "toBatch", "tail" : "(): Batch", "member" : "org.apache.spark.sql.connector.read.Scan.toBatch", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#toBatch():org.apache.spark.sql.connector.read.Batch", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/util\/streaming\/DummyStreamScanBuilder.html", "kind" : "class"}, {"name" : "io.smartdatalake.util.streaming.MemoryStreamTable", "shortDescription" : "", "members_class" : [{"label" : "newScanBuilder", "tail" : "(options: CaseInsensitiveStringMap): ScanBuilder", "member" : "io.smartdatalake.util.streaming.MemoryStreamTable.newScanBuilder", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#newScanBuilder(options:org.apache.spark.sql.util.CaseInsensitiveStringMap):org.apache.spark.sql.connector.read.ScanBuilder", "kind" : "def"}, {"label" : "capabilities", "tail" : "(): Set[TableCapability]", "member" : "io.smartdatalake.util.streaming.MemoryStreamTable.capabilities", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#capabilities():java.util.Set[org.apache.spark.sql.connector.catalog.TableCapability]", "kind" : "def"}, {"label" : "schema", "tail" : "(): StructType", "member" : "io.smartdatalake.util.streaming.MemoryStreamTable.schema", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#schema():org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "name", "tail" : "(): String", "member" : "io.smartdatalake.util.streaming.MemoryStreamTable.name", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#name():String", "kind" : "def"}, {"member" : "io.smartdatalake.util.streaming.MemoryStreamTable#<init>", "error" : "unsupported entity"}, {"label" : "stream", "tail" : ": DummyStream", "member" : "io.smartdatalake.util.streaming.MemoryStreamTable.stream", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#stream:io.smartdatalake.util.streaming.DummyStream", "kind" : "val"}, {"label" : "properties", "tail" : "(): Map[String, String]", "member" : "org.apache.spark.sql.connector.catalog.Table.properties", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#properties():java.util.Map[String,String]", "kind" : "def"}, {"label" : "partitioning", "tail" : "(): Array[Transform]", "member" : "org.apache.spark.sql.connector.catalog.Table.partitioning", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#partitioning():Array[org.apache.spark.sql.connector.expressions.Transform]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/util\/streaming\/MemoryStreamTable.html", "kind" : "class"}], "io.smartdatalake" : [], "io.smartdatalake.app" : [{"name" : "io.smartdatalake.app.DatabricksSmartDataLakeBuilder", "shortDescription" : "Databricks Smart Data Lake Command Line Application.", "object" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.smartdatalake.app.DatabricksSmartDataLakeBuilder.main", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "startSimulation", "tail" : "(appConfig: SmartDataLakeBuilderConfig, initialSubFeeds: Seq[SparkSubFeed])(instanceRegistry: InstanceRegistry, session: SparkSession): (Seq[SparkSubFeed], Map[RuntimeEventState, Int])", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.startSimulation", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#startSimulation(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig,initialSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed])(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry,implicitsession:org.apache.spark.sql.SparkSession):(Seq[io.smartdatalake.workflow.SparkSubFeed],Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int])", "kind" : "def"}, {"label" : "run", "tail" : "(appConfig: SmartDataLakeBuilderConfig): Map[RuntimeEventState, Int]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.run", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#run(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig):Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int]", "kind" : "def"}, {"label" : "parseCommandLineArguments", "tail" : "(args: Array[String], config: SmartDataLakeBuilderConfig): Option[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parseCommandLineArguments", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#parseCommandLineArguments(args:Array[String],config:io.smartdatalake.app.SmartDataLakeBuilderConfig):Option[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "def"}, {"label" : "parser", "tail" : ": OptionParser[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parser", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#parser:scopt.OptionParser[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "val"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.instanceRegistry", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "val"}, {"label" : "initConfigFromEnvironment", "tail" : "(): SmartDataLakeBuilderConfig", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.initConfigFromEnvironment", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#initConfigFromEnvironment:io.smartdatalake.app.SmartDataLakeBuilderConfig", "kind" : "def"}, {"label" : "appType", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appType", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#appType:String", "kind" : "val"}, {"label" : "appVersion", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appVersion", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#appVersion:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/DatabricksSmartDataLakeBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.app.DefaultSmartDataLakeBuilder", "shortDescription" : "Default Smart Data Lake Command Line Application.", "object" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html", "members_class" : [{"label" : "parseAndRun", "tail" : "(args: Array[String], ignoreOverrideJars: Boolean): Unit", "member" : "io.smartdatalake.app.DefaultSmartDataLakeBuilder.parseAndRun", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#parseAndRun(args:Array[String],ignoreOverrideJars:Boolean):Unit", "kind" : "def"}, {"member" : "io.smartdatalake.app.DefaultSmartDataLakeBuilder#<init>", "error" : "unsupported entity"}, {"label" : "startSimulation", "tail" : "(appConfig: SmartDataLakeBuilderConfig, initialSubFeeds: Seq[SparkSubFeed])(instanceRegistry: InstanceRegistry, session: SparkSession): (Seq[SparkSubFeed], Map[RuntimeEventState, Int])", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.startSimulation", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#startSimulation(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig,initialSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed])(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry,implicitsession:org.apache.spark.sql.SparkSession):(Seq[io.smartdatalake.workflow.SparkSubFeed],Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int])", "kind" : "def"}, {"label" : "run", "tail" : "(appConfig: SmartDataLakeBuilderConfig): Map[RuntimeEventState, Int]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.run", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#run(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig):Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int]", "kind" : "def"}, {"label" : "parseCommandLineArguments", "tail" : "(args: Array[String], config: SmartDataLakeBuilderConfig): Option[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parseCommandLineArguments", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#parseCommandLineArguments(args:Array[String],config:io.smartdatalake.app.SmartDataLakeBuilderConfig):Option[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "def"}, {"label" : "parser", "tail" : ": OptionParser[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parser", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#parser:scopt.OptionParser[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "val"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.instanceRegistry", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "val"}, {"label" : "initConfigFromEnvironment", "tail" : "(): SmartDataLakeBuilderConfig", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.initConfigFromEnvironment", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#initConfigFromEnvironment:io.smartdatalake.app.SmartDataLakeBuilderConfig", "kind" : "def"}, {"label" : "appType", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appType", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#appType:String", "kind" : "val"}, {"label" : "appVersion", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appVersion", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#appVersion:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.smartdatalake.app.DefaultSmartDataLakeBuilder.main", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/app\/DefaultSmartDataLakeBuilder.html", "kind" : "class"}, {"name" : "io.smartdatalake.app.GlobalConfig", "shortDescription" : "Global configuration options", "object" : "io\/smartdatalake\/app\/GlobalConfig$.html", "members_object" : [{"label" : "globalConfig", "tail" : ": Option[GlobalConfig]", "member" : "io.smartdatalake.app.GlobalConfig.globalConfig", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#globalConfig:Option[io.smartdatalake.app.GlobalConfig]", "kind" : "var"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/GlobalConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "createSparkSession", "tail" : "(appName: String, master: Option[String], deployMode: Option[String]): SparkSession", "member" : "io.smartdatalake.app.GlobalConfig.createSparkSession", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#createSparkSession(appName:String,master:Option[String],deployMode:Option[String]):org.apache.spark.sql.SparkSession", "kind" : "def"}, {"member" : "io.smartdatalake.app.GlobalConfig#<init>", "error" : "unsupported entity"}, {"label" : "allowOverwriteAllPartitionsWithoutPartitionValues", "tail" : ": Seq[DataObjectId]", "member" : "io.smartdatalake.app.GlobalConfig.allowOverwriteAllPartitionsWithoutPartitionValues", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#allowOverwriteAllPartitionsWithoutPartitionValues:Seq[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "val"}, {"label" : "secretProviders", "tail" : ": Option[Map[String, SecretProviderConfig]]", "member" : "io.smartdatalake.app.GlobalConfig.secretProviders", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#secretProviders:Option[Map[String,io.smartdatalake.util.secrets.SecretProviderConfig]]", "kind" : "val"}, {"label" : "pythonUDFs", "tail" : ": Option[Map[String, PythonUDFCreatorConfig]]", "member" : "io.smartdatalake.app.GlobalConfig.pythonUDFs", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#pythonUDFs:Option[Map[String,io.smartdatalake.workflow.action.customlogic.PythonUDFCreatorConfig]]", "kind" : "val"}, {"label" : "sparkUDFs", "tail" : ": Option[Map[String, SparkUDFCreatorConfig]]", "member" : "io.smartdatalake.app.GlobalConfig.sparkUDFs", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#sparkUDFs:Option[Map[String,io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]]", "kind" : "val"}, {"label" : "stateListeners", "tail" : ": Seq[StateListenerConfig]", "member" : "io.smartdatalake.app.GlobalConfig.stateListeners", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#stateListeners:Seq[io.smartdatalake.app.StateListenerConfig]", "kind" : "val"}, {"label" : "shutdownHookLogger", "tail" : ": Boolean", "member" : "io.smartdatalake.app.GlobalConfig.shutdownHookLogger", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#shutdownHookLogger:Boolean", "kind" : "val"}, {"label" : "memoryLogTimer", "tail" : ": Option[MemoryLogTimerConfig]", "member" : "io.smartdatalake.app.GlobalConfig.memoryLogTimer", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#memoryLogTimer:Option[io.smartdatalake.app.MemoryLogTimerConfig]", "kind" : "val"}, {"label" : "enableHive", "tail" : ": Boolean", "member" : "io.smartdatalake.app.GlobalConfig.enableHive", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#enableHive:Boolean", "kind" : "val"}, {"label" : "sparkOptions", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.app.GlobalConfig.sparkOptions", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#sparkOptions:Option[Map[String,String]]", "kind" : "val"}, {"label" : "kryoClasses", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.app.GlobalConfig.kryoClasses", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#kryoClasses:Option[Seq[String]]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/GlobalConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/GlobalConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/app\/GlobalConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.app.LocalSmartDataLakeBuilder", "shortDescription" : "Smart Data Lake Builder application for local mode.", "object" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html", "members_object" : [{"label" : "main", "tail" : "(args: Array[String]): Unit", "member" : "io.smartdatalake.app.LocalSmartDataLakeBuilder.main", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#main(args:Array[String]):Unit", "kind" : "def"}, {"label" : "startSimulation", "tail" : "(appConfig: SmartDataLakeBuilderConfig, initialSubFeeds: Seq[SparkSubFeed])(instanceRegistry: InstanceRegistry, session: SparkSession): (Seq[SparkSubFeed], Map[RuntimeEventState, Int])", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.startSimulation", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#startSimulation(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig,initialSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed])(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry,implicitsession:org.apache.spark.sql.SparkSession):(Seq[io.smartdatalake.workflow.SparkSubFeed],Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int])", "kind" : "def"}, {"label" : "run", "tail" : "(appConfig: SmartDataLakeBuilderConfig): Map[RuntimeEventState, Int]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.run", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#run(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig):Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int]", "kind" : "def"}, {"label" : "parseCommandLineArguments", "tail" : "(args: Array[String], config: SmartDataLakeBuilderConfig): Option[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parseCommandLineArguments", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#parseCommandLineArguments(args:Array[String],config:io.smartdatalake.app.SmartDataLakeBuilderConfig):Option[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "def"}, {"label" : "parser", "tail" : ": OptionParser[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parser", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#parser:scopt.OptionParser[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "val"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.instanceRegistry", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "val"}, {"label" : "initConfigFromEnvironment", "tail" : "(): SmartDataLakeBuilderConfig", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.initConfigFromEnvironment", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#initConfigFromEnvironment:io.smartdatalake.app.SmartDataLakeBuilderConfig", "kind" : "def"}, {"label" : "appType", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appType", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#appType:String", "kind" : "val"}, {"label" : "appVersion", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appVersion", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#appVersion:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/LocalSmartDataLakeBuilder$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.app.MemoryLogTimerConfig", "shortDescription" : "Configuration for periodic memory usage logging", "members_case class" : [{"member" : "io.smartdatalake.app.MemoryLogTimerConfig#<init>", "error" : "unsupported entity"}, {"label" : "logBuffers", "tail" : ": Boolean", "member" : "io.smartdatalake.app.MemoryLogTimerConfig.logBuffers", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#logBuffers:Boolean", "kind" : "val"}, {"label" : "logLinuxCGroupMem", "tail" : ": Boolean", "member" : "io.smartdatalake.app.MemoryLogTimerConfig.logLinuxCGroupMem", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#logLinuxCGroupMem:Boolean", "kind" : "val"}, {"label" : "logLinuxMem", "tail" : ": Boolean", "member" : "io.smartdatalake.app.MemoryLogTimerConfig.logLinuxMem", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#logLinuxMem:Boolean", "kind" : "val"}, {"label" : "intervalSec", "tail" : ": Int", "member" : "io.smartdatalake.app.MemoryLogTimerConfig.intervalSec", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#intervalSec:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/app\/MemoryLogTimerConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.app.SDLPlugin", "members_trait" : [{"label" : "shutdown", "tail" : "(): Unit", "member" : "io.smartdatalake.app.SDLPlugin.shutdown", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#shutdown():Unit", "kind" : "def"}, {"label" : "startup", "tail" : "(): Unit", "member" : "io.smartdatalake.app.SDLPlugin.startup", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#startup():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/SDLPlugin.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/SDLPlugin.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "SDL Plugin defines an interface to execute custom code on SDL startup and shutdown.", "trait" : "io\/smartdatalake\/app\/SDLPlugin.html", "kind" : "trait"}, {"name" : "io.smartdatalake.app.SmartDataLakeBuilder", "shortDescription" : "Abstract Smart Data Lake Command Line Application.", "members_class" : [{"label" : "startSimulation", "tail" : "(appConfig: SmartDataLakeBuilderConfig, initialSubFeeds: Seq[SparkSubFeed])(instanceRegistry: InstanceRegistry, session: SparkSession): (Seq[SparkSubFeed], Map[RuntimeEventState, Int])", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.startSimulation", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#startSimulation(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig,initialSubFeeds:Seq[io.smartdatalake.workflow.SparkSubFeed])(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry,implicitsession:org.apache.spark.sql.SparkSession):(Seq[io.smartdatalake.workflow.SparkSubFeed],Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int])", "kind" : "def"}, {"label" : "run", "tail" : "(appConfig: SmartDataLakeBuilderConfig): Map[RuntimeEventState, Int]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.run", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#run(appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig):Map[io.smartdatalake.workflow.action.RuntimeEventState.RuntimeEventState,Int]", "kind" : "def"}, {"label" : "parseCommandLineArguments", "tail" : "(args: Array[String], config: SmartDataLakeBuilderConfig): Option[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parseCommandLineArguments", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#parseCommandLineArguments(args:Array[String],config:io.smartdatalake.app.SmartDataLakeBuilderConfig):Option[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "def"}, {"label" : "parser", "tail" : ": OptionParser[SmartDataLakeBuilderConfig]", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.parser", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#parser:scopt.OptionParser[io.smartdatalake.app.SmartDataLakeBuilderConfig]", "kind" : "val"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.instanceRegistry", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "val"}, {"label" : "initConfigFromEnvironment", "tail" : "(): SmartDataLakeBuilderConfig", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.initConfigFromEnvironment", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#initConfigFromEnvironment:io.smartdatalake.app.SmartDataLakeBuilderConfig", "kind" : "def"}, {"label" : "appType", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appType", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#appType:String", "kind" : "val"}, {"label" : "appVersion", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilder.appVersion", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#appVersion:String", "kind" : "val"}, {"member" : "io.smartdatalake.app.SmartDataLakeBuilder#<init>", "error" : "unsupported entity"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/app\/SmartDataLakeBuilder.html", "kind" : "class"}, {"name" : "io.smartdatalake.app.SmartDataLakeBuilderConfig", "shortDescription" : "This case class represents a default configuration for the App.", "members_case class" : [{"label" : "isDryRun", "tail" : "(): Boolean", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.isDryRun", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#isDryRun:Boolean", "kind" : "def"}, {"label" : "appName", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.appName", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#appName:String", "kind" : "val"}, {"label" : "getPartitionValues", "tail" : "(): Option[Seq[PartitionValues]]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.getPartitionValues", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#getPartitionValues:Option[Seq[io.smartdatalake.util.hdfs.PartitionValues]]", "kind" : "def"}, {"label" : "validate", "tail" : "(): Unit", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.validate", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#validate():Unit", "kind" : "def"}, {"member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig#<init>", "error" : "unsupported entity"}, {"label" : "test", "tail" : ": Option[TestMode.Value]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.test", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#test:Option[io.smartdatalake.app.TestMode.Value]", "kind" : "val"}, {"label" : "overrideJars", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.overrideJars", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#overrideJars:Option[Seq[String]]", "kind" : "val"}, {"label" : "statePath", "tail" : ": Option[String]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.statePath", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#statePath:Option[String]", "kind" : "val"}, {"label" : "parallelism", "tail" : ": Int", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.parallelism", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#parallelism:Int", "kind" : "val"}, {"label" : "multiPartitionValues", "tail" : ": Option[Seq[PartitionValues]]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.multiPartitionValues", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#multiPartitionValues:Option[Seq[io.smartdatalake.util.hdfs.PartitionValues]]", "kind" : "val"}, {"label" : "partitionValues", "tail" : ": Option[Seq[PartitionValues]]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.partitionValues", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#partitionValues:Option[Seq[io.smartdatalake.util.hdfs.PartitionValues]]", "kind" : "val"}, {"label" : "keytabPath", "tail" : ": Option[File]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.keytabPath", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#keytabPath:Option[java.io.File]", "kind" : "val"}, {"label" : "kerberosDomain", "tail" : ": Option[String]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.kerberosDomain", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#kerberosDomain:Option[String]", "kind" : "val"}, {"label" : "username", "tail" : ": Option[String]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.username", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#username:Option[String]", "kind" : "val"}, {"label" : "deployMode", "tail" : ": Option[String]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.deployMode", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#deployMode:Option[String]", "kind" : "val"}, {"label" : "master", "tail" : ": Option[String]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.master", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#master:Option[String]", "kind" : "val"}, {"label" : "configuration", "tail" : ": Option[String]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.configuration", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#configuration:Option[String]", "kind" : "val"}, {"label" : "applicationName", "tail" : ": Option[String]", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.applicationName", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#applicationName:Option[String]", "kind" : "val"}, {"label" : "feedSel", "tail" : ": String", "member" : "io.smartdatalake.app.SmartDataLakeBuilderConfig.feedSel", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#feedSel:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/app\/SmartDataLakeBuilderConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.app.StateListener", "members_trait" : [{"label" : "init", "tail" : "(): Unit", "member" : "io.smartdatalake.app.StateListener.init", "link" : "io\/smartdatalake\/app\/StateListener.html#init():Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/StateListener.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/StateListener.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/StateListener.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/StateListener.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/StateListener.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/StateListener.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/StateListener.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/StateListener.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/StateListener.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/StateListener.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/StateListener.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/StateListener.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/app\/StateListener.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/StateListener.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/StateListener.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/StateListener.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/StateListener.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/StateListener.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/StateListener.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "notifyState", "tail" : "(state: ActionDAGRunState, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.app.StateListener.notifyState", "link" : "io\/smartdatalake\/app\/StateListener.html#notifyState(state:io.smartdatalake.workflow.ActionDAGRunState,context:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "abstract def"}], "shortDescription" : "Interface to notify interested parties about action results & metric", "trait" : "io\/smartdatalake\/app\/StateListener.html", "kind" : "trait"}, {"name" : "io.smartdatalake.app.StateListenerConfig", "shortDescription" : "Configuration to notify interested parties about action results & metric", "members_case class" : [{"member" : "io.smartdatalake.app.StateListenerConfig#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.app.StateListenerConfig.options", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "className", "tail" : ": String", "member" : "io.smartdatalake.app.StateListenerConfig.className", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#className:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/StateListenerConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/app\/StateListenerConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.app.TestMode", "shortDescription" : "", "object" : "io\/smartdatalake\/app\/TestMode$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/app\/TestMode$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/app\/TestMode$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/app\/TestMode$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "DryRun", "tail" : ": Value", "member" : "io.smartdatalake.app.TestMode.DryRun", "link" : "io\/smartdatalake\/app\/TestMode$.html#DryRun:io.smartdatalake.app.TestMode.Value", "kind" : "val"}, {"label" : "Config", "tail" : ": Value", "member" : "io.smartdatalake.app.TestMode.Config", "link" : "io\/smartdatalake\/app\/TestMode$.html#Config:io.smartdatalake.app.TestMode.Value", "kind" : "val"}, {"label" : "TestMode", "tail" : "", "member" : "io.smartdatalake.app.TestMode.TestMode", "link" : "io\/smartdatalake\/app\/TestMode$.html#TestMode=io.smartdatalake.app.TestMode.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/app\/TestMode$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/app\/TestMode$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/app\/TestMode$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/app\/TestMode$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/app\/TestMode$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/app\/TestMode$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/app\/TestMode$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/app\/TestMode$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/app\/TestMode$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/app\/TestMode$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/app\/TestMode$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/app\/TestMode$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/app\/TestMode$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/app\/TestMode$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/app\/TestMode$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/app\/TestMode$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/app\/TestMode$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/app\/TestMode$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/app\/TestMode$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/TestMode$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/TestMode$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/app\/TestMode$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/app\/TestMode$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/app\/TestMode$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/app\/TestMode$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/app\/TestMode$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/app\/TestMode$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/app\/TestMode$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/app\/TestMode$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/app\/TestMode$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "scala" : [], "io.smartdatalake.workflow" : [{"name" : "io.smartdatalake.workflow.ActionPipelineContext", "shortDescription" : "ActionPipelineContext contains start and runtime information about a SmartDataLake run.", "members_case class" : [{"member" : "io.smartdatalake.workflow.ActionPipelineContext#<init>", "error" : "unsupported entity"}, {"label" : "dataFrameReuseStatistics", "tail" : ": Map[(DataObjectId, Seq[PartitionValues]), Seq[ActionId]]", "member" : "io.smartdatalake.workflow.ActionPipelineContext.dataFrameReuseStatistics", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#dataFrameReuseStatistics:scala.collection.mutable.Map[(io.smartdatalake.config.SdlConfigObject.DataObjectId,Seq[io.smartdatalake.util.hdfs.PartitionValues]),Seq[io.smartdatalake.config.SdlConfigObject.ActionId]]", "kind" : "val"}, {"label" : "phase", "tail" : ": ExecutionPhase", "member" : "io.smartdatalake.workflow.ActionPipelineContext.phase", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#phase:io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase", "kind" : "var"}, {"label" : "simulation", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.ActionPipelineContext.simulation", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#simulation:Boolean", "kind" : "val"}, {"label" : "attemptStartTime", "tail" : ": LocalDateTime", "member" : "io.smartdatalake.workflow.ActionPipelineContext.attemptStartTime", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#attemptStartTime:java.time.LocalDateTime", "kind" : "val"}, {"label" : "runStartTime", "tail" : ": LocalDateTime", "member" : "io.smartdatalake.workflow.ActionPipelineContext.runStartTime", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#runStartTime:java.time.LocalDateTime", "kind" : "val"}, {"label" : "appConfig", "tail" : ": SmartDataLakeBuilderConfig", "member" : "io.smartdatalake.workflow.ActionPipelineContext.appConfig", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#appConfig:io.smartdatalake.app.SmartDataLakeBuilderConfig", "kind" : "val"}, {"label" : "referenceTimestamp", "tail" : ": Option[LocalDateTime]", "member" : "io.smartdatalake.workflow.ActionPipelineContext.referenceTimestamp", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#referenceTimestamp:Option[java.time.LocalDateTime]", "kind" : "val"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.ActionPipelineContext.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "val"}, {"label" : "attemptId", "tail" : ": Int", "member" : "io.smartdatalake.workflow.ActionPipelineContext.attemptId", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#attemptId:Int", "kind" : "val"}, {"label" : "runId", "tail" : ": Int", "member" : "io.smartdatalake.workflow.ActionPipelineContext.runId", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#runId:Int", "kind" : "val"}, {"label" : "application", "tail" : ": String", "member" : "io.smartdatalake.workflow.ActionPipelineContext.application", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#application:String", "kind" : "val"}, {"label" : "feed", "tail" : ": String", "member" : "io.smartdatalake.workflow.ActionPipelineContext.feed", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#feed:String", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/ActionPipelineContext.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.AtlasExportable", "members_trait" : [{"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasName", "link" : "io\/smartdatalake\/workflow\/AtlasExportable.html#atlasName:String", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/smartdatalake\/workflow\/AtlasExportable.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.DAG", "shortDescription" : "A generic directed acyclic graph (DAG) consisting of DAGNodes interconnected with directed DAGEdges.", "object" : "io\/smartdatalake\/workflow\/DAG$.html", "members_object" : [{"label" : "create", "tail" : "(nodes: Seq[DAGNode], edges: Seq[DAGEdge])(arg0: ClassTag[N]): DAG[N]", "member" : "io.smartdatalake.workflow.DAG.create", "link" : "io\/smartdatalake\/workflow\/DAG$.html#create[N<:io.smartdatalake.workflow.DAGNode](nodes:Seq[io.smartdatalake.workflow.DAGNode],edges:Seq[io.smartdatalake.workflow.DAGEdge])(implicitevidence$2:scala.reflect.ClassTag[N]):io.smartdatalake.workflow.DAG[N]", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/DAG$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/DAG$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/DAG$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/DAG$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/DAG$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/DAG$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/DAG$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/DAG$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/DAG$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/DAG$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/DAG$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/DAG$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/DAG$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/DAG$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/DAG$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/DAG$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/DAG$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/DAG$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/DAG$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/DAG$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "getNodes", "tail" : "(): Seq[N]", "member" : "io.smartdatalake.workflow.DAG.getNodes", "link" : "io\/smartdatalake\/workflow\/DAG.html#getNodes:Seq[N]", "kind" : "def"}, {"label" : "getResultTask", "tail" : "(tasks: Map[NodeId, Task[Try[Seq[A]]]], nodeId: NodeId, resultId: String): Task[Try[A]]", "member" : "io.smartdatalake.workflow.DAG.getResultTask", "link" : "io\/smartdatalake\/workflow\/DAG.html#getResultTask[A<:io.smartdatalake.workflow.DAGResult](tasks:Map[io.smartdatalake.workflow.DAGHelper.NodeId,monix.eval.Task[scala.util.Try[Seq[A]]]],nodeId:io.smartdatalake.workflow.DAGHelper.NodeId,resultId:String):monix.eval.Task[scala.util.Try[A]]", "kind" : "def"}, {"label" : "trySeqToSeqTry", "tail" : "(trySeq: Try[Seq[A]]): Seq[Try[A]]", "member" : "io.smartdatalake.workflow.DAG.trySeqToSeqTry", "link" : "io\/smartdatalake\/workflow\/DAG.html#trySeqToSeqTry[A](trySeq:scala.util.Try[Seq[A]]):Seq[scala.util.Try[A]]", "kind" : "def"}, {"label" : "buildTaskGraph", "tail" : "(eventListener: DAGEventListener[N])(operation: (DAGNode, Seq[A]) ⇒ Seq[A])(scheduler: Scheduler): Task[Seq[Try[A]]]", "member" : "io.smartdatalake.workflow.DAG.buildTaskGraph", "link" : "io\/smartdatalake\/workflow\/DAG.html#buildTaskGraph[A<:io.smartdatalake.workflow.DAGResult](eventListener:io.smartdatalake.workflow.DAGEventListener[N])(operation:(io.smartdatalake.workflow.DAGNode,Seq[A])=>Seq[A])(implicitscheduler:monix.execution.Scheduler):monix.eval.Task[Seq[scala.util.Try[A]]]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.DAG.toString", "link" : "io\/smartdatalake\/workflow\/DAG.html#toString():String", "kind" : "def"}, {"label" : "endNodes", "tail" : ": Seq[DAGNode]", "member" : "io.smartdatalake.workflow.DAG.endNodes", "link" : "io\/smartdatalake\/workflow\/DAG.html#endNodes:Seq[io.smartdatalake.workflow.DAGNode]", "kind" : "val"}, {"label" : "startNodes", "tail" : ": Seq[DAGNode]", "member" : "io.smartdatalake.workflow.DAG.startNodes", "link" : "io\/smartdatalake\/workflow\/DAG.html#startNodes:Seq[io.smartdatalake.workflow.DAGNode]", "kind" : "val"}, {"label" : "incomingEdgesMap", "tail" : ": Map[NodeId, Seq[DAGEdge]]", "member" : "io.smartdatalake.workflow.DAG.incomingEdgesMap", "link" : "io\/smartdatalake\/workflow\/DAG.html#incomingEdgesMap:Map[io.smartdatalake.workflow.DAGHelper.NodeId,Seq[io.smartdatalake.workflow.DAGEdge]]", "kind" : "val"}, {"label" : "sortedNodes", "tail" : ": Seq[DAGNode]", "member" : "io.smartdatalake.workflow.DAG.sortedNodes", "link" : "io\/smartdatalake\/workflow\/DAG.html#sortedNodes:Seq[io.smartdatalake.workflow.DAGNode]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/DAG.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/DAG.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/DAG.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/DAG.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/DAG.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/DAG.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/DAG.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/DAG.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/DAG.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/DAG.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/DAG.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/DAG.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/DAG.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/DAG.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/DAG.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/DAG.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/DAG.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/DAG.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.ExecutionPhase", "shortDescription" : "", "object" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html", "members_object" : [{"label" : "ValueSet", "tail" : "", "member" : "scala.Enumeration.ValueSet", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#ValueSetextendsAbstractSet[Enumeration.this.Value]withSortedSet[Enumeration.this.Value]withSortedSetLike[Enumeration.this.Value,Enumeration.this.ValueSet]withSerializable", "kind" : "class"}, {"label" : "Val", "tail" : "", "member" : "scala.Enumeration.Val", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#ValextendsEnumeration.this.ValuewithSerializable", "kind" : "class"}, {"label" : "Value", "tail" : "", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#ValueextendsOrdered[Enumeration.this.Value]withSerializable", "kind" : "abstract class"}, {"label" : "Exec", "tail" : ": Value", "member" : "io.smartdatalake.workflow.ExecutionPhase.Exec", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#Exec:io.smartdatalake.workflow.ExecutionPhase.Value", "kind" : "val"}, {"label" : "Init", "tail" : ": Value", "member" : "io.smartdatalake.workflow.ExecutionPhase.Init", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#Init:io.smartdatalake.workflow.ExecutionPhase.Value", "kind" : "val"}, {"label" : "Prepare", "tail" : ": Value", "member" : "io.smartdatalake.workflow.ExecutionPhase.Prepare", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#Prepare:io.smartdatalake.workflow.ExecutionPhase.Value", "kind" : "val"}, {"label" : "ExecutionPhase", "tail" : "", "member" : "io.smartdatalake.workflow.ExecutionPhase.ExecutionPhase", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#ExecutionPhase=io.smartdatalake.workflow.ExecutionPhase.Value", "kind" : "type"}, {"label" : "Value", "tail" : "(i: Int, name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#Value(i:Int,name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(name: String): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#Value(name:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(i: Int): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#Value(i:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "Value", "tail" : "(): Value", "member" : "scala.Enumeration.Value", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#Value:Enumeration.this.Value", "kind" : "final def"}, {"label" : "withName", "tail" : "(s: String): Value", "member" : "scala.Enumeration.withName", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#withName(s:String):Enumeration.this.Value", "kind" : "final def"}, {"label" : "apply", "tail" : "(x: Int): Value", "member" : "scala.Enumeration.apply", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#apply(x:Int):Enumeration.this.Value", "kind" : "final def"}, {"label" : "maxId", "tail" : "(): Int", "member" : "scala.Enumeration.maxId", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#maxId:Int", "kind" : "final def"}, {"label" : "nextName", "tail" : ": Iterator[String]", "member" : "scala.Enumeration.nextName", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#nextName:Iterator[String]", "kind" : "var"}, {"label" : "nextId", "tail" : ": Int", "member" : "scala.Enumeration.nextId", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#nextId:Int", "kind" : "var"}, {"label" : "values", "tail" : "(): ValueSet", "member" : "scala.Enumeration.values", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#values:Enumeration.this.ValueSet", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Enumeration.toString", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#toString():String", "kind" : "def"}, {"label" : "readResolve", "tail" : "(): AnyRef", "member" : "scala.Enumeration.readResolve", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#readResolve():AnyRef", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/ExecutionPhase$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.workflow.FileSubFeed", "shortDescription" : "A FileSubFeed is used to transport references to files between Actions.", "object" : "io\/smartdatalake\/workflow\/FileSubFeed$.html", "members_object" : [{"label" : "fromSubFeed", "tail" : "(subFeed: SubFeed): FileSubFeed", "member" : "io.smartdatalake.workflow.FileSubFeed.fromSubFeed", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#fromSubFeed(subFeed:io.smartdatalake.workflow.SubFeed):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/FileSubFeed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "union", "tail" : "(other: SubFeed)(session: SparkSession, context: ActionPipelineContext): SubFeed", "member" : "io.smartdatalake.workflow.FileSubFeed.union", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#union(other:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SubFeed", "kind" : "def"}, {"label" : "toOutput", "tail" : "(dataObjectId: DataObjectId): FileSubFeed", "member" : "io.smartdatalake.workflow.FileSubFeed.toOutput", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#toOutput(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "clearDAGStart", "tail" : "(): FileSubFeed", "member" : "io.smartdatalake.workflow.FileSubFeed.clearDAGStart", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#clearDAGStart():io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "checkPartitionValuesColsExisting", "tail" : "(partitions: Set[String]): Boolean", "member" : "io.smartdatalake.workflow.FileSubFeed.checkPartitionValuesColsExisting", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#checkPartitionValuesColsExisting(partitions:Set[String]):Boolean", "kind" : "def"}, {"label" : "updatePartitionValues", "tail" : "(partitions: Seq[String], breakLineageOnChange: Boolean, newPartitionValues: Option[Seq[PartitionValues]])(session: SparkSession, context: ActionPipelineContext): FileSubFeed", "member" : "io.smartdatalake.workflow.FileSubFeed.updatePartitionValues", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#updatePartitionValues(partitions:Seq[String],breakLineageOnChange:Boolean,newPartitionValues:Option[Seq[io.smartdatalake.util.hdfs.PartitionValues]])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "clearPartitionValues", "tail" : "(breakLineageOnChange: Boolean)(session: SparkSession, context: ActionPipelineContext): FileSubFeed", "member" : "io.smartdatalake.workflow.FileSubFeed.clearPartitionValues", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#clearPartitionValues(breakLineageOnChange:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "breakLineage", "tail" : "(session: SparkSession, context: ActionPipelineContext): FileSubFeed", "member" : "io.smartdatalake.workflow.FileSubFeed.breakLineage", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#breakLineage(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.FileSubFeed#<init>", "error" : "unsupported entity"}, {"label" : "processedInputFileRefs", "tail" : ": Option[Seq[FileRef]]", "member" : "io.smartdatalake.workflow.FileSubFeed.processedInputFileRefs", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#processedInputFileRefs:Option[Seq[io.smartdatalake.workflow.dataobject.FileRef]]", "kind" : "val"}, {"label" : "isSkipped", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.FileSubFeed.isSkipped", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#isSkipped:Boolean", "kind" : "val"}, {"label" : "isDAGStart", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.FileSubFeed.isDAGStart", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#isDAGStart:Boolean", "kind" : "val"}, {"label" : "partitionValues", "tail" : ": Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.FileSubFeed.partitionValues", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "val"}, {"label" : "dataObjectId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.FileSubFeed.dataObjectId", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "fileRefs", "tail" : ": Option[Seq[FileRef]]", "member" : "io.smartdatalake.workflow.FileSubFeed.fileRefs", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#fileRefs:Option[Seq[io.smartdatalake.workflow.dataobject.FileRef]]", "kind" : "val"}, {"label" : "unionPartitionValues", "tail" : "(otherPartitionValues: Seq[PartitionValues]): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.SubFeed.unionPartitionValues", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#unionPartitionValues(otherPartitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "resultId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.SubFeed.resultId", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#resultId:String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/FileSubFeed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/FileSubFeed.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.HadoopFileStateId", "shortDescription" : "", "members_case class" : [{"label" : "getSortAttrs", "tail" : "(): (Int, Int)", "member" : "io.smartdatalake.workflow.HadoopFileStateId.getSortAttrs", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#getSortAttrs:(Int,Int)", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.HadoopFileStateId#<init>", "error" : "unsupported entity"}, {"label" : "attemptId", "tail" : ": Int", "member" : "io.smartdatalake.workflow.HadoopFileStateId.attemptId", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#attemptId:Int", "kind" : "val"}, {"label" : "runId", "tail" : ": Int", "member" : "io.smartdatalake.workflow.HadoopFileStateId.runId", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#runId:Int", "kind" : "val"}, {"label" : "appName", "tail" : ": String", "member" : "io.smartdatalake.workflow.HadoopFileStateId.appName", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#appName:String", "kind" : "val"}, {"label" : "path", "tail" : ": Path", "member" : "io.smartdatalake.workflow.HadoopFileStateId.path", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#path:org.apache.hadoop.fs.Path", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/HadoopFileStateId.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.InitSubFeed", "shortDescription" : "A InitSubFeed is used to initialize first Nodes of a DAG.", "members_case class" : [{"label" : "union", "tail" : "(other: SubFeed)(session: SparkSession, context: ActionPipelineContext): SubFeed", "member" : "io.smartdatalake.workflow.InitSubFeed.union", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#union(other:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SubFeed", "kind" : "def"}, {"label" : "toOutput", "tail" : "(dataObjectId: DataObjectId): FileSubFeed", "member" : "io.smartdatalake.workflow.InitSubFeed.toOutput", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#toOutput(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):io.smartdatalake.workflow.FileSubFeed", "kind" : "def"}, {"label" : "clearDAGStart", "tail" : "(): InitSubFeed", "member" : "io.smartdatalake.workflow.InitSubFeed.clearDAGStart", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#clearDAGStart():io.smartdatalake.workflow.InitSubFeed", "kind" : "def"}, {"label" : "updatePartitionValues", "tail" : "(partitions: Seq[String], breakLineageOnChange: Boolean, newPartitionValues: Option[Seq[PartitionValues]])(session: SparkSession, context: ActionPipelineContext): InitSubFeed", "member" : "io.smartdatalake.workflow.InitSubFeed.updatePartitionValues", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#updatePartitionValues(partitions:Seq[String],breakLineageOnChange:Boolean,newPartitionValues:Option[Seq[io.smartdatalake.util.hdfs.PartitionValues]])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.InitSubFeed", "kind" : "def"}, {"label" : "clearPartitionValues", "tail" : "(breakLineageOnChange: Boolean)(session: SparkSession, context: ActionPipelineContext): InitSubFeed", "member" : "io.smartdatalake.workflow.InitSubFeed.clearPartitionValues", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#clearPartitionValues(breakLineageOnChange:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.InitSubFeed", "kind" : "def"}, {"label" : "breakLineage", "tail" : "(session: SparkSession, context: ActionPipelineContext): InitSubFeed", "member" : "io.smartdatalake.workflow.InitSubFeed.breakLineage", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#breakLineage(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.InitSubFeed", "kind" : "def"}, {"label" : "isDAGStart", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.InitSubFeed.isDAGStart", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#isDAGStart:Boolean", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.InitSubFeed#<init>", "error" : "unsupported entity"}, {"label" : "isSkipped", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.InitSubFeed.isSkipped", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#isSkipped:Boolean", "kind" : "val"}, {"label" : "partitionValues", "tail" : ": Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.InitSubFeed.partitionValues", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "val"}, {"label" : "dataObjectId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.InitSubFeed.dataObjectId", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "unionPartitionValues", "tail" : "(otherPartitionValues: Seq[PartitionValues]): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.SubFeed.unionPartitionValues", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#unionPartitionValues(otherPartitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "resultId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.SubFeed.resultId", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#resultId:String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/InitSubFeed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/InitSubFeed.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.PrimaryKeyConstraintViolationException", "shortDescription" : "", "members_class" : [{"member" : "io.smartdatalake.workflow.PrimaryKeyConstraintViolationException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/workflow\/PrimaryKeyConstraintViolationException.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.ProcessingLogicException", "shortDescription" : "Exception to signal that a configured pipeline can't be executed properly", "members_class" : [{"member" : "io.smartdatalake.workflow.ProcessingLogicException#<init>", "error" : "unsupported entity"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/workflow\/ProcessingLogicException.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.SparkSubFeed", "shortDescription" : "A SparkSubFeed is used to transport DataFrame's between Actions.", "object" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html", "members_object" : [{"label" : "fromSubFeed", "tail" : "(subFeed: SubFeed)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.fromSubFeed", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#fromSubFeed(subFeed:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "getFilterCol", "tail" : "(): Option[Column]", "member" : "io.smartdatalake.workflow.SparkSubFeed.getFilterCol", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#getFilterCol:Option[org.apache.spark.sql.Column]", "kind" : "def"}, {"label" : "hasReusableDataFrame", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.SparkSubFeed.hasReusableDataFrame", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#hasReusableDataFrame:Boolean", "kind" : "def"}, {"label" : "isStreaming", "tail" : "(): Option[Boolean]", "member" : "io.smartdatalake.workflow.SparkSubFeed.isStreaming", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#isStreaming:Option[Boolean]", "kind" : "def"}, {"label" : "persist", "tail" : "(): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.persist", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#persist:io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "clearFilter", "tail" : "(breakLineageOnChange: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.clearFilter", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#clearFilter(breakLineageOnChange:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "union", "tail" : "(other: SubFeed)(session: SparkSession, context: ActionPipelineContext): SubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.union", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#union(other:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SubFeed", "kind" : "def"}, {"label" : "toOutput", "tail" : "(dataObjectId: DataObjectId): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.toOutput", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#toOutput(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "clearDAGStart", "tail" : "(): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.clearDAGStart", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#clearDAGStart():io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "movePartitionColumnsLast", "tail" : "(partitions: Seq[String]): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.movePartitionColumnsLast", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#movePartitionColumnsLast(partitions:Seq[String]):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "updatePartitionValues", "tail" : "(partitions: Seq[String], breakLineageOnChange: Boolean, newPartitionValues: Option[Seq[PartitionValues]])(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.updatePartitionValues", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#updatePartitionValues(partitions:Seq[String],breakLineageOnChange:Boolean,newPartitionValues:Option[Seq[io.smartdatalake.util.hdfs.PartitionValues]])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "clearPartitionValues", "tail" : "(breakLineageOnChange: Boolean)(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.clearPartitionValues", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#clearPartitionValues(breakLineageOnChange:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"label" : "breakLineage", "tail" : "(session: SparkSession, context: ActionPipelineContext): SparkSubFeed", "member" : "io.smartdatalake.workflow.SparkSubFeed.breakLineage", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#breakLineage(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SparkSubFeed", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.SparkSubFeed#<init>", "error" : "unsupported entity"}, {"label" : "filter", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.SparkSubFeed.filter", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#filter:Option[String]", "kind" : "val"}, {"label" : "isDummy", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.SparkSubFeed.isDummy", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#isDummy:Boolean", "kind" : "val"}, {"label" : "isSkipped", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.SparkSubFeed.isSkipped", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#isSkipped:Boolean", "kind" : "val"}, {"label" : "isDAGStart", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.SparkSubFeed.isDAGStart", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#isDAGStart:Boolean", "kind" : "val"}, {"label" : "partitionValues", "tail" : ": Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.SparkSubFeed.partitionValues", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "val"}, {"label" : "dataObjectId", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.SparkSubFeed.dataObjectId", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "dataFrame", "tail" : ": Option[DataFrame]", "member" : "io.smartdatalake.workflow.SparkSubFeed.dataFrame", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#dataFrame:Option[org.apache.spark.sql.DataFrame]", "kind" : "val"}, {"label" : "unionPartitionValues", "tail" : "(otherPartitionValues: Seq[PartitionValues]): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.SubFeed.unionPartitionValues", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#unionPartitionValues(otherPartitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "resultId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.SubFeed.resultId", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#resultId:String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/SparkSubFeed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/SparkSubFeed.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.SubFeed", "members_trait" : [{"label" : "unionPartitionValues", "tail" : "(otherPartitionValues: Seq[PartitionValues]): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.SubFeed.unionPartitionValues", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#unionPartitionValues(otherPartitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "resultId", "tail" : "(): String", "member" : "io.smartdatalake.workflow.SubFeed.resultId", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#resultId:String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/SubFeed.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "union", "tail" : "(other: SubFeed)(session: SparkSession, context: ActionPipelineContext): SubFeed", "member" : "io.smartdatalake.workflow.SubFeed.union", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#union(other:io.smartdatalake.workflow.SubFeed)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SubFeed", "kind" : "abstract def"}, {"label" : "toOutput", "tail" : "(dataObjectId: DataObjectId): SubFeed", "member" : "io.smartdatalake.workflow.SubFeed.toOutput", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#toOutput(dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):io.smartdatalake.workflow.SubFeed", "kind" : "abstract def"}, {"label" : "clearDAGStart", "tail" : "(): SubFeed", "member" : "io.smartdatalake.workflow.SubFeed.clearDAGStart", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#clearDAGStart():io.smartdatalake.workflow.SubFeed", "kind" : "abstract def"}, {"label" : "updatePartitionValues", "tail" : "(partitions: Seq[String], breakLineageOnChange: Boolean, newPartitionValues: Option[Seq[PartitionValues]])(session: SparkSession, context: ActionPipelineContext): SubFeed", "member" : "io.smartdatalake.workflow.SubFeed.updatePartitionValues", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#updatePartitionValues(partitions:Seq[String],breakLineageOnChange:Boolean,newPartitionValues:Option[Seq[io.smartdatalake.util.hdfs.PartitionValues]])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SubFeed", "kind" : "abstract def"}, {"label" : "clearPartitionValues", "tail" : "(breakLineageOnChange: Boolean)(session: SparkSession, context: ActionPipelineContext): SubFeed", "member" : "io.smartdatalake.workflow.SubFeed.clearPartitionValues", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#clearPartitionValues(breakLineageOnChange:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SubFeed", "kind" : "abstract def"}, {"label" : "breakLineage", "tail" : "(session: SparkSession, context: ActionPipelineContext): SubFeed", "member" : "io.smartdatalake.workflow.SubFeed.breakLineage", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#breakLineage(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):io.smartdatalake.workflow.SubFeed", "kind" : "abstract def"}, {"label" : "isSkipped", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.SubFeed.isSkipped", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#isSkipped:Boolean", "kind" : "abstract def"}, {"label" : "isDAGStart", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.SubFeed.isDAGStart", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#isDAGStart:Boolean", "kind" : "abstract def"}, {"label" : "partitionValues", "tail" : "(): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.SubFeed.partitionValues", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "abstract def"}, {"label" : "dataObjectId", "tail" : "(): DataObjectId", "member" : "io.smartdatalake.workflow.SubFeed.dataObjectId", "link" : "io\/smartdatalake\/workflow\/SubFeed.html#dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "abstract def"}], "shortDescription" : "A SubFeed transports references to data between Actions.", "object" : "io\/smartdatalake\/workflow\/SubFeed$.html", "members_object" : [{"label" : "filterPartitionValues", "tail" : "(partitionValues: Seq[PartitionValues], partitions: Seq[String]): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.SubFeed.filterPartitionValues", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#filterPartitionValues(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],partitions:Seq[String]):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/SubFeed$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "io\/smartdatalake\/workflow\/SubFeed.html", "kind" : "trait"}], "io.smartdatalake.util.secrets" : [{"name" : "io.smartdatalake.util.secrets.ClearTextSecretProvider", "shortDescription" : "Provide a secret in clear text in the configuration entry.", "object" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html", "members_object" : [{"label" : "getSecret", "tail" : "(name: String): String", "member" : "io.smartdatalake.util.secrets.ClearTextSecretProvider.getSecret", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#getSecret(name:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/ClearTextSecretProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.util.secrets.DatabricksSecretProvider", "shortDescription" : "Define a secret provider for a specific Databricks secret scope.", "members_class" : [{"label" : "getSecret", "tail" : "(name: String): String", "member" : "io.smartdatalake.util.secrets.DatabricksSecretProvider.getSecret", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#getSecret(name:String):String", "kind" : "def"}, {"member" : "io.smartdatalake.util.secrets.DatabricksSecretProvider#<init>", "error" : "unsupported entity"}, {"member" : "io.smartdatalake.util.secrets.DatabricksSecretProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/util\/secrets\/DatabricksSecretProvider.html", "kind" : "class"}, {"name" : "io.smartdatalake.util.secrets.EnvironmentVariableSecretProvider", "shortDescription" : "Read a secret from an environment variable.", "object" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html", "members_object" : [{"label" : "getSecret", "tail" : "(name: String): String", "member" : "io.smartdatalake.util.secrets.EnvironmentVariableSecretProvider.getSecret", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#getSecret(name:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/EnvironmentVariableSecretProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.util.secrets.FileSecretProvider", "shortDescription" : "Define a secret provider for a specific file.", "object" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html", "members_class" : [{"label" : "getSecret", "tail" : "(name: String): String", "member" : "io.smartdatalake.util.secrets.FileSecretProvider.getSecret", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#getSecret(name:String):String", "kind" : "def"}, {"member" : "io.smartdatalake.util.secrets.FileSecretProvider#<init>", "error" : "unsupported entity"}, {"member" : "io.smartdatalake.util.secrets.FileSecretProvider#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "getSecretFromFile", "tail" : "(file: String, name: String): String", "member" : "io.smartdatalake.util.secrets.FileSecretProvider.getSecretFromFile", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#getSecretFromFile(file:String,name:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/util\/secrets\/FileSecretProvider.html", "kind" : "class"}, {"name" : "io.smartdatalake.util.secrets.GenericFileSecretProvider", "shortDescription" : "Read a secret from a property file, where the filename is provided directly in the configuration entry.", "object" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html", "members_object" : [{"label" : "getSecret", "tail" : "(name: String): String", "member" : "io.smartdatalake.util.secrets.GenericFileSecretProvider.getSecret", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#getSecret(name:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/GenericFileSecretProvider$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "io.smartdatalake.util.secrets.SecretProvider", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "getSecret", "tail" : "(name: String): String", "member" : "io.smartdatalake.util.secrets.SecretProvider.getSecret", "link" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html#getSecret(name:String):String", "kind" : "abstract def"}], "shortDescription" : "Interface to by implement by a SecretProvider.", "trait" : "io\/smartdatalake\/util\/secrets\/SecretProvider.html", "kind" : "trait"}, {"name" : "io.smartdatalake.util.secrets.SecretProviderConfig", "shortDescription" : "Configuration to register a SecretProvider.", "members_case class" : [{"member" : "io.smartdatalake.util.secrets.SecretProviderConfig#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.util.secrets.SecretProviderConfig.options", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "className", "tail" : ": String", "member" : "io.smartdatalake.util.secrets.SecretProviderConfig.className", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#className:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/util\/secrets\/SecretProviderConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.util.secrets.SecretsUtil", "shortDescription" : "", "object" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html", "members_object" : [{"label" : "getSecret", "tail" : "(secretConfigValue: String): String", "member" : "io.smartdatalake.util.secrets.SecretsUtil.getSecret", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#getSecret(secretConfigValue:String):String", "kind" : "def"}, {"label" : "registerProvider", "tail" : "(id: String, provider: SecretProvider): Unit", "member" : "io.smartdatalake.util.secrets.SecretsUtil.registerProvider", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#registerProvider(id:String,provider:io.smartdatalake.util.secrets.SecretProvider):Unit", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/secrets\/SecretsUtil$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "io" : [], "scala.collection.compat" : [], "io.smartdatalake.workflow.action.customlogic" : [{"name" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreator", "members_trait" : [{"label" : "schema", "tail" : "(session: SparkSession, config: Map[String, String]): Option[StructType]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreator.schema", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#schema(session:org.apache.spark.sql.SparkSession,config:Map[String,String]):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "exec", "tail" : "(session: SparkSession, config: Map[String, String]): DataFrame", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreator.exec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html#exec(session:org.apache.spark.sql.SparkSession,config:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "abstract def"}], "shortDescription" : "Interface to define custom logic for DataFrame creation", "trait" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreator.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig", "shortDescription" : "Configuration of a custom Spark-DataFrame creator as part of CustomDfDataObjectDefine a exec function which receives a map of options and returns a DataFrame to be used as input.", "object" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html", "members_object" : [{"label" : "fnExecType", "tail" : "", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.fnExecType", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#fnExecType=(org.apache.spark.sql.SparkSession,Map[String,String])=>org.apache.spark.sql.DataFrame", "kind" : "type"}, {"label" : "fnSchemaType", "tail" : "", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.fnSchemaType", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#fnSchemaType=(org.apache.spark.sql.SparkSession,Map[String,String])=>Option[org.apache.spark.sql.types.StructType]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#toString():String", "kind" : "def"}, {"label" : "schema", "tail" : "(session: SparkSession): Option[StructType]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.schema", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#schema(implicitsession:org.apache.spark.sql.SparkSession):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "exec", "tail" : "(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.exec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#exec(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "impl", "tail" : ": CustomDfCreator", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.impl", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#impl:io.smartdatalake.workflow.action.customlogic.CustomDfCreator", "kind" : "val"}, {"label" : "fnEmptySchema", "tail" : ": fnSchemaType", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.fnEmptySchema", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#fnEmptySchema:io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.fnSchemaType", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.options", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "scalaCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.scalaCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#scalaCode:Option[String]", "kind" : "val"}, {"label" : "scalaFile", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.scalaFile", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#scalaFile:Option[String]", "kind" : "val"}, {"label" : "className", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.className", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#className:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorWrapper", "shortDescription" : "", "members_class" : [{"label" : "schema", "tail" : "(session: SparkSession, config: Map[String, String]): Option[StructType]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorWrapper.schema", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#schema(session:org.apache.spark.sql.SparkSession,config:Map[String,String]):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "exec", "tail" : "(session: SparkSession, config: Map[String, String]): DataFrame", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorWrapper.exec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#exec(session:org.apache.spark.sql.SparkSession,config:Map[String,String]):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorWrapper#<init>", "error" : "unsupported entity"}, {"label" : "fnSchema", "tail" : ": fnSchemaType", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorWrapper.fnSchema", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#fnSchema:io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.fnSchemaType", "kind" : "val"}, {"label" : "fnExec", "tail" : ": fnExecType", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfCreatorWrapper.fnExec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#fnExec:io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig.fnExecType", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfCreatorWrapper.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformer", "members_trait" : [{"label" : "transformPartitionValues", "tail" : "(options: Map[String, String], partitionValues: Seq[PartitionValues]): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformer.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#transformPartitionValues(options:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transform", "tail" : "(session: SparkSession, options: Map[String, String], dfs: Map[String, DataFrame]): Map[String, DataFrame]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformer.transform", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html#transform(session:org.apache.spark.sql.SparkSession,options:Map[String,String],dfs:Map[String,org.apache.spark.sql.DataFrame]):Map[String,org.apache.spark.sql.DataFrame]", "kind" : "abstract def"}], "shortDescription" : "Interface to define a custom Spark-DataFrame transformation (n:m)Same trait as CustomDfTransformer, but multiple input and outputs supported.", "trait" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformer.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig", "shortDescription" : "Configuration of a custom Spark-DataFrame transformation between several inputs and outputs (n:m).", "object" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html", "members_object" : [{"label" : "fnTransformType", "tail" : "", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.fnTransformType", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#fnTransformType=(org.apache.spark.sql.SparkSession,Map[String,String],Map[String,org.apache.spark.sql.DataFrame])=>Map[String,org.apache.spark.sql.DataFrame]", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "transformPartitionValues", "tail" : "(actionId: ActionId, partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#transformPartitionValues(actionId:io.smartdatalake.config.SdlConfigObject.ActionId,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "transform", "tail" : "(actionId: ActionId, partitionValues: Seq[PartitionValues], dfs: Map[String, DataFrame])(session: SparkSession, context: ActionPipelineContext): Map[String, DataFrame]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.transform", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#transform(actionId:io.smartdatalake.config.SdlConfigObject.ActionId,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],dfs:Map[String,org.apache.spark.sql.DataFrame])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[String,org.apache.spark.sql.DataFrame]", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#toString():String", "kind" : "def"}, {"label" : "impl", "tail" : ": Option[CustomDfsTransformer]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.impl", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#impl:Option[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformer]", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig#<init>", "error" : "unsupported entity"}, {"label" : "runtimeOptions", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.runtimeOptions", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#runtimeOptions:Option[Map[String,String]]", "kind" : "val"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.options", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "sqlCode", "tail" : ": Option[Map[DataObjectId, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.sqlCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#sqlCode:Option[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "val"}, {"label" : "scalaCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.scalaCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#scalaCode:Option[String]", "kind" : "val"}, {"label" : "scalaFile", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.scalaFile", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#scalaFile:Option[String]", "kind" : "val"}, {"label" : "className", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig.className", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#className:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfsTransformerConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformer", "members_trait" : [{"label" : "transformPartitionValues", "tail" : "(options: Map[String, String], partitionValues: Seq[PartitionValues]): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformer.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#transformPartitionValues(options:Map[String,String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues]):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transform", "tail" : "(session: SparkSession, options: Map[String, String], df: DataFrame, dataObjectId: String): DataFrame", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformer.transform", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html#transform(session:org.apache.spark.sql.SparkSession,options:Map[String,String],df:org.apache.spark.sql.DataFrame,dataObjectId:String):org.apache.spark.sql.DataFrame", "kind" : "abstract def"}], "shortDescription" : "Interface to define a custom Spark-DataFrame transformation (1:1)", "trait" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformer.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig", "shortDescription" : "Configuration of a custom Spark-DataFrame transformation between one input and one output (1:1)Define a transform function which receives a DataObjectIds, a DataFrames and a map of options and has to return aDataFrame, see also CustomDfTransformer.", "object" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html", "members_object" : [{"label" : "fnTransformType", "tail" : "", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.fnTransformType", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#fnTransformType=(org.apache.spark.sql.SparkSession,Map[String,String],org.apache.spark.sql.DataFrame,String)=>org.apache.spark.sql.DataFrame", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "transformPartitionValues", "tail" : "(actionId: ActionId, partitionValues: Seq[PartitionValues])(context: ActionPipelineContext): Map[PartitionValues, PartitionValues]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.transformPartitionValues", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#transformPartitionValues(actionId:io.smartdatalake.config.SdlConfigObject.ActionId,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Map[io.smartdatalake.util.hdfs.PartitionValues,io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "transform", "tail" : "(actionId: ActionId, partitionValues: Seq[PartitionValues], df: DataFrame, dataObjectId: DataObjectId)(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.transform", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#transform(actionId:io.smartdatalake.config.SdlConfigObject.ActionId,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],df:org.apache.spark.sql.DataFrame,dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#toString():String", "kind" : "def"}, {"label" : "impl", "tail" : ": Option[CustomDfTransformer]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.impl", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#impl:Option[io.smartdatalake.workflow.action.customlogic.CustomDfTransformer]", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig#<init>", "error" : "unsupported entity"}, {"label" : "runtimeOptions", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.runtimeOptions", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#runtimeOptions:Option[Map[String,String]]", "kind" : "val"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.options", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "pythonCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.pythonCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#pythonCode:Option[String]", "kind" : "val"}, {"label" : "pythonFile", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.pythonFile", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#pythonFile:Option[String]", "kind" : "val"}, {"label" : "sqlCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.sqlCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#sqlCode:Option[String]", "kind" : "val"}, {"label" : "scalaCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.scalaCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#scalaCode:Option[String]", "kind" : "val"}, {"label" : "scalaFile", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.scalaFile", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#scalaFile:Option[String]", "kind" : "val"}, {"label" : "className", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig.className", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#className:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomDfTransformerConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "exec", "tail" : "(session: SparkSession, config: Map[String, String]): InputStream", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreator.exec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html#exec(session:org.apache.spark.sql.SparkSession,config:Map[String,String]):java.io.InputStream", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreator.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig", "shortDescription" : "", "members_case class" : [{"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#toString():String", "kind" : "def"}, {"label" : "exec", "tail" : "(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig.exec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#exec(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "impl", "tail" : ": CustomFileCreator", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig.impl", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#impl:io.smartdatalake.workflow.action.customlogic.CustomFileCreator", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig.options", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "scalaCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig.scalaCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#scalaCode:Option[String]", "kind" : "val"}, {"label" : "scalaFile", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig.scalaFile", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#scalaFile:Option[String]", "kind" : "val"}, {"label" : "className", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig.className", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#className:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorWrapper", "shortDescription" : "", "members_class" : [{"label" : "exec", "tail" : "(session: SparkSession, config: Map[String, String]): InputStream", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorWrapper.exec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#exec(session:org.apache.spark.sql.SparkSession,config:Map[String,String]):java.io.InputStream", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorWrapper#<init>", "error" : "unsupported entity"}, {"label" : "fnExec", "tail" : ": (SparkSession, Map[String, String]) ⇒ InputStream", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileCreatorWrapper.fnExec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#fnExec:(org.apache.spark.sql.SparkSession,Map[String,String])=>java.io.InputStream", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileCreatorWrapper.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformer", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "transform", "tail" : "(options: Map[String, String], input: FSDataInputStream, output: FSDataOutputStream): Option[Exception]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformer.transform", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html#transform(options:Map[String,String],input:org.apache.hadoop.fs.FSDataInputStream,output:org.apache.hadoop.fs.FSDataOutputStream):Option[Exception]", "kind" : "abstract def"}], "shortDescription" : "Interface to define custom file transformation for CustomFileAction", "trait" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformer.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig", "shortDescription" : "Configuration of custom file transformation between one input and one output (1:1)", "members_case class" : [{"label" : "transform", "tail" : "(input: FSDataInputStream, output: FSDataOutputStream): Option[Exception]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig.transform", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#transform(input:org.apache.hadoop.fs.FSDataInputStream,output:org.apache.hadoop.fs.FSDataOutputStream):Option[Exception]", "kind" : "def"}, {"label" : "impl", "tail" : ": CustomFileTransformer", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig.impl", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#impl:io.smartdatalake.workflow.action.customlogic.CustomFileTransformer", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig.options", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "scalaCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig.scalaCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#scalaCode:Option[String]", "kind" : "val"}, {"label" : "scalaFile", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig.scalaFile", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#scalaFile:Option[String]", "kind" : "val"}, {"label" : "className", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig.className", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#className:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerWrapper", "shortDescription" : "", "members_class" : [{"label" : "transform", "tail" : "(options: Map[String, String], input: FSDataInputStream, output: FSDataOutputStream): Option[Exception]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerWrapper.transform", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#transform(options:Map[String,String],input:org.apache.hadoop.fs.FSDataInputStream,output:org.apache.hadoop.fs.FSDataOutputStream):Option[Exception]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerWrapper#<init>", "error" : "unsupported entity"}, {"label" : "fnExec", "tail" : ": (Map[String, String], FSDataInputStream, FSDataOutputStream, Logger) ⇒ Option[Exception]", "member" : "io.smartdatalake.workflow.action.customlogic.CustomFileTransformerWrapper.fnExec", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#fnExec:(Map[String,String],org.apache.hadoop.fs.FSDataInputStream,org.apache.hadoop.fs.FSDataOutputStream,org.slf4j.Logger)=>Option[Exception]", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "io\/smartdatalake\/workflow\/action\/customlogic\/CustomFileTransformerWrapper.html", "kind" : "class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.PythonUDFCreatorConfig", "shortDescription" : "Configuration to register a Python UDF in the spark session of SmartDataLake.", "members_case class" : [{"member" : "io.smartdatalake.workflow.action.customlogic.PythonUDFCreatorConfig#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.PythonUDFCreatorConfig.options", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "pythonCode", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.PythonUDFCreatorConfig.pythonCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#pythonCode:Option[String]", "kind" : "val"}, {"label" : "pythonFile", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.action.customlogic.PythonUDFCreatorConfig.pythonFile", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#pythonFile:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/customlogic\/PythonUDFCreatorConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.action.customlogic.SparkUDFCreator", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "get", "tail" : "(options: Map[String, String]): UserDefinedFunction", "member" : "io.smartdatalake.workflow.action.customlogic.SparkUDFCreator.get", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html#get(options:Map[String,String]):org.apache.spark.sql.expressions.UserDefinedFunction", "kind" : "abstract def"}], "shortDescription" : "Interface to create a UserDefinedFunction object to be registered as udf.", "trait" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreator.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig", "shortDescription" : "Configuration to register a UserDefinedFunction in the spark session of SmartDataLake.", "members_case class" : [{"member" : "io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig.options", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "className", "tail" : ": String", "member" : "io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig.className", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#className:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/action\/customlogic\/SparkUDFCreatorConfig.html", "kind" : "case class"}], "io.smartdatalake.util.hdfs" : [{"name" : "io.smartdatalake.util.hdfs.PartitionValues", "shortDescription" : "A partition is defined by values for its partition columns.", "members_case class" : [{"label" : "getMapString", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.util.hdfs.PartitionValues.getMapString", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#getMapString:Map[String,String]", "kind" : "def"}, {"label" : "addKey", "tail" : "(key: String, value: Any): PartitionValues", "member" : "io.smartdatalake.util.hdfs.PartitionValues.addKey", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#addKey(key:String,value:Any):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "filterKeys", "tail" : "(colNames: Seq[String]): PartitionValues", "member" : "io.smartdatalake.util.hdfs.PartitionValues.filterKeys", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#filterKeys(colNames:Seq[String]):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "isDefinedAt", "tail" : "(colName: String): Boolean", "member" : "io.smartdatalake.util.hdfs.PartitionValues.isDefinedAt", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#isDefinedAt(colName:String):Boolean", "kind" : "def"}, {"label" : "keys", "tail" : "(): Set[String]", "member" : "io.smartdatalake.util.hdfs.PartitionValues.keys", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#keys:Set[String]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): Boolean", "member" : "io.smartdatalake.util.hdfs.PartitionValues.nonEmpty", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#nonEmpty:Boolean", "kind" : "def"}, {"label" : "isEmpty", "tail" : "(): Boolean", "member" : "io.smartdatalake.util.hdfs.PartitionValues.isEmpty", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#isEmpty:Boolean", "kind" : "def"}, {"label" : "get", "tail" : "(colName: String): Option[Any]", "member" : "io.smartdatalake.util.hdfs.PartitionValues.get", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#get(colName:String):Option[Any]", "kind" : "def"}, {"label" : "apply", "tail" : "(colName: String): Any", "member" : "io.smartdatalake.util.hdfs.PartitionValues.apply", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#apply(colName:String):Any", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.util.hdfs.PartitionValues.toString", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#toString():String", "kind" : "def"}, {"member" : "io.smartdatalake.util.hdfs.PartitionValues#<init>", "error" : "unsupported entity"}, {"label" : "elements", "tail" : ": Map[String, Any]", "member" : "io.smartdatalake.util.hdfs.PartitionValues.elements", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#elements:Map[String,Any]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/util\/hdfs\/PartitionValues.html", "kind" : "case class"}, {"name" : "io.smartdatalake.util.hdfs.SparkRepartitionDef", "shortDescription" : "This controls repartitioning of the DataFrame before writing with Spark to Hadoop.", "members_case class" : [{"label" : "renameFiles", "tail" : "(fileRefs: Seq[FileRef])(filesystem: FileSystem): Unit", "member" : "io.smartdatalake.util.hdfs.SparkRepartitionDef.renameFiles", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#renameFiles(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitfilesystem:org.apache.hadoop.fs.FileSystem):Unit", "kind" : "def"}, {"label" : "prepareDataFrame", "tail" : "(df: DataFrame, partitions: Seq[String], partitionValues: Seq[PartitionValues], dataObjectId: DataObjectId): DataFrame", "member" : "io.smartdatalake.util.hdfs.SparkRepartitionDef.prepareDataFrame", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#prepareDataFrame(df:org.apache.spark.sql.DataFrame,partitions:Seq[String],partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],dataObjectId:io.smartdatalake.config.SdlConfigObject.DataObjectId):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "io.smartdatalake.util.hdfs.SparkRepartitionDef#<init>", "error" : "unsupported entity"}, {"label" : "filename", "tail" : ": Option[String]", "member" : "io.smartdatalake.util.hdfs.SparkRepartitionDef.filename", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#filename:Option[String]", "kind" : "val"}, {"label" : "sortCols", "tail" : ": Seq[String]", "member" : "io.smartdatalake.util.hdfs.SparkRepartitionDef.sortCols", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#sortCols:Seq[String]", "kind" : "val"}, {"label" : "keyCols", "tail" : ": Seq[String]", "member" : "io.smartdatalake.util.hdfs.SparkRepartitionDef.keyCols", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#keyCols:Seq[String]", "kind" : "val"}, {"label" : "numberOfTasksPerPartition", "tail" : ": Int", "member" : "io.smartdatalake.util.hdfs.SparkRepartitionDef.numberOfTasksPerPartition", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#numberOfTasksPerPartition:Int", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/util\/hdfs\/SparkRepartitionDef.html", "kind" : "case class"}], "io.smartdatalake.workflow.dataobject" : [{"name" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject", "shortDescription" : "DataObject of type JDBC \/ Access.", "object" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): AccessTableDataObject", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.AccessTableDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "dropTable", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.dropTable", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#dropTable(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "isTableExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.isTableExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#isTableExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "isDbExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.isDbExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#isDbExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "getDataFrameByFramework", "tail" : "(doPersist: Boolean)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.getDataFrameByFramework", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getDataFrameByFramework(doPersist:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "table", "tail" : ": Table", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.table", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#table:io.smartdatalake.workflow.dataobject.Table", "kind" : "var"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.AccessTableDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "isPKcandidateKey", "tail" : "(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.isPKcandidateKey", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#isPKcandidateKey(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "getPKviolators", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKviolators", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getPKviolators(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKnulls", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKnulls", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getPKnulls(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKduplicates", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKduplicates", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getPKduplicates(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "tableSchema", "tail" : ": StructType", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.tableSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#tableSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/AccessTableDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject", "shortDescription" : "Exports a util DataFrame that contains properties and metadata extracted from all io.smartdatalake.workflow.action.Actionsthat are registered in the current InstanceRegistry.", "object" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): ActionsExporterDataObject", "member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.ActionsExporterDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[ActionsExporterDataObject]", "member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.ActionsExporterDataObject]", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "config", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject.config", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#config:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.ActionsExporterDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/ActionsExporterDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject", "shortDescription" : "A io.smartdatalake.workflow.dataobject.DataObject backed by an Avro data source.", "object" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): AvroFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.AvroFileDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#options:Map[String,String]", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "format", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.format", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#format:String", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "filenameColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.filenameColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#filenameColumn:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "sparkRepartition", "tail" : ": Option[SparkRepartitionDef]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.sparkRepartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#sparkRepartition:Option[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.schema", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "avroOptions", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.avroOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#avroOptions:Option[Map[String,String]]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.AvroFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "filterPartitionsExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.filterPartitionsExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#filterPartitionsExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStreamingDataFrame", "tail" : "(options: Map[String, String], pipelineSchema: Option[StructType])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getStreamingDataFrame(options:Map[String,String],pipelineSchema:Option[org.apache.spark.sql.types.StructType])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSchema", "tail" : "(sourceExists: Boolean): Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getSchema(sourceExists:Boolean):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "afterRead", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.afterRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#afterRead(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeWrite", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.beforeWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#beforeWrite(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "applyAcls", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.applyAcls", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#applyAcls(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllFiles", "tail" : "(path: Path)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAllFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#deleteAllFiles(path:org.apache.hadoop.fs.Path)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(path: String): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#relativizePath(path:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getConcretePaths", "tail" : "(pv: PartitionValues)(session: SparkSession): Seq[Path]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getConcretePaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getConcretePaths(pv:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Seq[org.apache.hadoop.fs.Path]", "kind" : "def"}, {"label" : "deletePartitionsFiles", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitionsFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#deletePartitionsFiles(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "checkFilesExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.checkFilesExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#checkFilesExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "failIfFilesMissing", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.failIfFilesMissing", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#failIfFilesMissing:Boolean", "kind" : "def"}, {"label" : "connection", "tail" : ": Option[HadoopFileConnection]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#connection:Option[io.smartdatalake.workflow.connection.HadoopFileConnection]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#partitionLayout():Option[String]", "kind" : "final def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/AvroFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions", "members_trait" : [{"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "abstract def"}, {"label" : "partitions", "tail" : "(): Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html#partitions:Seq[String]", "kind" : "abstract def"}], "shortDescription" : "A trait to be implemented by DataObjects which store partitioned data", "trait" : "io\/smartdatalake\/workflow\/dataobject\/CanHandlePartitions.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.dataobject.ConnectionTestException", "shortDescription" : "", "members_case class" : [{"member" : "io.smartdatalake.workflow.dataobject.ConnectionTestException#<init>", "error" : "unsupported entity"}, {"label" : "ex", "tail" : ": Throwable", "member" : "io.smartdatalake.workflow.dataobject.ConnectionTestException.ex", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#ex:Throwable", "kind" : "val"}, {"label" : "msg", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ConnectionTestException.msg", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#msg:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/ConnectionTestException.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject", "shortDescription" : "A DataObject backed by a comma-separated value (CSV) data source.", "object" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): CsvFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.CsvFileDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "beforeWrite", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.beforeWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#beforeWrite(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#options:Map[String,String]", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "format", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.format", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#format:String", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "filenameColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.filenameColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#filenameColumn:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "sparkRepartition", "tail" : ": Option[SparkRepartitionDef]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.sparkRepartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#sparkRepartition:Option[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "dateColumnType", "tail" : ": DateColumnType", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.dateColumnType", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#dateColumnType:io.smartdatalake.definitions.DateColumnType.DateColumnType", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.schema", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "csvOptions", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.csvOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#csvOptions:Map[String,String]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.CsvFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "filterPartitionsExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.filterPartitionsExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#filterPartitionsExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStreamingDataFrame", "tail" : "(options: Map[String, String], pipelineSchema: Option[StructType])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getStreamingDataFrame(options:Map[String,String],pipelineSchema:Option[org.apache.spark.sql.types.StructType])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSchema", "tail" : "(sourceExists: Boolean): Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getSchema(sourceExists:Boolean):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "afterRead", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.afterRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#afterRead(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "applyAcls", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.applyAcls", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#applyAcls(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllFiles", "tail" : "(path: Path)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAllFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#deleteAllFiles(path:org.apache.hadoop.fs.Path)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(path: String): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#relativizePath(path:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getConcretePaths", "tail" : "(pv: PartitionValues)(session: SparkSession): Seq[Path]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getConcretePaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getConcretePaths(pv:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Seq[org.apache.hadoop.fs.Path]", "kind" : "def"}, {"label" : "deletePartitionsFiles", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitionsFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#deletePartitionsFiles(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "checkFilesExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.checkFilesExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#checkFilesExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "failIfFilesMissing", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.failIfFilesMissing", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#failIfFilesMissing:Boolean", "kind" : "def"}, {"label" : "connection", "tail" : ": Option[HadoopFileConnection]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#connection:Option[io.smartdatalake.workflow.connection.HadoopFileConnection]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#partitionLayout():Option[String]", "kind" : "final def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/CsvFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject", "shortDescription" : "Generic DataObject containing a config object.", "object" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): CustomDfDataObject", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.CustomDfDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "creator", "tail" : ": CustomDfCreatorConfig", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.creator", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#creator:io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.CustomDfDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/CustomDfDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject", "shortDescription" : "", "object" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): CustomFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.CustomFileDataObject", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(filePath: String): String", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#relativizePath(filePath:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "expectedPartitionsCondition", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "def"}, {"label" : "partitions", "tail" : "(): Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#partitions:Seq[String]", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#path:String", "kind" : "def"}, {"label" : "saveMode", "tail" : "(): SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#partitionLayout():Option[String]", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "creator", "tail" : ": CustomFileCreatorConfig", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.creator", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#creator:io.smartdatalake.workflow.action.customlogic.CustomFileCreatorConfig", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.CustomFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/CustomFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.DataObject", "members_trait" : [{"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "metadata", "tail" : "(): Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.DataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "abstract def"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.DataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "abstract val"}, {"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.config.ParsableFromConfig.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html#factory:io.smartdatalake.config.FromConfigFactory[CO]", "kind" : "abstract def"}], "shortDescription" : "This is the root trait for every DataObject.", "trait" : "io\/smartdatalake\/workflow\/dataobject\/DataObject.html", "kind" : "trait"}, {"name" : "io.smartdatalake.workflow.dataobject.DataObjectMetadata", "shortDescription" : "Additional metadata for a DataObject", "members_case class" : [{"member" : "io.smartdatalake.workflow.dataobject.DataObjectMetadata#<init>", "error" : "unsupported entity"}, {"label" : "tags", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectMetadata.tags", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#tags:Seq[String]", "kind" : "val"}, {"label" : "subjectArea", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectMetadata.subjectArea", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#subjectArea:Option[String]", "kind" : "val"}, {"label" : "layer", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectMetadata.layer", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#layer:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectMetadata.description", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#description:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectMetadata.name", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#name:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectMetadata.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject", "shortDescription" : "Exports a util DataFrame that contains properties and metadata extracted from all DataObjectsthat are registered in the current InstanceRegistry.", "object" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): DataObjectsExporterDataObject", "member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObjectsExporterDataObject]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject]", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "config", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject.config", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#config:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.DataObjectsExporterDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/DataObjectsExporterDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject", "shortDescription" : "A DataObject backed by an Microsoft Excel data source.", "object" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): ExcelFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.ExcelFileDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "beforeWrite", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.beforeWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#beforeWrite(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterRead", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.afterRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#afterRead(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#options:Map[String,String]", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "format", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.format", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#format:String", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "filenameColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.filenameColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#filenameColumn:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "sparkRepartition", "tail" : ": Option[SparkRepartitionDef]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.sparkRepartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#sparkRepartition:Option[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.schema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "excelOptions", "tail" : ": ExcelOptions", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.excelOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#excelOptions:io.smartdatalake.workflow.dataobject.ExcelOptions", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.ExcelFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "filterPartitionsExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.filterPartitionsExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#filterPartitionsExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStreamingDataFrame", "tail" : "(options: Map[String, String], pipelineSchema: Option[StructType])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getStreamingDataFrame(options:Map[String,String],pipelineSchema:Option[org.apache.spark.sql.types.StructType])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSchema", "tail" : "(sourceExists: Boolean): Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getSchema(sourceExists:Boolean):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "applyAcls", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.applyAcls", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#applyAcls(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllFiles", "tail" : "(path: Path)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAllFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#deleteAllFiles(path:org.apache.hadoop.fs.Path)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(path: String): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#relativizePath(path:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getConcretePaths", "tail" : "(pv: PartitionValues)(session: SparkSession): Seq[Path]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getConcretePaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getConcretePaths(pv:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Seq[org.apache.hadoop.fs.Path]", "kind" : "def"}, {"label" : "deletePartitionsFiles", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitionsFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#deletePartitionsFiles(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "checkFilesExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.checkFilesExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#checkFilesExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "failIfFilesMissing", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.failIfFilesMissing", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#failIfFilesMissing:Boolean", "kind" : "def"}, {"label" : "connection", "tail" : ": Option[HadoopFileConnection]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#connection:Option[io.smartdatalake.workflow.connection.HadoopFileConnection]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#partitionLayout():Option[String]", "kind" : "final def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/ExcelFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.ExcelOptions", "shortDescription" : "Options passed to org.apache.spark.sql.DataFrameReader and org.apache.spark.sql.DataFrameWriter forreading and writing Microsoft Excel files.", "members_case class" : [{"label" : "toMap", "tail" : "(schema: Option[StructType]): Map[String, Option[Any]]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.toMap", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#toMap(schema:Option[org.apache.spark.sql.types.StructType]):Map[String,Option[Any]]", "kind" : "def"}, {"label" : "getDataAddress", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.getDataAddress", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#getDataAddress:Option[String]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.ExcelOptions#<init>", "error" : "unsupported entity"}, {"label" : "excerptSize", "tail" : ": Option[Int]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.excerptSize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#excerptSize:Option[Int]", "kind" : "val"}, {"label" : "maxRowsInMemory", "tail" : ": Option[Int]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.maxRowsInMemory", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#maxRowsInMemory:Option[Int]", "kind" : "val"}, {"label" : "dateFormat", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.dateFormat", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#dateFormat:Option[String]", "kind" : "val"}, {"label" : "timestampFormat", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.timestampFormat", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#timestampFormat:Option[String]", "kind" : "val"}, {"label" : "inferSchema", "tail" : ": Option[Boolean]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.inferSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#inferSchema:Option[Boolean]", "kind" : "val"}, {"label" : "treatEmptyValuesAsNulls", "tail" : ": Option[Boolean]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.treatEmptyValuesAsNulls", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#treatEmptyValuesAsNulls:Option[Boolean]", "kind" : "val"}, {"label" : "useHeader", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.useHeader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#useHeader:Boolean", "kind" : "val"}, {"label" : "rowLimit", "tail" : ": Option[Int]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.rowLimit", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#rowLimit:Option[Int]", "kind" : "val"}, {"label" : "endColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.endColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#endColumn:Option[String]", "kind" : "val"}, {"label" : "startColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.startColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#startColumn:Option[String]", "kind" : "val"}, {"label" : "numLinesToSkip", "tail" : ": Option[Int]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.numLinesToSkip", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#numLinesToSkip:Option[Int]", "kind" : "val"}, {"label" : "sheetName", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ExcelOptions.sheetName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#sheetName:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/ExcelOptions.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.ForeignKey", "shortDescription" : "Foreign key definition", "members_case class" : [{"member" : "io.smartdatalake.workflow.dataobject.ForeignKey#<init>", "error" : "unsupported entity"}, {"label" : "name", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ForeignKey.name", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#name:Option[String]", "kind" : "val"}, {"label" : "columns", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.ForeignKey.columns", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#columns:Map[String,String]", "kind" : "val"}, {"label" : "table", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ForeignKey.table", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#table:String", "kind" : "val"}, {"label" : "db", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ForeignKey.db", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#db:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/ForeignKey.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject", "shortDescription" : "DataObject of type Hive.", "object" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): HiveTableDataObject", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.HiveTableDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "dropTable", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.dropTable", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#dropTable(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitionsIfExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.deletePartitionsIfExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#deletePartitionsIfExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "isTableExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.isTableExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#isTableExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "isDbExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.isDbExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#isDbExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "hadoopPath", "tail" : "(session: SparkSession): Path", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.hadoopPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#hadoopPath(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.Path", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "numInitialHdfsPartitions", "tail" : ": Int", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.numInitialHdfsPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#numInitialHdfsPartitions:Int", "kind" : "val"}, {"label" : "table", "tail" : ": Table", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.table", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#table:io.smartdatalake.workflow.dataobject.Table", "kind" : "var"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "dateColumnType", "tail" : ": DateColumnType", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.dateColumnType", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#dateColumnType:io.smartdatalake.definitions.DateColumnType.DateColumnType", "kind" : "val"}, {"label" : "analyzeTableAfterWrite", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.analyzeTableAfterWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#analyzeTableAfterWrite:Boolean", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "path", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#path:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.HiveTableDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "isPKcandidateKey", "tail" : "(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.isPKcandidateKey", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#isPKcandidateKey(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "getPKviolators", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKviolators", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#getPKviolators(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKnulls", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKnulls", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#getPKnulls(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKduplicates", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKduplicates", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#getPKduplicates(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "tableSchema", "tail" : ": StructType", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.tableSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#tableSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/HiveTableDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.HttpProxyConfig", "shortDescription" : "", "members_case class" : [{"member" : "io.smartdatalake.workflow.dataobject.HttpProxyConfig#<init>", "error" : "unsupported entity"}, {"label" : "port", "tail" : ": Int", "member" : "io.smartdatalake.workflow.dataobject.HttpProxyConfig.port", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#port:Int", "kind" : "val"}, {"label" : "host", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.HttpProxyConfig.host", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#host:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/HttpProxyConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.HttpTimeoutConfig", "shortDescription" : "", "members_case class" : [{"member" : "io.smartdatalake.workflow.dataobject.HttpTimeoutConfig#<init>", "error" : "unsupported entity"}, {"label" : "readTimeoutMs", "tail" : ": Int", "member" : "io.smartdatalake.workflow.dataobject.HttpTimeoutConfig.readTimeoutMs", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#readTimeoutMs:Int", "kind" : "val"}, {"label" : "connectionTimeoutMs", "tail" : ": Int", "member" : "io.smartdatalake.workflow.dataobject.HttpTimeoutConfig.connectionTimeoutMs", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#connectionTimeoutMs:Int", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/HttpTimeoutConfig.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject", "shortDescription" : "DataObject of type JDBC.", "object" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): JdbcTableDataObject", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.JdbcTableDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "getJdbcColumnMetadata", "tail" : "(): Seq[JdbcColumn]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.getJdbcColumnMetadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getJdbcColumnMetadata:Seq[io.smartdatalake.workflow.dataobject.JdbcColumn]", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "dropTable", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.dropTable", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#dropTable(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllData", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.deleteAllData", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#deleteAllData(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "isTableExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.isTableExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#isTableExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "isDbExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.isDbExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#isDbExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "postRead", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.postRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#postRead(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preRead", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.preRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#preRead(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "columns", "tail" : ": Seq[JdbcColumn]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.columns", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#columns:Seq[io.smartdatalake.workflow.dataobject.JdbcColumn]", "kind" : "lazy val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "connection", "tail" : ": JdbcTableConnection", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#connection:io.smartdatalake.workflow.connection.JdbcTableConnection", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "virtualPartitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.virtualPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#virtualPartitions:Seq[String]", "kind" : "val"}, {"label" : "jdbcOptions", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.jdbcOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#jdbcOptions:Map[String,String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": ConnectionId", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "jdbcFetchSize", "tail" : ": Int", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.jdbcFetchSize", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#jdbcFetchSize:Int", "kind" : "val"}, {"label" : "table", "tail" : ": Table", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.table", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#table:io.smartdatalake.workflow.dataobject.Table", "kind" : "var"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "postWriteSql", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.postWriteSql", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#postWriteSql:Option[String]", "kind" : "val"}, {"label" : "preWriteSql", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.preWriteSql", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#preWriteSql:Option[String]", "kind" : "val"}, {"label" : "postReadSql", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.postReadSql", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#postReadSql:Option[String]", "kind" : "val"}, {"label" : "preReadSql", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.preReadSql", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#preReadSql:Option[String]", "kind" : "val"}, {"label" : "createSql", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.createSql", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#createSql:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.JdbcTableDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "isPKcandidateKey", "tail" : "(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.isPKcandidateKey", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#isPKcandidateKey(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "getPKviolators", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKviolators", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getPKviolators(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKnulls", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKnulls", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getPKnulls(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKduplicates", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKduplicates", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getPKduplicates(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "tableSchema", "tail" : ": StructType", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.tableSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#tableSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/JdbcTableDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject", "shortDescription" : "A io.smartdatalake.workflow.dataobject.DataObject backed by a JSON data source.", "object" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): JsonFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.JsonFileDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "beforeWrite", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.beforeWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#beforeWrite(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "afterRead", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.afterRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#afterRead(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#options:Map[String,String]", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "format", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.format", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#format:String", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "filenameColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.filenameColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#filenameColumn:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "stringify", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.stringify", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#stringify:Boolean", "kind" : "val"}, {"label" : "sparkRepartition", "tail" : ": Option[SparkRepartitionDef]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.sparkRepartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#sparkRepartition:Option[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.schema", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "jsonOptions", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.jsonOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#jsonOptions:Option[Map[String,String]]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.JsonFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "filterPartitionsExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.filterPartitionsExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#filterPartitionsExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStreamingDataFrame", "tail" : "(options: Map[String, String], pipelineSchema: Option[StructType])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getStreamingDataFrame(options:Map[String,String],pipelineSchema:Option[org.apache.spark.sql.types.StructType])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSchema", "tail" : "(sourceExists: Boolean): Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getSchema(sourceExists:Boolean):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "applyAcls", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.applyAcls", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#applyAcls(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllFiles", "tail" : "(path: Path)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAllFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#deleteAllFiles(path:org.apache.hadoop.fs.Path)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(path: String): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#relativizePath(path:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getConcretePaths", "tail" : "(pv: PartitionValues)(session: SparkSession): Seq[Path]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getConcretePaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getConcretePaths(pv:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Seq[org.apache.hadoop.fs.Path]", "kind" : "def"}, {"label" : "deletePartitionsFiles", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitionsFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#deletePartitionsFiles(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "checkFilesExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.checkFilesExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#checkFilesExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "failIfFilesMissing", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.failIfFilesMissing", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#failIfFilesMissing:Boolean", "kind" : "def"}, {"label" : "connection", "tail" : ": Option[HadoopFileConnection]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#connection:Option[io.smartdatalake.workflow.connection.HadoopFileConnection]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#partitionLayout():Option[String]", "kind" : "final def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/JsonFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject", "shortDescription" : "A io.smartdatalake.workflow.dataobject.DataObject backed by an Apache Hive data source.", "object" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): ParquetFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.ParquetFileDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "beforeWrite", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.beforeWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#beforeWrite(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#options:Map[String,String]", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "format", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.format", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#format:String", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "filenameColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.filenameColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#filenameColumn:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "sparkRepartition", "tail" : ": Option[SparkRepartitionDef]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.sparkRepartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#sparkRepartition:Option[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.schema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "parquetOptions", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.parquetOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#parquetOptions:Option[Map[String,String]]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.ParquetFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "filterPartitionsExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.filterPartitionsExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#filterPartitionsExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStreamingDataFrame", "tail" : "(options: Map[String, String], pipelineSchema: Option[StructType])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getStreamingDataFrame(options:Map[String,String],pipelineSchema:Option[org.apache.spark.sql.types.StructType])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSchema", "tail" : "(sourceExists: Boolean): Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getSchema(sourceExists:Boolean):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "afterRead", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.afterRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#afterRead(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "applyAcls", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.applyAcls", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#applyAcls(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllFiles", "tail" : "(path: Path)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAllFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#deleteAllFiles(path:org.apache.hadoop.fs.Path)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(path: String): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#relativizePath(path:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getConcretePaths", "tail" : "(pv: PartitionValues)(session: SparkSession): Seq[Path]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getConcretePaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getConcretePaths(pv:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Seq[org.apache.hadoop.fs.Path]", "kind" : "def"}, {"label" : "deletePartitionsFiles", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitionsFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#deletePartitionsFiles(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "checkFilesExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.checkFilesExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#checkFilesExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "failIfFilesMissing", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.failIfFilesMissing", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#failIfFilesMissing:Boolean", "kind" : "def"}, {"label" : "connection", "tail" : ": Option[HadoopFileConnection]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#connection:Option[io.smartdatalake.workflow.connection.HadoopFileConnection]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#partitionLayout():Option[String]", "kind" : "final def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/ParquetFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject", "shortDescription" : "Checks for Primary Key violations for all DataObjects with Primary Keys defined that are registered in the current InstanceRegistry.", "object" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html", "members_object" : [{"label" : "colListType", "tail" : "(noColumnsPossible: Boolean): ArrayType", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.colListType", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#colListType(noColumnsPossible:Boolean):org.apache.spark.sql.types.ArrayType", "kind" : "def"}, {"label" : "columnValueName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.columnValueName", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#columnValueName:String", "kind" : "val"}, {"label" : "columnNameName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.columnNameName", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#columnNameName:String", "kind" : "val"}, {"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): PKViolatorsDataObject", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.PKViolatorsDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[PKViolatorsDataObject]", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.PKViolatorsDataObject]", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "flattenOutput", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.flattenOutput", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#flattenOutput:Boolean", "kind" : "val"}, {"label" : "config", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.config", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#config:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.PKViolatorsDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/PKViolatorsDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.RawFileDataObject", "shortDescription" : "DataObject of type raw for files with unknown content.", "object" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): RawFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.RawFileDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "format", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.format", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#format:String", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "filenameColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.filenameColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#filenameColumn:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "sparkRepartition", "tail" : ": Option[SparkRepartitionDef]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.sparkRepartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#sparkRepartition:Option[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.schema", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#options:Map[String,String]", "kind" : "val"}, {"label" : "customFormat", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.customFormat", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#customFormat:Option[String]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.RawFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "filterPartitionsExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.filterPartitionsExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#filterPartitionsExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStreamingDataFrame", "tail" : "(options: Map[String, String], pipelineSchema: Option[StructType])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getStreamingDataFrame(options:Map[String,String],pipelineSchema:Option[org.apache.spark.sql.types.StructType])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSchema", "tail" : "(sourceExists: Boolean): Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getSchema(sourceExists:Boolean):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "afterRead", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.afterRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#afterRead(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "beforeWrite", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.beforeWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#beforeWrite(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "applyAcls", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.applyAcls", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#applyAcls(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllFiles", "tail" : "(path: Path)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAllFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#deleteAllFiles(path:org.apache.hadoop.fs.Path)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(path: String): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#relativizePath(path:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getConcretePaths", "tail" : "(pv: PartitionValues)(session: SparkSession): Seq[Path]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getConcretePaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getConcretePaths(pv:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Seq[org.apache.hadoop.fs.Path]", "kind" : "def"}, {"label" : "deletePartitionsFiles", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitionsFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#deletePartitionsFiles(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "checkFilesExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.checkFilesExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#checkFilesExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "failIfFilesMissing", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.failIfFilesMissing", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#failIfFilesMissing:Boolean", "kind" : "def"}, {"label" : "connection", "tail" : ": Option[HadoopFileConnection]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#connection:Option[io.smartdatalake.workflow.connection.HadoopFileConnection]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#partitionLayout():Option[String]", "kind" : "final def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/RawFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject", "shortDescription" : "Connects to SFtp filesNeeds java library \"com.hieronymus % sshj % 0.21.1\"The following authentication mechanisms are supported-> public\/private-key: private key must be saved in ~\/.ssh, public key must be registered on server.", "object" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): SFtpFileRefDataObject", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(filePath: String): String", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#relativizePath(filePath:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "partitionLayout", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#partitionLayout:Option[String]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": ConnectionId", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.SFtpFileRefDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#getPath:String", "kind" : "def"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#fileName:String", "kind" : "val"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/SFtpFileRefDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.Table", "shortDescription" : "Table attributes", "members_case class" : [{"label" : "fullName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.Table.fullName", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#fullName:String", "kind" : "def"}, {"label" : "overrideDb", "tail" : "(dbParam: Option[String]): Table", "member" : "io.smartdatalake.workflow.dataobject.Table.overrideDb", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#overrideDb(dbParam:Option[String]):io.smartdatalake.workflow.dataobject.Table", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.Table.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#toString():String", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.Table#<init>", "error" : "unsupported entity"}, {"label" : "options", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.dataobject.Table.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#options:Option[Map[String,String]]", "kind" : "val"}, {"label" : "foreignKeys", "tail" : ": Option[Seq[ForeignKey]]", "member" : "io.smartdatalake.workflow.dataobject.Table.foreignKeys", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#foreignKeys:Option[Seq[io.smartdatalake.workflow.dataobject.ForeignKey]]", "kind" : "val"}, {"label" : "primaryKey", "tail" : ": Option[Seq[String]]", "member" : "io.smartdatalake.workflow.dataobject.Table.primaryKey", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#primaryKey:Option[Seq[String]]", "kind" : "val"}, {"label" : "query", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.Table.query", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#query:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.Table.name", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#name:String", "kind" : "val"}, {"label" : "db", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.Table.db", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#db:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/Table.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/Table.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject", "shortDescription" : "", "object" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): TickTockHiveTableDataObject", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "dropTable", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.dropTable", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#dropTable(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "isTableExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.isTableExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#isTableExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "isDbExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.isDbExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#isDbExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "writeDataFrameInternal", "tail" : "(df: DataFrame, createTableOnly: Boolean, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.writeDataFrameInternal", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#writeDataFrameInternal(df:org.apache.spark.sql.DataFrame,createTableOnly:Boolean,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "hadoopPath", "tail" : "(session: SparkSession): Path", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.hadoopPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#hadoopPath(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.Path", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "numInitialHdfsPartitions", "tail" : ": Int", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.numInitialHdfsPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#numInitialHdfsPartitions:Int", "kind" : "val"}, {"label" : "table", "tail" : ": Table", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.table", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#table:io.smartdatalake.workflow.dataobject.Table", "kind" : "var"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "dateColumnType", "tail" : ": DateColumnType", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.dateColumnType", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#dateColumnType:io.smartdatalake.definitions.DateColumnType.DateColumnType", "kind" : "val"}, {"label" : "analyzeTableAfterWrite", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.analyzeTableAfterWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#analyzeTableAfterWrite:Boolean", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "path", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#path:Option[String]", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.TickTockHiveTableDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "isPKcandidateKey", "tail" : "(session: SparkSession, context: ActionPipelineContext): Boolean", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.isPKcandidateKey", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#isPKcandidateKey(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Boolean", "kind" : "def"}, {"label" : "getPKviolators", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKviolators", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#getPKviolators(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKnulls", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKnulls", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#getPKnulls(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getPKduplicates", "tail" : "(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.getPKduplicates", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#getPKduplicates(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "tableSchema", "tail" : ": StructType", "member" : "io.smartdatalake.workflow.dataobject.TableDataObject.tableSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#tableSchema:org.apache.spark.sql.types.StructType", "kind" : "val"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/TickTockHiveTableDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject", "shortDescription" : "DataObject to call webservice and return response as InputStreamThis is implemented as FileRefDataObject because the response is treated as some file content.", "object" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): WebserviceFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.WebserviceFileDataObject", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(filePath: String): String", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#relativizePath(filePath:String):String", "kind" : "def"}, {"label" : "path", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#path:String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(query: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#createInputStream(query:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postResponse", "tail" : "(body: Array[Byte], query: Option[String]): Array[Byte]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.postResponse", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#postResponse(body:Array[Byte],query:Option[String]):Array[Byte]", "kind" : "def"}, {"label" : "getResponse", "tail" : "(query: Option[String]): Array[Byte]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.getResponse", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getResponse(query:Option[String]):Array[Byte]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "expectedPartitionsCondition", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "def"}, {"label" : "partitions", "tail" : "(): Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#partitions:Seq[String]", "kind" : "def"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "tika", "tail" : ": Tika", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.tika", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#tika:org.apache.tika.Tika", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#partitionLayout:Option[String]", "kind" : "val"}, {"label" : "partitionDefs", "tail" : ": Seq[WebservicePartitionDefinition]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.partitionDefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#partitionDefs:Seq[io.smartdatalake.workflow.dataobject.WebservicePartitionDefinition]", "kind" : "val"}, {"label" : "followRedirects", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.followRedirects", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#followRedirects:Boolean", "kind" : "val"}, {"label" : "proxy", "tail" : ": Option[HttpProxyConfig]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.proxy", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#proxy:Option[io.smartdatalake.workflow.dataobject.HttpProxyConfig]", "kind" : "val"}, {"label" : "writeMethod", "tail" : ": WebserviceWriteMethod", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.writeMethod", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#writeMethod:io.smartdatalake.util.webservice.WebserviceWriteMethod.WebserviceWriteMethod", "kind" : "val"}, {"label" : "mimeType", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.mimeType", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#mimeType:Option[String]", "kind" : "val"}, {"label" : "authMode", "tail" : ": Option[AuthMode]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.authMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#authMode:Option[io.smartdatalake.definitions.AuthMode]", "kind" : "val"}, {"label" : "readTimeoutMs", "tail" : ": Option[Int]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.readTimeoutMs", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#readTimeoutMs:Option[Int]", "kind" : "val"}, {"label" : "timeouts", "tail" : ": Option[HttpTimeoutConfig]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.timeouts", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#timeouts:Option[io.smartdatalake.workflow.dataobject.HttpTimeoutConfig]", "kind" : "val"}, {"label" : "additionalHeaders", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.additionalHeaders", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#additionalHeaders:Map[String,String]", "kind" : "val"}, {"label" : "url", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.url", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#url:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.WebserviceFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/WebserviceFileDataObject.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.WebservicePartitionDefinition", "shortDescription" : "", "members_case class" : [{"member" : "io.smartdatalake.workflow.dataobject.WebservicePartitionDefinition#<init>", "error" : "unsupported entity"}, {"label" : "values", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.WebservicePartitionDefinition.values", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#values:Seq[String]", "kind" : "val"}, {"label" : "name", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.WebservicePartitionDefinition.name", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#name:String", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/WebservicePartitionDefinition.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject", "shortDescription" : "A io.smartdatalake.workflow.dataobject.DataObject backed by an XML data source.", "object" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): XmlFileDataObject", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.fromConfig", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.dataobject.XmlFileDataObject", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[DataObject]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.factory", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.dataobject.DataObject]", "kind" : "def"}, {"label" : "afterRead", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.afterRead", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#afterRead(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "options", "tail" : ": Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.options", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#options:Map[String,String]", "kind" : "val"}, {"label" : "fileName", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.fileName", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#fileName:String", "kind" : "val"}, {"label" : "format", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.format", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#format:String", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject#<init>", "error" : "unsupported entity"}, {"label" : "instanceRegistry", "tail" : ": InstanceRegistry", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.instanceRegistry", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#instanceRegistry:io.smartdatalake.config.InstanceRegistry", "kind" : "implicit val"}, {"label" : "metadata", "tail" : ": Option[DataObjectMetadata]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.metadata", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#metadata:Option[io.smartdatalake.workflow.dataobject.DataObjectMetadata]", "kind" : "val"}, {"label" : "expectedPartitionsCondition", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.expectedPartitionsCondition", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#expectedPartitionsCondition:Option[String]", "kind" : "val"}, {"label" : "filenameColumn", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.filenameColumn", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#filenameColumn:Option[String]", "kind" : "val"}, {"label" : "connectionId", "tail" : ": Option[ConnectionId]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.connectionId", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#connectionId:Option[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.acl", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "flatten", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.flatten", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#flatten:Boolean", "kind" : "val"}, {"label" : "sparkRepartition", "tail" : ": Option[SparkRepartitionDef]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.sparkRepartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#sparkRepartition:Option[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "val"}, {"label" : "saveMode", "tail" : ": SDLSaveMode", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.saveMode", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#saveMode:io.smartdatalake.definitions.SDLSaveMode.SDLSaveMode", "kind" : "val"}, {"label" : "schemaMin", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.schemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#schemaMin:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "schema", "tail" : ": Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.schema", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#schema:Option[org.apache.spark.sql.types.StructType]", "kind" : "val"}, {"label" : "partitions", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.partitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#partitions:Seq[String]", "kind" : "val"}, {"label" : "xmlOptions", "tail" : ": Option[Map[String, String]]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.xmlOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#xmlOptions:Option[Map[String,String]]", "kind" : "val"}, {"label" : "rowTag", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.rowTag", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#rowTag:Option[String]", "kind" : "val"}, {"label" : "path", "tail" : ": String", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.path", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#path:String", "kind" : "val"}, {"label" : "id", "tail" : ": DataObjectId", "member" : "io.smartdatalake.workflow.dataobject.XmlFileDataObject.id", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#id:io.smartdatalake.config.SdlConfigObject.DataObjectId", "kind" : "val"}, {"label" : "filterPartitionsExisting", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.filterPartitionsExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#filterPartitionsExisting(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "writeDataFrame", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues], isRecursiveInput: Boolean)(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.writeDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#writeDataFrame(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues],isRecursiveInput:Boolean)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "init", "tail" : "(df: DataFrame, partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.init", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#init(df:org.apache.spark.sql.DataFrame,partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "createReadSchema", "tail" : "(writeSchema: StructType)(session: SparkSession): StructType", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.createReadSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#createReadSchema(writeSchema:org.apache.spark.sql.types.StructType)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "getStreamingDataFrame", "tail" : "(options: Map[String, String], pipelineSchema: Option[StructType])(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getStreamingDataFrame(options:Map[String,String],pipelineSchema:Option[org.apache.spark.sql.types.StructType])(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getDataFrame", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getDataFrame(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "getSchema", "tail" : "(sourceExists: Boolean): Option[StructType]", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.getSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getSchema(sourceExists:Boolean):Option[org.apache.spark.sql.types.StructType]", "kind" : "def"}, {"label" : "beforeWrite", "tail" : "(df: DataFrame)(session: SparkSession): DataFrame", "member" : "io.smartdatalake.workflow.dataobject.SparkFileDataObject.beforeWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#beforeWrite(df:org.apache.spark.sql.DataFrame)(implicitsession:org.apache.spark.sql.SparkSession):org.apache.spark.sql.DataFrame", "kind" : "def"}, {"label" : "validateSchema", "tail" : "(df: DataFrame, schemaExpected: StructType, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchema", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#validateSchema(df:org.apache.spark.sql.DataFrame,schemaExpected:org.apache.spark.sql.types.StructType,role:String):Unit", "kind" : "def"}, {"label" : "validateSchemaMin", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.SchemaValidation.validateSchemaMin", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#validateSchemaMin(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "writeStreamingDataFrame", "tail" : "(df: DataFrame, trigger: Trigger, options: Map[String, String], checkpointLocation: String, queryName: String, outputMode: OutputMode)(session: SparkSession, context: ActionPipelineContext): StreamingQuery", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.writeStreamingDataFrame", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#writeStreamingDataFrame(df:org.apache.spark.sql.DataFrame,trigger:org.apache.spark.sql.streaming.Trigger,options:Map[String,String],checkpointLocation:String,queryName:String,outputMode:org.apache.spark.sql.streaming.OutputMode)(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):org.apache.spark.sql.streaming.StreamingQuery", "kind" : "def"}, {"label" : "streamingOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.dataobject.CanWriteDataFrame.streamingOptions", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#streamingOptions:Map[String,String]", "kind" : "def"}, {"label" : "addFieldIfNotExisting", "tail" : "(writeSchema: StructType, colName: String, dataType: DataType): StructType", "member" : "io.smartdatalake.workflow.dataobject.CanCreateDataFrame.addFieldIfNotExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#addFieldIfNotExisting(writeSchema:org.apache.spark.sql.types.StructType,colName:String,dataType:org.apache.spark.sql.types.DataType):org.apache.spark.sql.types.StructType", "kind" : "def"}, {"label" : "applyAcls", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.applyAcls", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#applyAcls(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAllFiles", "tail" : "(path: Path)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAllFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#deleteAllFiles(path:org.apache.hadoop.fs.Path)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteAll", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#deleteAll(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "createOutputStream", "tail" : "(path: String, overwrite: Boolean)(session: SparkSession): OutputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createOutputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#createOutputStream(path:String,overwrite:Boolean)(implicitsession:org.apache.spark.sql.SparkSession):java.io.OutputStream", "kind" : "def"}, {"label" : "createInputStream", "tail" : "(path: String)(session: SparkSession): InputStream", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createInputStream", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#createInputStream(path:String)(implicitsession:org.apache.spark.sql.SparkSession):java.io.InputStream", "kind" : "def"}, {"label" : "postWrite", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.postWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#postWrite(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "preWrite", "tail" : "(session: SparkSession, context: ActionPipelineContext): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.preWrite", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#preWrite(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Unit", "kind" : "def"}, {"label" : "getFileRefs", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getFileRefs(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "createEmptyPartition", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.createEmptyPartition", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#createEmptyPartition(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "relativizePath", "tail" : "(path: String): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.relativizePath", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#relativizePath(path:String):String", "kind" : "def"}, {"label" : "listPartitions", "tail" : "(session: SparkSession): Seq[PartitionValues]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.listPartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#listPartitions(implicitsession:org.apache.spark.sql.SparkSession):Seq[io.smartdatalake.util.hdfs.PartitionValues]", "kind" : "def"}, {"label" : "getConcretePaths", "tail" : "(pv: PartitionValues)(session: SparkSession): Seq[Path]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getConcretePaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getConcretePaths(pv:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Seq[org.apache.hadoop.fs.Path]", "kind" : "def"}, {"label" : "deletePartitionsFiles", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitionsFiles", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#deletePartitionsFiles(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deletePartitions", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deletePartitions", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#deletePartitions(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "deleteFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.deleteFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#deleteFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "checkFilesExisting", "tail" : "(session: SparkSession): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.checkFilesExisting", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#checkFilesExisting(implicitsession:org.apache.spark.sql.SparkSession):Boolean", "kind" : "def"}, {"label" : "filesystem", "tail" : "(session: SparkSession): FileSystem", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.filesystem", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#filesystem(implicitsession:org.apache.spark.sql.SparkSession):org.apache.hadoop.fs.FileSystem", "kind" : "def"}, {"label" : "getPath", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.getPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getPath:String", "kind" : "def"}, {"label" : "failIfFilesMissing", "tail" : "(): Boolean", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.failIfFilesMissing", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#failIfFilesMissing:Boolean", "kind" : "def"}, {"label" : "connection", "tail" : ": Option[HadoopFileConnection]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.connection", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#connection:Option[io.smartdatalake.workflow.connection.HadoopFileConnection]", "kind" : "val"}, {"label" : "partitionLayout", "tail" : "(): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.HadoopFileDataObject.partitionLayout", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#partitionLayout():Option[String]", "kind" : "final def"}, {"label" : "extractPartitionValuesFromPath", "tail" : "(filePath: String): PartitionValues", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.extractPartitionValuesFromPath", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#extractPartitionValuesFromPath(filePath:String):io.smartdatalake.util.hdfs.PartitionValues", "kind" : "def"}, {"label" : "getSearchPaths", "tail" : "(partitionValues: Seq[PartitionValues])(session: SparkSession): Seq[(PartitionValues, String)]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getSearchPaths", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getSearchPaths(partitionValues:Seq[io.smartdatalake.util.hdfs.PartitionValues])(implicitsession:org.apache.spark.sql.SparkSession):Seq[(io.smartdatalake.util.hdfs.PartitionValues,String)]", "kind" : "def"}, {"label" : "getPartitionString", "tail" : "(partitionValues: PartitionValues)(session: SparkSession): Option[String]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.getPartitionString", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getPartitionString(partitionValues:io.smartdatalake.util.hdfs.PartitionValues)(implicitsession:org.apache.spark.sql.SparkSession):Option[String]", "kind" : "def"}, {"label" : "translateFileRefs", "tail" : "(fileRefs: Seq[FileRef])(session: SparkSession, context: ActionPipelineContext): Seq[FileRef]", "member" : "io.smartdatalake.workflow.dataobject.FileRefDataObject.translateFileRefs", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#translateFileRefs(fileRefs:Seq[io.smartdatalake.workflow.dataobject.FileRef])(implicitsession:org.apache.spark.sql.SparkSession,implicitcontext:io.smartdatalake.workflow.ActionPipelineContext):Seq[io.smartdatalake.workflow.dataobject.FileRef]", "kind" : "def"}, {"label" : "prepare", "tail" : "(session: SparkSession): Unit", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.prepare", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#prepare(implicitsession:org.apache.spark.sql.SparkSession):Unit", "kind" : "def"}, {"label" : "separator", "tail" : ": Char", "member" : "io.smartdatalake.workflow.dataobject.FileDataObject.separator", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#separator:Char", "kind" : "val"}, {"label" : "validateSchemaHasPartitionCols", "tail" : "(df: DataFrame, role: String): Unit", "member" : "io.smartdatalake.workflow.dataobject.CanHandlePartitions.validateSchemaHasPartitionCols", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#validateSchemaHasPartitionCols(df:org.apache.spark.sql.DataFrame,role:String):Unit", "kind" : "def"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.atlasName", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.dataobject.DataObject.toStringShort", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#toStringShort:String", "kind" : "def"}, {"label" : "getConnectionReg", "tail" : "(connectionId: ConnectionId, registry: InstanceRegistry)(ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnectionReg", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getConnectionReg[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId,registry:io.smartdatalake.config.InstanceRegistry)(implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "getConnection", "tail" : "(connectionId: ConnectionId)(registry: InstanceRegistry, ct: ClassTag[T], tt: scala.reflect.api.JavaUniverse.TypeTag[T]): T", "member" : "io.smartdatalake.workflow.dataobject.DataObject.getConnection", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getConnection[T<:io.smartdatalake.workflow.connection.Connection](connectionId:io.smartdatalake.config.SdlConfigObject.ConnectionId)(implicitregistry:io.smartdatalake.config.InstanceRegistry,implicitct:scala.reflect.ClassTag[T],implicittt:reflect.runtime.universe.TypeTag[T]):T", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/dataobject\/XmlFileDataObject.html", "kind" : "case class"}], "io.smartdatalake.metrics" : [{"name" : "io.smartdatalake.metrics.NoMetricsFoundException", "shortDescription" : "", "members_case class" : [{"member" : "io.smartdatalake.metrics.NoMetricsFoundException#<init>", "error" : "unsupported entity"}, {"label" : "msg", "tail" : ": String", "member" : "io.smartdatalake.metrics.NoMetricsFoundException.msg", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#msg:String", "kind" : "val"}, {"label" : "getSuppressed", "tail" : "(): Array[Throwable]", "member" : "java.lang.Throwable.getSuppressed", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#getSuppressed():Array[Throwable]", "kind" : "final def"}, {"label" : "addSuppressed", "tail" : "(arg0: Throwable): Unit", "member" : "java.lang.Throwable.addSuppressed", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#addSuppressed(x$1:Throwable):Unit", "kind" : "final def"}, {"label" : "setStackTrace", "tail" : "(arg0: Array[StackTraceElement]): Unit", "member" : "java.lang.Throwable.setStackTrace", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#setStackTrace(x$1:Array[StackTraceElement]):Unit", "kind" : "def"}, {"label" : "getStackTrace", "tail" : "(): Array[StackTraceElement]", "member" : "java.lang.Throwable.getStackTrace", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#getStackTrace():Array[StackTraceElement]", "kind" : "def"}, {"label" : "fillInStackTrace", "tail" : "(): Throwable", "member" : "java.lang.Throwable.fillInStackTrace", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#fillInStackTrace():Throwable", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintWriter): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#printStackTrace(x$1:java.io.PrintWriter):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(arg0: PrintStream): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#printStackTrace(x$1:java.io.PrintStream):Unit", "kind" : "def"}, {"label" : "printStackTrace", "tail" : "(): Unit", "member" : "java.lang.Throwable.printStackTrace", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#printStackTrace():Unit", "kind" : "def"}, {"label" : "toString", "tail" : "(): String", "member" : "java.lang.Throwable.toString", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#toString():String", "kind" : "def"}, {"label" : "initCause", "tail" : "(arg0: Throwable): Throwable", "member" : "java.lang.Throwable.initCause", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#initCause(x$1:Throwable):Throwable", "kind" : "def"}, {"label" : "getCause", "tail" : "(): Throwable", "member" : "java.lang.Throwable.getCause", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#getCause():Throwable", "kind" : "def"}, {"label" : "getLocalizedMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getLocalizedMessage", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#getLocalizedMessage():String", "kind" : "def"}, {"label" : "getMessage", "tail" : "(): String", "member" : "java.lang.Throwable.getMessage", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#getMessage():String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/metrics\/NoMetricsFoundException.html", "kind" : "case class"}], "io.smartdatalake.workflow.connection" : [{"name" : "io.smartdatalake.workflow.connection.ConnectionMetadata", "shortDescription" : "Additional metadata for a Connection", "members_case class" : [{"member" : "io.smartdatalake.workflow.connection.ConnectionMetadata#<init>", "error" : "unsupported entity"}, {"label" : "tags", "tail" : ": Seq[String]", "member" : "io.smartdatalake.workflow.connection.ConnectionMetadata.tags", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#tags:Seq[String]", "kind" : "val"}, {"label" : "subjectArea", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.connection.ConnectionMetadata.subjectArea", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#subjectArea:Option[String]", "kind" : "val"}, {"label" : "layer", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.connection.ConnectionMetadata.layer", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#layer:Option[String]", "kind" : "val"}, {"label" : "description", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.connection.ConnectionMetadata.description", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#description:Option[String]", "kind" : "val"}, {"label" : "name", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.connection.ConnectionMetadata.name", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#name:Option[String]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/connection\/ConnectionMetadata.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.connection.HadoopFileConnection", "shortDescription" : "Connection information for files on hadoop", "object" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): HadoopFileConnection", "member" : "io.smartdatalake.workflow.connection.HadoopFileConnection.fromConfig", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.connection.HadoopFileConnection", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Connection]", "member" : "io.smartdatalake.workflow.connection.HadoopFileConnection.factory", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.connection.Connection]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.connection.HadoopFileConnection#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ConnectionMetadata]", "member" : "io.smartdatalake.workflow.connection.HadoopFileConnection.metadata", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#metadata:Option[io.smartdatalake.workflow.connection.ConnectionMetadata]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.connection.HadoopFileConnection.acl", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "pathPrefix", "tail" : ": String", "member" : "io.smartdatalake.workflow.connection.HadoopFileConnection.pathPrefix", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#pathPrefix:String", "kind" : "val"}, {"label" : "id", "tail" : ": ConnectionId", "member" : "io.smartdatalake.workflow.connection.HadoopFileConnection.id", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#id:io.smartdatalake.config.SdlConfigObject.ConnectionId", "kind" : "val"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.atlasName", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.toStringShort", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#toStringShort:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/connection\/HadoopFileConnection.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.connection.HiveTableConnection", "shortDescription" : "Connection information for hive tables", "object" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): HiveTableConnection", "member" : "io.smartdatalake.workflow.connection.HiveTableConnection.fromConfig", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.connection.HiveTableConnection", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Connection]", "member" : "io.smartdatalake.workflow.connection.HiveTableConnection.factory", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.connection.Connection]", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.connection.HiveTableConnection#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ConnectionMetadata]", "member" : "io.smartdatalake.workflow.connection.HiveTableConnection.metadata", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#metadata:Option[io.smartdatalake.workflow.connection.ConnectionMetadata]", "kind" : "val"}, {"label" : "acl", "tail" : ": Option[AclDef]", "member" : "io.smartdatalake.workflow.connection.HiveTableConnection.acl", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#acl:Option[io.smartdatalake.util.misc.AclDef]", "kind" : "val"}, {"label" : "pathPrefix", "tail" : ": String", "member" : "io.smartdatalake.workflow.connection.HiveTableConnection.pathPrefix", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#pathPrefix:String", "kind" : "val"}, {"label" : "db", "tail" : ": String", "member" : "io.smartdatalake.workflow.connection.HiveTableConnection.db", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#db:String", "kind" : "val"}, {"label" : "id", "tail" : ": ConnectionId", "member" : "io.smartdatalake.workflow.connection.HiveTableConnection.id", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#id:io.smartdatalake.config.SdlConfigObject.ConnectionId", "kind" : "val"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.atlasName", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.toStringShort", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#toStringShort:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/connection\/HiveTableConnection.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.connection.JdbcTableConnection", "shortDescription" : "Connection information for jdbc tables.", "object" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): JdbcTableConnection", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.fromConfig", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.connection.JdbcTableConnection", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Connection]", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.factory", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.connection.Connection]", "kind" : "def"}, {"label" : "pool", "tail" : ": GenericObjectPool[java.sql.Connection]", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.pool", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#pool:org.apache.commons.pool2.impl.GenericObjectPool[java.sql.Connection]", "kind" : "val"}, {"label" : "getAuthModeSparkOptions", "tail" : "(): Map[String, String]", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.getAuthModeSparkOptions", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#getAuthModeSparkOptions:Map[String,String]", "kind" : "def"}, {"label" : "test", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.test", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#test():Unit", "kind" : "def"}, {"label" : "execJdbcQuery", "tail" : "(sql: String, evalResultSet: (ResultSet) ⇒ A): A", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.execJdbcQuery", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#execJdbcQuery[A](sql:String,evalResultSet:java.sql.ResultSet=>A):A", "kind" : "def"}, {"label" : "execJdbcStatement", "tail" : "(sql: String, logging: Boolean): Boolean", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.execJdbcStatement", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#execJdbcStatement(sql:String,logging:Boolean):Boolean", "kind" : "def"}, {"label" : "execWithJdbcStatement", "tail" : "(func: (Statement) ⇒ A): A", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.execWithJdbcStatement", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#execWithJdbcStatement[A](func:java.sql.Statement=>A):A", "kind" : "def"}, {"label" : "execWithJdbcConnection", "tail" : "(func: (java.sql.Connection) ⇒ A): A", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.execWithJdbcConnection", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#execWithJdbcConnection[A](func:java.sql.Connection=>A):A", "kind" : "def"}, {"label" : "catalog", "tail" : ": SQLCatalog", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.catalog", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#catalog:io.smartdatalake.workflow.connection.SQLCatalog", "kind" : "val"}, {"member" : "io.smartdatalake.workflow.connection.JdbcTableConnection#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ConnectionMetadata]", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.metadata", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#metadata:Option[io.smartdatalake.workflow.connection.ConnectionMetadata]", "kind" : "val"}, {"label" : "connectionPoolMaxIdleTimeSec", "tail" : ": Int", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.connectionPoolMaxIdleTimeSec", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#connectionPoolMaxIdleTimeSec:Int", "kind" : "val"}, {"label" : "maxParallelConnections", "tail" : ": Int", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.maxParallelConnections", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#maxParallelConnections:Int", "kind" : "val"}, {"label" : "db", "tail" : ": Option[String]", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.db", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#db:Option[String]", "kind" : "val"}, {"label" : "authMode", "tail" : ": Option[AuthMode]", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.authMode", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#authMode:Option[io.smartdatalake.definitions.AuthMode]", "kind" : "val"}, {"label" : "driver", "tail" : ": String", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.driver", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#driver:String", "kind" : "val"}, {"label" : "url", "tail" : ": String", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.url", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#url:String", "kind" : "val"}, {"label" : "id", "tail" : ": ConnectionId", "member" : "io.smartdatalake.workflow.connection.JdbcTableConnection.id", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#id:io.smartdatalake.config.SdlConfigObject.ConnectionId", "kind" : "val"}, {"label" : "logger", "tail" : ": Logger", "member" : "io.smartdatalake.util.misc.SmartDataLakeLogger.logger", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#logger:org.slf4j.Logger", "kind" : "lazy val"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.atlasName", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.toStringShort", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#toStringShort:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/connection\/JdbcTableConnection.html", "kind" : "case class"}, {"name" : "io.smartdatalake.workflow.connection.SftpFileRefConnection", "shortDescription" : "SFTP Connection information", "object" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html", "members_object" : [{"label" : "fromConfig", "tail" : "(config: Config)(instanceRegistry: InstanceRegistry): SftpFileRefConnection", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.fromConfig", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#fromConfig(config:com.typesafe.config.Config)(implicitinstanceRegistry:io.smartdatalake.config.InstanceRegistry):io.smartdatalake.workflow.connection.SftpFileRefConnection", "kind" : "def"}, {"label" : "extract", "tail" : "(config: Config)(arg0: ConfigReader[T]): T", "member" : "io.smartdatalake.config.FromConfigFactory.extract", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#extract[T](config:com.typesafe.config.Config)(implicitevidence$1:configs.ConfigReader[T]):T", "kind" : "def"}, {"label" : "actionIdReader", "tail" : ": ConfigReader[ActionId]", "member" : "io.smartdatalake.config.ConfigImplicits.actionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#actionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ActionId]", "kind" : "implicit val"}, {"label" : "dataObjectIdReader", "tail" : ": ConfigReader[DataObjectId]", "member" : "io.smartdatalake.config.ConfigImplicits.dataObjectIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#dataObjectIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.DataObjectId]", "kind" : "implicit val"}, {"label" : "connectionIdReader", "tail" : ": ConfigReader[ConnectionId]", "member" : "io.smartdatalake.config.ConfigImplicits.connectionIdReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#connectionIdReader:configs.ConfigReader[io.smartdatalake.config.SdlConfigObject.ConnectionId]", "kind" : "implicit val"}, {"label" : "mapDataObjectIdStringReader", "tail" : "(mapReader: ConfigReader[Map[String, String]]): ConfigReader[Map[DataObjectId, String]]", "member" : "io.smartdatalake.config.ConfigImplicits.mapDataObjectIdStringReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#mapDataObjectIdStringReader(implicitmapReader:configs.ConfigReader[Map[String,String]]):configs.ConfigReader[Map[io.smartdatalake.config.SdlConfigObject.DataObjectId,String]]", "kind" : "implicit def"}, {"label" : "authModeReader", "tail" : ": ConfigReader[AuthMode]", "member" : "io.smartdatalake.config.ConfigImplicits.authModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#authModeReader:configs.ConfigReader[io.smartdatalake.definitions.AuthMode]", "kind" : "implicit val"}, {"label" : "conditionReader", "tail" : ": ConfigReader[Condition]", "member" : "io.smartdatalake.config.ConfigImplicits.conditionReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#conditionReader:configs.ConfigReader[io.smartdatalake.definitions.Condition]", "kind" : "implicit val"}, {"label" : "executionModeReader", "tail" : ": ConfigReader[ExecutionMode]", "member" : "io.smartdatalake.config.ConfigImplicits.executionModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#executionModeReader:configs.ConfigReader[io.smartdatalake.definitions.ExecutionMode]", "kind" : "implicit val"}, {"label" : "secretProviderConfigReader", "tail" : ": ConfigReader[SecretProviderConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.secretProviderConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#secretProviderConfigReader:configs.ConfigReader[io.smartdatalake.util.secrets.SecretProviderConfig]", "kind" : "implicit val"}, {"label" : "sparkRepartitionDefReader", "tail" : ": ConfigReader[SparkRepartitionDef]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkRepartitionDefReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#sparkRepartitionDefReader:configs.ConfigReader[io.smartdatalake.util.hdfs.SparkRepartitionDef]", "kind" : "implicit val"}, {"label" : "sparkUdfCreatorConfigReader", "tail" : ": ConfigReader[SparkUDFCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.sparkUdfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#sparkUdfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.SparkUDFCreatorConfig]", "kind" : "implicit val"}, {"label" : "customFileTransformerConfigReader", "tail" : ": ConfigReader[CustomFileTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customFileTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#customFileTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomFileTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfsTransformerConfigReader", "tail" : ": ConfigReader[CustomDfsTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfsTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#customDfsTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfsTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfTransformerConfigReader", "tail" : ": ConfigReader[CustomDfTransformerConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfTransformerConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#customDfTransformerConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfTransformerConfig]", "kind" : "implicit val"}, {"label" : "customDfCreatorConfigReader", "tail" : ": ConfigReader[CustomDfCreatorConfig]", "member" : "io.smartdatalake.config.ConfigImplicits.customDfCreatorConfigReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#customDfCreatorConfigReader:configs.ConfigReader[io.smartdatalake.workflow.action.customlogic.CustomDfCreatorConfig]", "kind" : "implicit val"}, {"label" : "outputModeReader", "tail" : ": ConfigReader[OutputMode]", "member" : "io.smartdatalake.config.ConfigImplicits.outputModeReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#outputModeReader:configs.ConfigReader[org.apache.spark.sql.streaming.OutputMode]", "kind" : "implicit val"}, {"label" : "structTypeReader", "tail" : ": ConfigReader[StructType]", "member" : "io.smartdatalake.config.ConfigImplicits.structTypeReader", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#structTypeReader:configs.ConfigReader[org.apache.spark.sql.types.StructType]", "kind" : "implicit val"}, {"label" : "sdlDefaultNaming", "tail" : "(): ConfigKeyNaming[A]", "member" : "io.smartdatalake.config.ConfigImplicits.sdlDefaultNaming", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#sdlDefaultNaming[A]:configs.ConfigKeyNaming[A]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "factory", "tail" : "(): FromConfigFactory[Connection]", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.factory", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#factory:io.smartdatalake.config.FromConfigFactory[io.smartdatalake.workflow.connection.Connection]", "kind" : "def"}, {"label" : "pool", "tail" : ": GenericObjectPool[SFTPClient]", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.pool", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#pool:org.apache.commons.pool2.impl.GenericObjectPool[net.schmizz.sshj.sftp.SFTPClient]", "kind" : "val"}, {"label" : "test", "tail" : "(): Unit", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.test", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#test():Unit", "kind" : "def"}, {"label" : "execWithSFtpClient", "tail" : "(func: (SFTPClient) ⇒ A): A", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.execWithSFtpClient", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#execWithSFtpClient[A](func:net.schmizz.sshj.sftp.SFTPClient=>A):A", "kind" : "def"}, {"member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection#<init>", "error" : "unsupported entity"}, {"label" : "metadata", "tail" : ": Option[ConnectionMetadata]", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.metadata", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#metadata:Option[io.smartdatalake.workflow.connection.ConnectionMetadata]", "kind" : "val"}, {"label" : "connectionPoolMaxIdleTimeSec", "tail" : ": Int", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.connectionPoolMaxIdleTimeSec", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#connectionPoolMaxIdleTimeSec:Int", "kind" : "val"}, {"label" : "maxParallelConnections", "tail" : ": Int", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.maxParallelConnections", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#maxParallelConnections:Int", "kind" : "val"}, {"label" : "ignoreHostKeyVerification", "tail" : ": Boolean", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.ignoreHostKeyVerification", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#ignoreHostKeyVerification:Boolean", "kind" : "val"}, {"label" : "authMode", "tail" : ": AuthMode", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.authMode", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#authMode:io.smartdatalake.definitions.AuthMode", "kind" : "val"}, {"label" : "port", "tail" : ": Int", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.port", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#port:Int", "kind" : "val"}, {"label" : "host", "tail" : ": String", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.host", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#host:String", "kind" : "val"}, {"label" : "id", "tail" : ": ConnectionId", "member" : "io.smartdatalake.workflow.connection.SftpFileRefConnection.id", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#id:io.smartdatalake.config.SdlConfigObject.ConnectionId", "kind" : "val"}, {"label" : "atlasName", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.atlasName", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#atlasName:String", "kind" : "def"}, {"label" : "toStringShort", "tail" : "(): String", "member" : "io.smartdatalake.workflow.connection.Connection.toStringShort", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#toStringShort:String", "kind" : "def"}, {"label" : "atlasQualifiedName", "tail" : "(prefix: String): String", "member" : "io.smartdatalake.workflow.AtlasExportable.atlasQualifiedName", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#atlasQualifiedName(prefix:String):String", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "io\/smartdatalake\/workflow\/connection\/SftpFileRefConnection.html", "kind" : "case class"}]};